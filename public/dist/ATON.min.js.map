{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","bPickable","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","layers","disable","enable","hide","show","disablePicking","enablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","Utils","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","url","onComplete","_assetsManager","then","modelVisitor","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","_assetReqComplete","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","STD_FOV","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","_pmremGenerator","PMREMGenerator","_renderer","CCtarget","WebGLCubeRenderTarget","format","RGBEFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","push","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","addDefaults","_loader","MaterialLoader","white","Color","black","green","yellow","red","blue","orange","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","selector","color","flatShading","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","mat","jsonfile","addMaterial","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","TextureLoader","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","index","substring","startsWith","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","magFilter","LinearFilter","v","prec","parseFloat","toPrecision","mstr","str","replace","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","ext","getFileExtension","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","PATH_COLLECTION","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","urls","Array","isArray","forEach","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","transform","setRotation","setScale","parid","childid","nopicking","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","PATH_RESTAPI","r","AudioHub","_listener","AudioListener","AudioLoader","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","enabled","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","handleMotion","isTransitioning","controller0","negate","fv","multiplyScalar","_dt","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_fromPos","_reqPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","T","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","setSelectorRadius","fpTeleport","gTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","_selectorRad","getSelectorRadius","setSelectorModel","path","bUseStdMat","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","needsUpdate","isOrbit","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","Sprite","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","t","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","Audio","play","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","SpriteMaterial","sizeAttenuation","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","audioURL","stop","setBuffer","setLoop","encodeState","Float32Array","binData","Int8Array","w","a8","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeSelectorRanges","computeAndRequestDefaultHome","getDescription","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","sin","uiAddButton","toggleFullScreen","isConnectionSecure","toggle","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","htmlcode","attr","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","popupVRC","getVRCclassFromID","checkAuth","popupUser","uiFunction","idbutton","inputid","value","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","loop","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","appid","wappid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_SCENES","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_setupBaseListeners","el","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","preserveDrawingBuffer","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_queryDataUI","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","shadowMap","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","tpano","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","PCFSoftShadowMap","_updateEnvironment","dt","getDelta","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","list","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.bPickable = true;\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n    this.traverse((o) => { o.layers.disable(this.type); });\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    this.traverse((o) => { o.layers.disable(this.type); });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.disablePicking) C.disablePicking();\r\n    }\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.enablePicking) C.enablePicking();\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable) this.bPickable = N.bPickable;\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable) this.bPickable = this._rootG.bPickable;\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C); // check\r\n            N.add( C );\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n\r\n    this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //if (this._LP0) this._LP0.position.copy(this.pos);\r\n    //if (this._LP1) this._LP1.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBEFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n\r\n    this._envtex = CCtarget.texture;\r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub.addDefaults();\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,0,1);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n    \r\n    // Selector\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2, \r\n        flatShading: true\r\n    });\r\n\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false,\r\n        flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2,\r\n        flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5,\r\n        flatShading: true\r\n    });\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\n// Helper visitor routine\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n        }\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n                }\r\n\r\n                // Ensure mipmapping is correct\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(ATON.PATH_COLLECTION+pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position)\r\n                .setTarget(pov.target)\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(ATON.PATH_COLLECTION+u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(ATON.PATH_COLLECTION+urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n            }\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){ \r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(ATON.PATH_COLLECTION+u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(ATON.PATH_COLLECTION+urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            if (r === undefined) return;\r\n            //console.log(r);\r\n            SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\n\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV(); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 1000.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = T.x - (r * Nav._vDir.x);\r\n    E.y = T.y - (r * Nav._vDir.y);\r\n    E.z = T.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(T);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            //optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking' ]\r\n\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\" \r\n                ///\"bounded-floor\"\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            geometry.rotateX( -Math.PI / 2 );\r\n            geometry.translate(0,0,-(raylen*0.5));\r\n\r\n            var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( mesh.clone() );\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"button\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on( \"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n    });\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {string} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        button.position.set((i*SUI.STD_BTN_SIZE)-m, 0.0, 0.01);\r\n        cont.add(button);\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    \r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n    this._auTalk = undefined;\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    VRoadcast._numUsers = 0;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        M.color = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket'], \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        if (VRoadcast._numUsers>0) VRoadcast._numUsers--;\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n        if (A._auTalk === undefined || A._auTalk === null) A._auTalk = new THREE.Audio( ATON.AudioHub._listener );\r\n        else A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    S.userid = binData[20];\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(3);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(3);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(3);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(3);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz,r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        VRoadcast._numUsers++;\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    S.add(SemFactory.currSemNode.children[0]);\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n        }\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        \r\n        FE.computeSelectorRanges();\r\n        ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        if (FE._bReqHome) return;\r\n\r\n        if (ATON.Nav.homePOV === undefined){\r\n            ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        }\r\n        \r\n        FE._bReqHome = true;\r\n    });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(0.5);\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n    });\r\n\r\n    ATON.on(\"frame\", FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    //$(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let htmlcode = \"<div id='btn-\"+iconid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    $(\"#\"+idcontainer).append(htmlcode);\r\n\r\n    if (onPress) $(\"#btn-\"+iconid).click( onPress );\r\n\r\n    if (tooltip) $(\"#btn-\"+iconid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n    });\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    console.log(\"X\");\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid = undefined;\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (patch, mode, onComplete)=>{\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n    // First time\r\n    if (AppHub._appid === undefined){\r\n        let appid = $(\"meta[name='title']\").attr(\"content\");\r\n        if (appid === undefined || appid === null || appid.length < 2) return;\r\n        AppHub._appid = appid;\r\n    }\r\n\r\n    let O = {};\r\n    O.wappid = AppHub._appid;\r\n    O.data   = patch;\r\n    O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (r)=>{\r\n            if (r === undefined) return;\r\n\r\n            AppHub._appdata = r;\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} patch - a javascript object patch\r\n@param {function} onComplete - on data stored\r\n@example\r\nATON.AppHub.addToStorage({score: 20)\r\n*/\r\nAppHub.addToStorage = (patch, onComplete)=>{\r\n    AppHub._sendDataPatch(patch, ATON.PATCH_ADD, onComplete);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} patch - a javascript object patch\r\n@param {function} onComplete - on data stored\r\n@example\r\nATON.AppHub.deleteFromStorage({score: {}})\r\n*/\r\nAppHub.deleteFromStorage = (patch, onComplete)=>{\r\n    AppHub._sendDataPatch(patch, ATON.PATCH_DEL, onComplete);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {function} onComplete - on data received\r\n@example\r\nATON.AppHub.getStorage((data)=>{ console.log(data); })\r\n*/\r\nAppHub.getStorage = (onComplete)=>{\r\n    if (AppHub._appid === undefined) return;\r\n\r\n    return $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data.json\", ( data )=>{\r\n        AppHub._appdata = data;\r\n        if (onComplete) onComplete(data);\r\n    });\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/wapps/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        //pecision: \"mediump\"\r\n        preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0){\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n        // Bounds\r\n        let c = ATON._rootVisible.getBound().center;\r\n        let r = ATON._rootVisible.getBound().radius;\r\n\r\n        if (ATON._renderer.shadowMap.enabled){\r\n            ATON._rootVisible.traverse((o) => {\r\n                if (o.isMesh){\r\n                    o.castShadow = true;\r\n                    o.receiveShadow = true;\r\n                }\r\n            });\r\n\r\n            ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n            if (ATON._bShadowsFixedBound){\r\n                ATON.updateDirShadows(c);\r\n            }\r\n        }\r\n\r\n        if (ATON._bAutoLP){\r\n            if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n            else {\r\n                ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n            }\r\n            console.log(\"Auto LP\");\r\n        }\r\n\r\n        ATON.getRootScene().assignLightProbesByProximity();\r\n\r\n        //ATON._bDirtyLP = true;\r\n\r\n        // FIXME: dirty\r\n        setTimeout( ()=>{\r\n            if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n            ATON.updateLightProbes();\r\n        }, 1000);\r\n\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            //o.material.combine = THREE.AddOperation;\r\n            //o.material.envMapIntensity = 5.0;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n//    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n//    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n        //console.log(ATON._shadowsSize);\r\n        //console.log(c);\r\n    }\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        //ATON._dMainL.shadow.bias        = 0.0001;\r\n/*\r\n        ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n        ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n        ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n        ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n        ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n*/\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    //ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}