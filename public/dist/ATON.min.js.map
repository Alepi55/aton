{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","_assetsManager","then","modelVisitor","t","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","_assetReqComplete","setPickable","toggle","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","STD_FOV","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","_pmremGenerator","PMREMGenerator","_renderer","CCtarget","WebGLCubeRenderTarget","format","RGBEFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","addDefaults","_loader","MaterialLoader","white","Color","black","green","yellow","red","blue","orange","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","selector","color","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","sizeAttenuation","mat","jsonfile","addMaterial","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","magFilter","LinearFilter","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","replace","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","PATH_COLLECTION","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","urls","forEach","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","enabled","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","handleMotion","isTransitioning","controller0","negate","fv","multiplyScalar","_dt","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_fromPos","_reqPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","setSelectorRadius","fpTeleport","gTeleport","gSemIcons","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","_selectorRad","getSelectorRadius","setSelectorModel","path","bUseStdMat","addSemIcon","meshape","semicon","Sprite","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","needsUpdate","isOrbit","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","Audio","play","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","flatShading","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","audioURL","stop","setBuffer","setLoop","encodeState","Float32Array","binData","Int8Array","w","a8","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeSelectorRanges","computeAndRequestDefaultHome","getDescription","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","sin","uiAddButton","toggleFullScreen","isConnectionSecure","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","htmlcode","attr","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","popupVRC","getVRCclassFromID","checkAuth","popupUser","uiFunction","idbutton","inputid","value","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","loop","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","numUsers","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","appid","wappid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_SCENES","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_setupBaseListeners","el","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_elPanoVideo","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","preserveDrawingBuffer","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_queryDataUI","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","shadowMap","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","VideoTexture","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","PCFSoftShadowMap","_updateEnvironment","dt","getDelta","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    //this.bPickable = true;\r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            N.setPickable(N.bPickable);\r\n            N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n\r\n    this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //if (this._LP0) this._LP0.position.copy(this.pos);\r\n    //if (this._LP1) this._LP1.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBEFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n\r\n    this._envtex = CCtarget.texture;\r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub.addDefaults();\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,0,1);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n    \r\n    // Selector\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n\r\n/*\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n    };\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader:`\r\n\t\t    //varying vec3 vPositionW;\r\n\t\t    //varying vec3 vNormalW;\r\n\r\n\t\t    void main(){\r\n\t\t        //vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n\t\t        //vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n\r\n\t\t        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t    }\r\n        `,\r\n\r\n        fragmentShader:`\r\n            //varying vec3 vPositionW;\r\n\t\t    //varying vec3 vNormalW;\r\n            uniform float time;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\t\t        //float f = dot(viewDirectionW, vNormalW);\r\n\t\t        //f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\r\n                float f = cos(time*5.0);\r\n                f = clamp(f, 0.0,1.0);\r\n                f *= 0.1;\r\n\r\n\t\t        gl_FragColor = vec4(0.0, 0.0, 1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n*/\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"semicon.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n                    /*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n                    */\r\n                }\r\n\r\n                // Ensure mipmapping is correct\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(ATON.PATH_COLLECTION+pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position)\r\n                .setTarget(pov.target)\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(ATON.PATH_COLLECTION+u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(ATON.PATH_COLLECTION+urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(ATON.PATH_COLLECTION+u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(ATON.PATH_COLLECTION+urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            if (r === undefined) return;\r\n            //console.log(r);\r\n            SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\n\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV(); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 1000.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = T.x - (r * Nav._vDir.x);\r\n    E.y = T.y - (r * Nav._vDir.y);\r\n    E.z = T.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(T);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            //optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking' ]\r\n\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\" \r\n                ///\"bounded-floor\"\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            geometry.rotateX( -Math.PI / 2 );\r\n            geometry.translate(0,0,-(raylen*0.5));\r\n\r\n            var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( mesh.clone() );\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"button\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {string} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        button.position.set((i*SUI.STD_BTN_SIZE)-m, 0.0, 0.01);\r\n        cont.add(button);\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (ATON.Nav._bInteracting){\r\n        SUI.gSemIcons.hide();\r\n    }\r\n    else {\r\n        if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n    this._auTalk = undefined;\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        M.color = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket'], \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n        if (A._auTalk === undefined || A._auTalk === null) A._auTalk = new THREE.Audio( ATON.AudioHub._listener );\r\n        else A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    S.userid = binData[20];\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(3);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(3);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(3);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(3);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz,r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        \r\n        FE.computeSelectorRanges();\r\n        ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        if (FE._bReqHome) return;\r\n\r\n        if (ATON.Nav.homePOV === undefined){\r\n            ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        }\r\n        \r\n        FE._bReqHome = true;\r\n    });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(0.5);\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n    });\r\n\r\n    ATON.on(\"frame\", FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    //$(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let htmlcode = \"<div id='btn-\"+iconid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    $(\"#\"+idcontainer).append(htmlcode);\r\n\r\n    if (onPress) $(\"#btn-\"+iconid).click( onPress );\r\n\r\n    if (tooltip) $(\"#btn-\"+iconid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'>1</span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        $(\"#idVRCnumusers\").html(ATON.VRoadcast.getNumUsers());\r\n        console.log(\"Users: \"+ATON.VRoadcast.getNumUsers());\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        $(\"#idVRCnumusers\").html(ATON.VRoadcast.getNumUsers());\r\n        console.log(\"Users: \"+ATON.VRoadcast.getNumUsers());\r\n    });\r\n\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n    });\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    console.log(\"X\");\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid = undefined;\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (patch, mode, onComplete)=>{\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n    // First time\r\n    if (AppHub._appid === undefined){\r\n        let appid = $(\"meta[name='title']\").attr(\"content\");\r\n        if (appid === undefined || appid === null || appid.length < 2) return;\r\n        AppHub._appid = appid;\r\n    }\r\n\r\n    let O = {};\r\n    O.wappid = AppHub._appid;\r\n    O.data   = patch;\r\n    O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (r)=>{\r\n            if (r === undefined) return;\r\n\r\n            AppHub._appdata = r;\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} patch - a javascript object patch\r\n@param {function} onComplete - on data stored\r\n@example\r\nATON.AppHub.addToStorage({score: 20)\r\n*/\r\nAppHub.addToStorage = (patch, onComplete)=>{\r\n    AppHub._sendDataPatch(patch, ATON.PATCH_ADD, onComplete);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} patch - a javascript object patch\r\n@param {function} onComplete - on data stored\r\n@example\r\nATON.AppHub.deleteFromStorage({score: {}})\r\n*/\r\nAppHub.deleteFromStorage = (patch, onComplete)=>{\r\n    AppHub._sendDataPatch(patch, ATON.PATCH_DEL, onComplete);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {function} onComplete - on data received\r\n@example\r\nATON.AppHub.getStorage((data)=>{ console.log(data); })\r\n*/\r\nAppHub.getStorage = (onComplete)=>{\r\n    if (AppHub._appid === undefined) return;\r\n\r\n    return $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data.json\", ( data )=>{\r\n        AppHub._appdata = data;\r\n        if (onComplete) onComplete(data);\r\n    });\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        //pecision: \"mediump\"\r\n        preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0){\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n        // Bounds\r\n        let c = ATON._rootVisible.getBound().center;\r\n        let r = ATON._rootVisible.getBound().radius;\r\n\r\n        if (ATON._renderer.shadowMap.enabled){\r\n            ATON._rootVisible.traverse((o) => {\r\n                if (o.isMesh){\r\n                    o.castShadow = true;\r\n                    o.receiveShadow = true;\r\n                }\r\n            });\r\n\r\n            ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n            if (ATON._bShadowsFixedBound){\r\n                ATON.updateDirShadows(c);\r\n            }\r\n        }\r\n\r\n        if (ATON._bAutoLP){\r\n            if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n            else {\r\n                ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n            }\r\n            console.log(\"Auto LP\");\r\n        }\r\n\r\n        ATON.getRootScene().assignLightProbesByProximity();\r\n\r\n        //ATON._bDirtyLP = true;\r\n\r\n        // FIXME: dirty\r\n        setTimeout( ()=>{\r\n            if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n            ATON.updateLightProbes();\r\n        }, 1000);\r\n\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            //o.material.combine = THREE.AddOperation;\r\n            //o.material.envMapIntensity = 5.0;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n        //console.log(ATON._shadowsSize);\r\n        //console.log(c);\r\n    }\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        //ATON._dMainL.shadow.bias        = 0.0001;\r\n/*\r\n        ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n        ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n        ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n        ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n        ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n*/\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    //ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}