{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","_aniMixers","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","_renderer","shadowMap","enabled","needsUpdate","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","resolveCollectionURL","_assetsManager","then","modelVisitor","t","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","registerAniMixers","ccExtract","_assetReqComplete","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","CCtarget","WebGLCubeRenderTarget","format","RGBEFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","defUI","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","ShaderMaterial","uniforms","color","vertexShader","getDefVertexShader","fragmentShader","selector","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","lp","lpIcon","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","string","urls","match","forEach","replace","PATH_COLLECTION","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","graphPostVisitor","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","magFilter","LinearFilter","mixer","AnimationMixer","animations","clip","clipAction","play","asset","extras","cc","_ccModels","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","setMainPanoramaRotation","bgcolor","setBackgroundColor","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","soundscape","global","setGlobalAudio","loop","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","audioURL","Audio","setBuffer","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","STD_FOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","getSelectorRadius","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","_cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_reqPos","_fromPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","_pointerLineGeom","_pointerLineMesh","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","fpTeleport","gTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","gSemIcons","enableLPIcons","gLPIcons","enableSemIcons","_selectorRad","setSelectorModel","path","bUseStdMat","setSelectorColor","addSemIcon","meshape","semicon","Sprite","addLPIcon","rn","lpicon","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","isOrbit","_queryDataUI","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","PositionalAudio","setRefDistance","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","requestSceneState","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","isPlaying","stop","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","_bVRCsetup","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeAndRequestDefaultHome","getDescription","computeSelectorRanges","_handleHomeReq","addUpdateRoutine","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","attr","PATH_SCENES","sin","uiAddButton","toggleFullScreen","isConnectionSecure","toggle","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","elid","el","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","getVRCclassFromID","checkAuth","sstate","popupVRC","_setupVRCevents","popupUser","uiFunction","idbutton","inputid","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","wappid","fid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_onUserInteraction","_elPanoVideo","_vpanoPlaying","context","state","resume","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","powerPreference","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","_bUserInts","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_updRoutines","_bAutoLP","_envMapInt","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","_onAllReqsCompleted","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","_postAllReqsCompleted","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","combine","AddOperation","envMapIntensity","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","onplaying","VideoTexture","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","bias","PCFShadowMap","PCFSoftShadowMap","_updateEnvironment","bLoop","_auMain","dt","getDelta","_updateAniMixers","_updateRoutines","U","deleteAllUpdateRoutines","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Animation mixers\r\n    this._aniMixers = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._renderer.shadowMap.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._renderer.shadowMap.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n\r\n        //this.toggle(N.visible);\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n\r\n    //this.toggle(this._rootG.visible);\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model (local to collection or complete)\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    url = ATON.Utils.resolveCollectionURL(url);\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            // animations\r\n            //ATON.Utils.registerAniMixers(N, data);\r\n\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            // animations\r\n            ATON.Utils.registerAniMixers(N, data);\r\n\r\n            // CC manager\r\n            ATON.Utils.ccExtract(data);\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            //console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = undefined; //ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n/*\r\n    this._LP = new THREE.LightProbe();\r\n    this._LP.intensity = 10;\r\n    ATON._mainRoot.add( this._LP );\r\n*/\r\n    \r\n    //this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //this._LP.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBEFormat, //THREE.RGBEFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n    this._envtex = CCtarget.texture;\r\n\r\n    // new\r\n    //this._LP.copy( THREE.LightProbeGenerator.fromCubeRenderTarget(ATON._renderer, CCtarget) );\r\n    //this._envtex = this._LP;\r\n    \r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        const handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        const evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    const ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.2,0.2,1.0, 0.2) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n\r\n    MatHub.colors.defUI  = new THREE.Color(0,1,0.5);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,1,0.5);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n\r\n    // Default UI\r\n    MatHub.materials.defUI = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            color: { type:'vec3', value: MatHub.colors.defUI },\r\n            opacity: { type:'float', value: 0.8 }\r\n        },\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n            uniform vec3 color;\r\n            uniform float opacity;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.2, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(color.rgb, f * opacity);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        //flatShading: false\r\n    }); \r\n    \r\n    // Selector\r\n    MatHub.materials.selector = MatHub.materials.defUI.clone();\r\n\r\n/*\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n*/\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = MatHub.materials.defUI.clone();\r\n    MatHub.materials.controllerRay.uniforms.color.value = MatHub.colors.white;\r\n/*\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n*/\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                //float ff = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\r\n\r\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n                //gl_FragColor = vec4(tint.rgb, ff);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        //flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-sem.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n\r\n    MatHub.materials.lp = new THREE.ShaderMaterial({ \r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        //flatShading: false\r\n    }); \r\n\r\n    MatHub.lpIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-lp.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        depthWrite: false, \r\n        //depthTest: false\r\n    });\r\n\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n    MatHub.lpIcon.sizeAttenuation  = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.URLify =(string)=>{\r\n    const urls = string.match(/(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)/g);\r\n    if (urls){\r\n        urls.forEach(function(url){\r\n            string = string.replace(url, '<a target=\"_blank\" href=\"' + url + '\">' + url + \"</a>\");\r\n        });\r\n    }\r\n\r\n    return string;\r\n};\r\n\r\nUtils.resolveCollectionURL = (url)=>{\r\n    if (url.startsWith(\"http\")) return url;\r\n    \r\n    return ATON.PATH_COLLECTION+url;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n};\r\n\r\nUtils.graphPostVisitor = (N)=>{\r\n    //if (N.type === undefined) return;\r\n\r\n    if (!N.visible){\r\n        Utils.setPicking(N, N.type, false);\r\n        return;\r\n    }\r\n\r\n    for (let c in N.children){\r\n        let C = N.children[c];\r\n        Utils.graphPostVisitor(C);\r\n    }\r\n\r\n    console.log(N);\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n        // perf.\r\n        // TODO: manually call object.updateMatrix()\r\n        //o.matrixAutoUpdate = false;\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n/*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n*/\r\n                }\r\n\r\n                // Fix mipmapping\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON.device.isMobile? 0 : ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.registerAniMixers = (N, data)=>{\r\n    let model = data.scene || data.scene[0];\r\n\r\n    let mixer = new THREE.AnimationMixer( model );\r\n    data.animations.forEach((clip)=>{\r\n        mixer.clipAction( clip ).play();\r\n        //console.log(mixer.clipAction( clip ));\r\n        //console.log(N);\r\n    });\r\n    ATON._aniMixers.push(mixer);\r\n\r\n    if (N._aniMixers === undefined) N._aniMixers = [];\r\n    N._aniMixers.push(mixer);\r\n};\r\n\r\nUtils.ccExtract = (data)=>{\r\n    if (data === undefined) return;\r\n    if (data.asset === undefined) return;\r\n    if (data.asset.extras === undefined) return;\r\n\r\n    let cc = data.asset.extras;\r\n\r\n    ATON._ccModels.push(cc);\r\n    console.log(cc);\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        if (env.bgcolor){\r\n            ATON.setBackgroundColor( new THREE.Color(env.bgcolor[0],env.bgcolor[1],env.bgcolor[2]) );\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // Soundscape\r\n    SceneHub._jsonParsers.soundscape = (soundscape)=>{\r\n        if (soundscape === undefined) return;\r\n\r\n        if (soundscape.global){\r\n            ATON.setGlobalAudio(soundscape.global.url, soundscape.global.loop);\r\n        }\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\nAudioHub.playOnceGlobally = (audioURL)=>{\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    let au = new THREE.Audio( ATON.AudioHub._listener );\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        au.setBuffer( buffer );\r\n        //au.setVolume( 2.0 );\r\n        //au.setPlaybackRate(0.9);\r\n        au.play();\r\n    });\r\n};\r\n\r\n/* TODO:\r\nAudioHub.addToSoundscape = (auid, audioURL, position, radius)=>{\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        A._auTalk.setBuffer( buffer );\r\n        A._auTalk.setLoop( false );\r\n        //A._auTalk.setVolume( 0.5 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        A._auTalk.play();\r\n    });\r\n};\r\n*/\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV().setFOV(ATON.Nav.STD_FOV); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 100.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // we (re)set selector radius to 50cm\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.01;\r\n        C.maxDistance = 0.01;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        ATON.XR._cam = ATON._renderer.xr.getCamera(Nav._camera);\r\n        ATON.XR._cam.getWorldPosition( Nav._currPOV.pos );\r\n        ATON.XR._cam.getWorldQuaternion( Nav._qOri );\r\n        ATON.XR._cam.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    //Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\n// Not used for now\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n        ATON.XR._currPos.copy(ATON.XR._reqPos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    //let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    //T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = bs.center.x - (r * Nav._vDir.x);\r\n    E.y = bs.center.y - (r * Nav._vDir.y);\r\n    E.z = bs.center.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(bs.center);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nSet and request home viewpoint\r\n@param {POV} pov - the home POV\r\n@param {number} duration - transition duration\r\n*/\r\nNav.setAndRequestHomePOV = (pov, duration)=>{\r\n    Nav.setHomePOV(pov);\r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._cam = undefined;\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR._pointerLineGeom = undefined;\r\n    XR._pointerLineMesh = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    // reparent current camera to the XR rig\r\n    XR.rig.add( ATON.Nav._camera );\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n    console.log(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\",\r\n                ///\"bounded-floor\",\r\n\r\n                //\"hand-tracking\",\r\n\r\n                //\"high-refresh-rate\",\r\n                //\"high-fixed-foveation-level\",\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 1.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            XR._pointerLineGeom = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            XR._pointerLineGeom.rotateX( -Math.PI / 2 );\r\n            XR._pointerLineGeom.translate(0,0,-(raylen*0.5));\r\n\r\n            XR._pointerLineMesh = new THREE.Mesh( XR._pointerLineGeom, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( /*mesh.clone()*/ XR._pointerLineMesh );\r\n            XR._pointerLineMesh.visible = false;\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        //XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        //XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    //this.uiText.position.set(0,0,-0.01);\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\nsetBackgroundOpacity(f){\r\n    this.container.set({ backgroundOpacity: f });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    //SUI.enableSemIcons();\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        if (SUI.gSemIcons) SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        if (SUI.gSemIcons) SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n// note: before adding LPs\r\nSUI.enableLPIcons = ()=>{\r\n    SUI.gLPIcons = ATON.createUINode();\r\n    SUI.gLPIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gLPIcons);\r\n};\r\n\r\n\r\nSUI.enableSemIcons = ()=>{\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n/**\r\nSet selector color\r\n@param {THREE.Color} color - color\r\n@param {number} opacity - (optional) opacity \r\n*/\r\nSUI.setSelectorColor = (color, opacity)=>{\r\n    ATON.MatHub.materials.selector.uniforms.color.value = color;\r\n    if (opacity !== undefined) ATON.MatHub.materials.selector.uniforms.opacity.value = opacity;\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    if (SUI.gSemIcons === undefined) return;\r\n\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.addLPIcon = (LP)=>{\r\n    if (SUI.gLPIcons === undefined) return;\r\n\r\n    let rn = LP._near;\r\n    let isize = 0.1; //rn * 0.3;\r\n\r\n    let lpicon = new THREE.Sprite( ATON.MatHub.lpIcon );\r\n    lpicon.position.copy(LP.pos);\r\n    lpicon.scale.set(isize,isize,isize);\r\n\r\n    let s = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.materials.lp );\r\n    s.scale.set(rn,rn,rn);\r\n    s.position.copy(LP.pos);\r\n\r\n    SUI.gLPIcons.add( lpicon );\r\n    SUI.gLPIcons.add( s );\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {array} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n    let marginf = 1.1;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num * marginf) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE * marginf;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        if (button){\r\n            button.position.set((i*SUI.STD_BTN_SIZE*marginf)-m, 0.0, 0.005);\r\n            cont.add(button);\r\n        }\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (SUI.gSemIcons){\r\n        if (ATON.Nav._bInteracting){\r\n            SUI.gSemIcons.hide();\r\n        }\r\n        else {\r\n            if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n        }\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Pointer-line\r\n    if (ATON.XR._pointerLineMesh){\r\n        let d = 0.0;\r\n        if (ATON._queryDataScene) d = ATON._queryDataScene.d;\r\n        if (ATON._queryDataUI && (d <= 0.0 || ATON._queryDataUI.d<d)){\r\n            d = ATON._queryDataUI.d;\r\n            SUI.mainSelector.visible = false;\r\n            SUI.fpTeleport.visible   = false;\r\n        }\r\n\r\n        if (d>0.0){\r\n            ATON.XR._pointerLineMesh.visible = true;\r\n            ATON.XR._pointerLineMesh.scale.set(1,1,d);\r\n        }\r\n        else ATON.XR._pointerLineMesh.visible = false;\r\n    }\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n\r\n    //this._auTalk = undefined;\r\n\r\n    // Positional audio (talk)\r\n    this._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n    this._auTalk.setRefDistance(30.0);\r\n    this.add(this._auTalk); // move with avatar\r\n\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\nsetTalkDistance(r){\r\n    if (r > 0.0) this._auTalk.setRefDistance(r);\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = ATON.MatHub.materials.defUI.clone();\r\n    mat.uniforms.color.value = VRoadcast.ucolors[0];\r\n/*\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n*/\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        //M.color = VRoadcast.ucolors[c];\r\n        M.uniforms.color.value = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket']; \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n        //opts.transports = ['websocket'];\r\n        //opts.upgrade = false;\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n/*\r\n        if (A._auTalk === undefined || A._auTalk === null){\r\n            A._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n            A._auTalk.setRefDistance(50.0);\r\n            A.add(A._auTalk);\r\n        }\r\n        else A._auTalk.stop();\r\n*/\r\n        if (A._auTalk.isPlaying) A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    if (ATON.SUI.gSemIcons === undefined) return true;\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n    FE._bVRCsetup = false;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\nFE._handleHomeReq = ()=>{\r\n    if (FE._bReqHome) return;\r\n\r\n    FE._bReqHome = true;\r\n\r\n    if (ATON.Nav.homePOV === undefined){\r\n        ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        return;\r\n    }\r\n    \r\n    ATON.Nav.requestHome(1.0);\r\n    //console.log(ATON.Nav.homePOV);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(1.0);\r\n    });\r\n\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        if (ATON._ccModels.length>0) $(\"#btn-cc\").show();\r\n        \r\n        FE.computeSelectorRanges();\r\n        if (ATON.Nav.isOrbit()) ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        FE._handleHomeReq();\r\n    });\r\n\r\n    //ATON.on(\"frame\", FE._update);\r\n    ATON.addUpdateRoutine(FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    $(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:secure_url]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:type]\").attr(\"content\", \"image/png\");\r\n    $(\"meta[property=og\\\\:image\\\\:width]\").attr(\"content\", \"200\");\r\n    $(\"meta[property=og\\\\:image\\\\:height]\").attr(\"content\", \"200\");\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n// Setup VRC events\r\nFE._setupVRCevents = ()=>{\r\n    if (FE._bVRCsetup) return;\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n        ATON.SUI.setSelectorColor(ATON.VRoadcast.ucolors[uid%6]);\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n        ATON.SUI.setSelectorColor(ATON.MatHub.colors.defUI);\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    FE._bVRCsetup = true;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n    FE._setupVRCevents();\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    //console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    //htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n    htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMfp'></div>\";\r\n    htmlcontent +=\"<div style='text-align:left'>Switch between first-person and orbit navigation mode</div>\";\r\n    htmlcontent += \"</div>\";\r\n\r\n    if (ATON.Utils.isConnectionSecure()){\r\n        htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n        htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMvr'></div>\";\r\n        htmlcontent +=\"<div style='text-align:left'>Immersive VR mode</div>\";\r\n        htmlcontent += \"</div>\";\r\n\r\n        if (ATON.Utils.isMobile()){\r\n            htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n            htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div>\";\r\n            htmlcontent +=\"<div style='text-align:left'>Enable or disable device-orientation mode</div>\";\r\n            htmlcontent += \"</div>\";\r\n        }\r\n    }\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNMfp\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNMdevori\");\r\n    FE.uiAddButtonVR(\"idNMvr\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n//import AppData from \"./ATON.appdata.js\";\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid   = $(\"meta[name='aton\\\\:appid']\").attr(\"content\");\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (id, patch, mode)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n        if (id.length < 3){\r\n            reject(\"Storage ID too short\");\r\n            return;\r\n        }\r\n        if (patch === undefined){\r\n            reject(\"No storage patch\");\r\n            return;\r\n        }\r\n        if (AppHub._appid === undefined){\r\n            reject(\"No app-ID\");\r\n            return;\r\n        }\r\n\r\n        if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n        let O = {};\r\n        O.wappid = AppHub._appid;\r\n        O.fid    = id;\r\n        O.data   = patch;\r\n        O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n        let jstr = JSON.stringify(O);\r\n        //console.log(jstr);\r\n\r\n        $.ajax({\r\n            url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n            type:\"POST\",\r\n            data: jstr,\r\n            contentType:\"application/json; charset=utf-8\",\r\n            dataType:\"json\",\r\n\r\n            success: (r)=>{\r\n                if (r === undefined){\r\n                    reject(\"Error writing on server\");\r\n                    return;\r\n                }\r\n\r\n                AppHub._appdata[id] = r;\r\n                resolve(r);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.addToStorage(\"myStorage\", {score: 20}).then(...)\r\n*/\r\nAppHub.addToStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.deleteFromStorage(\"myStorage\", {score: {}}).then(...)\r\n*/\r\nAppHub.deleteFromStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {object} id - server-side storage ID\r\n@example\r\nATON.AppHub.getStorage(\"myStorage\").then((s)=>{ console.log(s); })\r\n*/\r\nAppHub.getStorage = (id)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (AppHub._appid === undefined){\r\n            reject();\r\n            return;\r\n        }\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n\r\n        $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data/\"+id+\".json\", (data)=>{\r\n            console.log(data);\r\n            AppHub._appdata[id] = data;\r\n            resolve(data);\r\n        });\r\n    });\r\n\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n// For resuming suspended audio/video streams\r\nATON._onUserInteraction = ()=>{\r\n    if (ATON._elPanoVideo && !ATON._vpanoPlaying) ATON._elPanoVideo.play();\r\n    if (ATON.AudioHub._listener.context.state === 'suspended') ATON.AudioHub._listener.context.resume();\r\n};\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        //if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n        ATON._onUserInteraction();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        ATON._onUserInteraction();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        powerPreference: \"high-performance\",\r\n        //pecision: \"lowp\", //\"mediump\"\r\n        //preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n\r\n    ATON._aniMixers = [];\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    // Multimedia\r\n    ATON._vpanoPlaying = false;\r\n    ATON._bUserInts = 0;\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // CC Manager\r\n    ATON._ccModels = [];\r\n\r\n    // Update routines\r\n    ATON._updRoutines = [];\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    ATON._envMapInt = 1.0;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\n\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0) ATON._onAllReqsCompleted();\r\n};\r\n\r\nATON._onAllReqsCompleted = ()=>{\r\n    // Bounds\r\n    let c = ATON._rootVisible.getBound().center;\r\n    let r = ATON._rootVisible.getBound().radius;\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            ATON.updateDirShadows(c);\r\n        }\r\n    }\r\n\r\n    if (ATON._bAutoLP){\r\n        if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n        else {\r\n            ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n        }\r\n        console.log(\"Auto LP\");\r\n    }\r\n\r\n    //ATON.Utils.graphPostVisitor(ATON._rootVisible);\r\n\r\n    // re-center main pano\r\n    if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n\r\n    ATON.getRootScene().assignLightProbesByProximity();\r\n    //ATON.updateLightProbes();\r\n\r\n    //ATON._bDirtyLP = true;\r\n\r\n    ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n    ATON._postAllReqsCompleted();\r\n\r\n    // FIXME: dirty\r\n    setTimeout( ()=>{\r\n        //if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n        ATON.updateLightProbes();\r\n        //if (ATON._renderer.shadowMap.enabled && ATON._bShadowsFixedBound) ATON._dMainL.shadow.autoUpdate = false;\r\n    }, 1000);\r\n};\r\n\r\nATON._postAllReqsCompleted = (R)=>{\r\n    if (R === undefined) R = ATON._rootVisible;\r\n\r\n    for (let n in R.children){\r\n        let N = R.children[n];\r\n\r\n        if (N && N.toggle){\r\n            ATON._postAllReqsCompleted(N);\r\n            N.toggle(N.visible);\r\n            //if (N.bPickable !== undefined) N.setPickable(N.bPickable);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n    //ATON._mainRoot.fog = new THREE.Fog(new THREE.Color( 0.7,0.7,0.7 ), 5, 200);\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    //ATON._rootUI.renderOrder = 10;\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n    //ATON._mainRoot.fog = new THREE.Fog(bg, 5, 200);\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n\r\n    // SUI\r\n    if (ATON.SUI.gLPIcons === undefined) return;\r\n    SUI.addLPIcon(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps){\r\n        ATON._lps[i].update();\r\n/*\r\n        if (ATON._indLPs === undefined) ATON._indLPs = [];\r\n        if (ATON._indLPs[i]) ATON._mainRoot.remove(ATON._indLPs[i]);\r\n\r\n        ATON._indLPs[i] = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[i]._prevCCtarget );\r\n        ATON._indLPs[i].intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLPs[i] );\r\n\r\n        console.log(ATON._mainRoot);\r\n*/\r\n    }\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._indLP.intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            o.material.combine = THREE.AddOperation;\r\n            o.material.envMapIntensity = ATON._envMapInt;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    path = ATON.Utils.resolveCollectionURL(path);\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n\r\n            ATON._elPanoVideo.onplaying = ()=>{\r\n                console.log(\"VideoPano playing\");\r\n                ATON._vpanoPlaying = true;\r\n            };\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    // FIXME: dirty, find another way\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n        //ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n        //ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n\r\n        //console.log(ATON._shadowsNear,ATON._shadowsFar);\r\n    }\r\n\r\n    // must dispose when changing shadow params\r\n    if (ATON._dMainL.shadow.map){\r\n        ATON._dMainL.shadow.map.dispose();\r\n        ATON._dMainL.shadow.map = null;\r\n    }\r\n\r\n    //console.log(ATON._dMainL.shadow.camera);\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n    //ATON._dMainL.shadow.camera.updateProjectionMatrix();\r\n\r\n    ATON._dMainL.shadow.bias = -0.0005;\r\n    //ATON._dMainL.shadow.normalBias = 0.05;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        if (ATON.device.isMobile) ATON._renderer.shadowMap.type = THREE.PCFShadowMap;\r\n        else ATON._renderer.shadowMap.type = THREE.PCFSoftShadowMap; // THREE.VSMShadowMap; \r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n// main audio\r\nATON.setGlobalAudio = (audioURL, bLoop)=>{\r\n    if (audioURL === undefined) return;\r\n    if (bLoop === undefined) bLoop = true;\r\n\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    if (ATON._auMain === undefined || ATON._auMain === null) ATON._auMain = new THREE.Audio( ATON.AudioHub._listener );\r\n    else if (ATON._auMain.isPlaying) ATON._auMain.stop();\r\n\r\n    ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n        ATON._auMain.setBuffer( buffer );\r\n        ATON._auMain.setLoop( bLoop );\r\n        //ATON._auMain.setVolume( 2.0 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        ATON._auMain.play();\r\n    });\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    //ATON.fireEvent(\"preframe\");\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    ///ATON.Nav._bControlChange = false;\r\n    //ATON.Nav._controls.update(dt);\r\n\r\n    // Render\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n    else ATON.Nav._controls.update(dt);\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // SUI\r\n    ATON.SUI.update();\r\n\r\n    // Mat\r\n    ATON.MatHub.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    // 3D models animations\r\n    ATON._updateAniMixers();\r\n\r\n    //ATON.fireEvent(\"frame\");\r\n    ATON._updateRoutines();\r\n};\r\n\r\nATON.addUpdateRoutine = (U)=>{\r\n    if (U === undefined) return;\r\n    ATON._updRoutines.push(U);\r\n};\r\n\r\nATON.deleteAllUpdateRoutines = ()=>{\r\n    ATON._updRoutines = [];\r\n};\r\n\r\nATON._updateRoutines = ()=>{\r\n    let n = ATON._updRoutines.length;\r\n    if (n <= 0) return;\r\n\r\n    for (let u=0; u<n; u++) ATON._updRoutines[u]();\r\n};\r\n\r\nATON._updateAniMixers = ()=>{\r\n    let num = ATON._aniMixers.length;\r\n    //if (num < 1) return;\r\n\r\n    for (let m=0; m<num; m++){\r\n        let M = ATON._aniMixers[m];\r\n        M.update( ATON._dt );\r\n        //console.log(M);\r\n    }\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    const hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    const h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    const hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    const h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}