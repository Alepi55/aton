{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","bPickable","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","c","children","C","addKeywords","s","description","au","audio","visible","layers","disable","enable","hide","show","enablePicking","disablePicking","M","cMat","matSTD","matHL","setMaterial","f","opacity","envtex","Utils","assignLightProbeToMesh","_lps","length","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","url","onComplete","_assetsManager","then","modelVisitor","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","_assetReqComplete","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","STD_FOV","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","_pmremGenerator","PMREMGenerator","_renderer","CCtarget","WebGLCubeRenderTarget","format","RGBEFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","push","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","addDefaults","_loader","MaterialLoader","white","Color","black","green","yellow","red","blue","orange","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","selector","color","flatShading","controllerRay","semanticShape","semanticShapeHL","semanticShapeEdit","mat","jsonfile","addMaterial","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","textureLoader","TextureLoader","prefix","Math","random","toString","substr","window","isSecureContext","isMobile","test","navigator","userAgent","isXRsupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","index","substring","startsWith","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","parentNode","computeBoundsTree","map","anisotropy","_maxAnisotropy","magFilter","LinearFilter","v","prec","parseFloat","toPrecision","blob","href","URL","createObjectURL","download","click","str","downloadBlob","Blob","jsonobj","downloadText","buffer","ext","getFileExtension","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","replace","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","PATH_RES","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","CL","semesh","_convexPoints","environment","env","pano","mainpano","setMainPanorama","PATH_COLLECTION","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","lps","lightprobes","auto","setAutoLP","navmode","setNavMode","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","urls","Array","isArray","forEach","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","transform","setRotation","setScale","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setDescription","setAudio","spheres","SemFactory","createSphere","convexshapes","points","createConvexShape","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","PATH_RESTAPI","r","COSINOIDAL_DIST","cos","POVtransitionDuration","STD_POV_TRANS_DURATION","init","_mode","_rotSpeedOrbit","_rotSpeedFP","_inertia","setOrbitControl","_currPOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","getCurrentEyeLocation","getCurrentDirection","copyCurrentPOV","addPOV","isTransitioning","isOrbit","MODE_ORBIT","isFirstPerson","MODE_FP","isDevOri","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_cOrbit","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","_bControlChange","_controls","syncCurrCamera","_cFirstPerson","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","setMotionAmount","setMotionDirection","stop","cam","getFOV","syncCurrPOV","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handlePOV","handleXRtransition","handlePOVtransition","handleMotion","controller0","negate","fv","multiplyScalar","_dt","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_fromPos","_reqPos","tgt","subVectors","normalize","FP_EPS","requestPOV","duration","requestPOVbyBound","T","E","radius","requestPOVbyNode","getBound","requestRetarget","point","normal","distanceTo","computeDefaultHome","dv","sceneBS","getRootScene","eye","computeAndRequestDefaultHome","requestHome","scope","reorder","enabled","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_bPresenting","currSession","rig","gControllers","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","_queryDataScene","userHeight","STD_TELEP_DURATION","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","_handleUISelection","setupControllerUI","controller1","HAND_L","session","onSessionEnded","setSession","C0","getController","C1","e","gamepad","_setupControllerR","_setupControllerL","setRefSpaceLocation","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","fontTexture","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","SUI","STD_BTN_SIZE","text","mainSelector","getMaterial","setSelectorRadius","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","infoNodeText","getSelectorRadius","setSelectorModel","path","bUseStdMat","infoNode","attachToRoot","infoContainer","getInfoNode","createToolbar","buttonlist","cont","m","button","_bPauseQuery","_queryDataSem","orientToCamera","Avatar","userid","username","message","_auTalk","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","Sprite","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","A","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","t","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","Audio","play","onended","setTalkVolume","address","location","origin","initMaterials","socket","_connected","_username","_bFocus","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","SpriteMaterial","sizeAttenuation","texFocP","depthTest","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","requestSceneEnter","sceneid","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","touchAvatar","decodeState","requestStateTransition","hideFocalPoint","requestFocus","uname","getUsername","audioURL","currentTime","encodeState","Float32Array","binData","Int8Array","w","a8","a","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","currMaterial","_numShapes","numPoints","geom","ConvexBufferGeometry","currSemesh","setVectorPrecision","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","bPopupBlurBG","_userAuth","_auSemNode","_auSemNodePlaying","_bReqHome","urlParams","URLSearchParams","search","_uiSetupBase","ddens","get","setDefaultPixelDensity","_kModShift","reqstr","PATH_RESTAPI_SCENE","uiAddButton","toggleFullScreen","isConnectionSecure","toggle","popupClose","html","idcontainer","icon","onPress","iconurl","iconid","endsWith","slice","htmlcode","addClass","removeClass","uiSwitchButton","MediaRec","isAudioRecording","stopMediaStreaming","startMediaStreaming","popupQR","screenfull","isFullscreen","popupVRC","checkAuth","attr","popupUser","inputid","value","val","regReplace","RegExp","auLib","switch","loop","getAudio","htmlcontent","cssClasses","clstr","htcont","stopPropagation","fadeIn","setPixelRatio","resetPixelDensity","fadeOut","focusOn3DView","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","setEditMode","password","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","RAD2DEG","DEG2RAD","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_MODELS","PATH_SCENES","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","setPathCollection","setPathScenes","_setupBaseListeners","el","_updateScreenMove","_onMouseWheel","Hammer","srcEvent","_handleQueries","defaultDoubleTapFromScreenCoords","_kModCtrl","key","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","profileDevice","Clock","WebGLRenderer","antialias","preserveDrawingBuffer","_stdpxd","outputEncoding","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_bShadowsFixedBound","initGraphs","_queryDataUI","_bQuerySemOcclusion","_bQueryNormals","Vector2","_rcScene","Raycaster","_rcSemantics","_rcUI","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","getRootSemantics","getRootUI","shadowMap","shadow","camera","left","right","bottom","top","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","setTimeout","_mMainPano","updateLightProbes","Scene","background","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","tpano","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","PCFSoftShadowMap","mapSize","_updateEnvironment","dt","getDelta","_fps","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","hitsnum","getControllerWorldLocation","getControllerWorldDirection","setFromCamera","_hitsScene","intersectObjects","distance","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","list","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.bPickable = true;\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K) this.kwords[ K[k] ] = true;\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){ \r\n    this.visible = false;\r\n    this.traverse((o) => { o.layers.disable(this.type); });\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){ \r\n    this.visible = true;\r\n    if (this.bPickable) this.traverse((o) => { o.layers.enable(this.type); });\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    this.traverse((o) => { o.layers.disable(this.type); });\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    this.traverse((o) => { o.layers.enable(this.type); });\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            this.userData.cMat = M;\r\n            o.material = M;\r\n            //o.material.needsUpdate = true;\r\n            }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat) this.userData.cMat = N.userData.cMat;\r\n        }\r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat) this.userData.cMat = this._rootG.userData.cMat;\r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C); // check\r\n            N.add( C );\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nnew ATON.POV(\"myView\").addKeyword(\"heritage\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K) this.kwords[ K[k] ] = true;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n\r\n    this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //if (this._LP0) this._LP0.position.copy(this.pos);\r\n    //if (this._LP1) this._LP1.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBEFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n\r\n    this._envtex = CCtarget.texture;\r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub.addDefaults();\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,0,1);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n    \r\n    // Selector\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2, \r\n        flatShading: true\r\n    });\r\n\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.1,\r\n        flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.3,\r\n        flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5,\r\n        flatShading: true\r\n    });\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR\r\n    ATON.device.isXRsupported = false;\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( b ){\r\n            if (b){\r\n                ATON.device.isXRsupported = true;\r\n                console.log(\"WebXR supported\");\r\n                }\r\n            else {\r\n                ATON.device.isXRsupported = false;\r\n                console.log(\"WebXR NOT supported\");\r\n                }\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR\r\n@returns {boolean}\r\n*/\r\nUtils.isWebXRsupported = ()=>{\r\n    return ATON.device.isXRsupported;\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\n// Helper visitor routine\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n        }\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed BVH\");\r\n                }\r\n\r\n                // Ensure mipmapping is correct\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid)\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(3)), \r\n                parseFloat(sphere.position.y.toPrecision(3)), \r\n                parseFloat(sphere.position.z.toPrecision(3)), \r\n                parseFloat(sphere.scale.x.toPrecision(3))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(ATON.PATH_COLLECTION+pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows) ATON.toggleShadows(L.shadows);\r\n            }\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position)\r\n                .setTarget(pov.target)\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(ATON.PATH_COLLECTION+u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(ATON.PATH_COLLECTION+urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n            }\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(ATON.PATH_COLLECTION+u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(ATON.PATH_COLLECTION+urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    ATON.SemFactory.createSphere(nid, new THREE.Vector3(S[0],S[1],S[2]), S[3]);\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(k){ ... }\r\nSceneHub.addSceneParser = (k, parser)=>{\r\n    SceneHub._jsonParsers[k] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            if (r === undefined) return;\r\n            //console.log(r);\r\n            SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\nNav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.0; // 0.0 = disabled\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV(); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = 0.1;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 1000.0;\r\n\r\n        C.addEventListener(\"change\", () => { Nav._bControlChange = true; });\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = 0.1;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 2.5;\r\n    E.x = T.x - (r * Nav._vDir.x);\r\n    E.y = T.y - (r * Nav._vDir.y);\r\n    E.z = T.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(T);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(0.5); // WebXR density\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive mode)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (ATON._queryDataScene){\r\n        let P = ATON._queryDataScene.p;\r\n        let N = ATON._queryDataScene.n;\r\n\r\n        //P.y += 0.8; // with 'local': half user height\r\n\r\n        // FIXME: height offset needed for \"local\", fill this automatically\r\n        if (N.y > 0.7) ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    }\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n// Right\r\nXR._setupControllerR = (C)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R);\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n            C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n/*          FIXME:\r\n            let h = gp.hand;\r\n            console.log(gp);\r\n            if (h === \"right\" || h === undefined) XR._setupControllerR(C0);\r\n            else if (h === \"left\") XR._setupControllerL(C0);\r\n*/\r\n            XR._setupControllerR(C0);\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n/*          FIXME:\r\n            if (gp.hand === \"right\" || gp.hand === undefined) XR._setupControllerR(C1);\r\n            else if (gp.hand === \"left\") XR._setupControllerL(C1);\r\n*/\r\n            XR._setupControllerL(C1);\r\n        });\r\n\r\n    }\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.isXRsupported) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = { \r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\" \r\n                ///\"bounded-floor\"\r\n            ]\r\n        };\r\n        navigator.xr.requestSession( 'immersive-vr', sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n        XR.controller1.add(lhand);\r\n    }\r\n    // Right\r\n    else {\r\n        var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n        geometry.rotateX( -Math.PI / 2 );\r\n        geometry.translate(0,0,-(raylen*0.5));\r\n\r\n        var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n        XR.controller0.add( mesh.clone() );\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n\r\n        XR.controller0.add(rhand);\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\",\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\",\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"button\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\n\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector   = ATON.createUINode();\r\n    //SUI.secondSelector = ATON.createUINode();\r\n\r\n    //SUI._uiSelGeom = new THREE.SphereGeometry( 0.1, 16, 16 );\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on( \"SemanticNodeHover\", (semid)=>{\r\n        if (!SUI.bShowInfo) return;\r\n        SUI.infoNodeText.set({ content: semid });\r\n    });\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    return SUI.mainSelector.scale.x;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {string} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\",\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        button.position.set((i*SUI.STD_BTN_SIZE)-m, 0.0, 0.01);\r\n        cont.add(button);\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    ThreeMeshUI.update();\r\n\r\n    if (ATON._queryDataScene){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);    \r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n    }\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n            SUI.infoNode.position.y += 0.1;\r\n            SUI.infoNode.setScale(SUI._labelScaleVR);\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n    this._auTalk = undefined;\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        //this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    //this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bFocus = false; // send focal point\r\n    VRoadcast._numUsers = 0;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        M.color = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket'], \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        if (VRoadcast._numUsers>0) VRoadcast._numUsers--;\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        A.requestStateTransition(S);\r\n        A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n  \r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    S.userid = binData[20];\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focal point\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(3);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(3);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(3);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(3);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz,r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        VRoadcast._numUsers++;\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShape\"); // current sem material we are using\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShape\");\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],4);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    S.add(SemFactory.currSemNode.children[0]);\r\n    S.setMaterial( SemFactory.currMaterial );\r\n    S.setDefaultAndHighlightMaterials(SemFactory.currMaterial, ATON.MatHub.materials.semanticShapeHL);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, SemFactory.currMaterial );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n        }\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(SemFactory.currMaterial, ATON.MatHub.materials.semanticShapeHL);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (!ATON._queryDataScene) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, SemFactory.currMaterial );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(SemFactory.currMaterial, ATON.MatHub.materials.semanticShapeHL);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Front-end routines\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\n\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.bPopupBlurBG = 0.25; // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    ATON.realize();\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\n// Add basic front-end events\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        \r\n        //console.log(ATON.Nav.homePOV);\r\n\r\n        if (FE._bReqHome) return;\r\n\r\n        if (ATON.Nav.homePOV === undefined){\r\n            ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        }\r\n        \r\n        FE._bReqHome = true;\r\n    });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(0.5);\r\n    });\r\n\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n\r\n    if (f === undefined) f = 0.001;\r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n        if (ATON.Nav._controls.enableZoom === undefined) return;\r\n\r\n        if (ATON._kModShift){\r\n            ATON.Nav._controls.enableZoom = false;\r\n\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n            r += (-d*f);\r\n            if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        else {\r\n            ATON.Nav._controls.enableZoom = true;\r\n        }\r\n    });\r\n};\r\n\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n    console.log(reqstr);\r\n};\r\n\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n// Add Generic button to a specific div container\r\nFE.uiAddButton = (idcontainer, icon, onPress)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let htmlcode = \"<div id='btn-\"+iconid+\"' class='atonBTN'><img src='\"+iconurl+\"'></div>\";\r\n    $(\"#\"+idcontainer).append(htmlcode);\r\n\r\n    if (onPress) $(\"#btn-\"+iconid).click( onPress );\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    });\r\n};\r\n\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    });\r\n};\r\n\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isWebXRsupported()) return; //Not showing on mobile\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle );\r\n};\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            ATON.Nav.setOrbitControl();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    });\r\n};\r\n\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    });\r\n};\r\n\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR );\r\n};\r\n\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n        screenfull.isFullscreen? FE.uiSwitchButton(\"fullscreen\",false) : FE.uiSwitchButton(\"fullscreen\",true);\r\n    });\r\n};\r\n\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect();\r\n        }\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let i = (uid%6);\r\n        $(\"#btn-vrc\").addClass(\"atonVRCu\"+i);\r\n        //$(\"#\"+idcontainer).addClass(\"atonVRCu\"+i+\"-bg\");\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n    });\r\n};\r\n\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    });\r\n};\r\n\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn();\r\n\r\n    FE._bPopup = true;\r\n\r\n    if (FE.bPopupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.bPopupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n\r\n    return true;\r\n};\r\n\r\nFE.popupClose = ()=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    if (FE.bPopupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    $(\"#idPopup\").fadeOut();\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<h1>Share</h1>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<h1>Screenshot</h1>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"setcover/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    htmlcontent += \"<h1>Collaborative Session</h1>\";\r\n\r\n    // Username\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:200px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-red' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if(keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if(keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"You are logged in as <b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000; //500;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (!MediaRec.recorder){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).binary(true).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).binary(true).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        MediaRec._bStreaming = false;\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_MODELS     = ATON.PATH_COLLECTION + \"models/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n    //ATON.on(\"Tap\", (e)=>{\r\n        //console.log(e);\r\n    //});\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    el.addEventListener(\"keydown\", (e)=>{\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    el.addEventListener(\"keyup\", (e)=>{\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (ATON._queryDataScene && bFPtrans){\r\n        let P = ATON._queryDataScene.p;\r\n        let N = ATON._queryDataScene.n;\r\n        \r\n        if (N.y > 0.7){\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.3);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picket surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.3);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n/**\r\nToggle fullscreen\r\n*/\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n/*\r\n    if (b === undefined){\r\n        screenfull.toggle();\r\n        return;\r\n    }\r\n\r\n    if (b) screenfull.request();\r\n*/\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"realize\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"idView\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        //pecision: \"mediump\"\r\n        preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    console.log(ATON._stdpxd);\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    //let canvas = ATON._renderer.domElement;\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.border  = \"none\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0){\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n        // Bounds\r\n        let c = ATON._rootVisible.getBound().center;\r\n        let r = ATON._rootVisible.getBound().radius;\r\n\r\n        if (ATON._renderer.shadowMap.enabled){\r\n            ATON._rootVisible.traverse((o) => {\r\n                if (o.isMesh){\r\n                    o.castShadow = true;\r\n                    o.receiveShadow = true;\r\n                }\r\n            });\r\n\r\n            // TODO: experimental\r\n            if (ATON._bShadowsFixedBound){\r\n                ATON.SHADOWS_SIZE = r*1.5;\r\n\r\n                ATON._dMainL.shadow.camera.left   = -ATON.SHADOWS_SIZE;\r\n                ATON._dMainL.shadow.camera.right  = ATON.SHADOWS_SIZE;\r\n                ATON._dMainL.shadow.camera.bottom = -ATON.SHADOWS_SIZE;\r\n                ATON._dMainL.shadow.camera.top    = ATON.SHADOWS_SIZE;\r\n\r\n                ATON.updateDirShadows(c);\r\n            }\r\n        }\r\n\r\n        if (ATON._bAutoLP){\r\n            if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n            else {\r\n                ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n            }\r\n            console.log(\"Auto LP\");\r\n        }\r\n\r\n        ATON.getRootScene().assignLightProbesByProximity();\r\n\r\n        //ATON._bDirtyLP = true;\r\n\r\n        // FIXME: dirty\r\n        setTimeout( ()=>{\r\n            if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n            ATON.updateLightProbes();\r\n        }, 1000);\r\n\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(0.1);\r\n\r\n    ATON._lps.push(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            //o.material.combine = THREE.AddOperation;\r\n            //o.material.envMapIntensity = 5.0;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n\r\n    let tpano = new THREE.TextureLoader().load(path);\r\n    tpano.encoding = THREE.sRGBEncoding;\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON.setNeutralAmbientLight(0.1);\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n};\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; // bleeding\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._dMainL.shadow.mapSize.width  = ATON.SHADOWS_RES;\r\n        ATON._dMainL.shadow.mapSize.height = ATON.SHADOWS_RES;\r\n        ATON._dMainL.shadow.camera.near    = ATON.SHADOWS_NEAR;\r\n        ATON._dMainL.shadow.camera.far     = ATON.SHADOWS_FAR;\r\n        //ATON._dMainL.shadow.bias = 0.0001;\r\n\r\n        ATON._dMainL.shadow.camera.left   = -ATON.SHADOWS_SIZE;\r\n        ATON._dMainL.shadow.camera.right  = ATON.SHADOWS_SIZE;\r\n        ATON._dMainL.shadow.camera.bottom = -ATON.SHADOWS_SIZE;\r\n        ATON._dMainL.shadow.camera.top    = ATON.SHADOWS_SIZE;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined) p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n    ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON.SHADOWS_SIZE);\r\n    ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON.SHADOWS_SIZE);\r\n    ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON.SHADOWS_SIZE);\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n    \r\n    ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON._rcScene.set( ATON.XR.getControllerWorldLocation(0), ATON.XR.getControllerWorldDirection(0) );\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON._rcSemantics.set( ATON.XR.getControllerWorldLocation(0), ATON.XR.getControllerWorldDirection(0) );\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting() && ATON.XR.controller0){\r\n        ATON._rcUI.set( ATON.XR.getControllerWorldLocation(0), ATON.XR.getControllerWorldDirection(0) );\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}