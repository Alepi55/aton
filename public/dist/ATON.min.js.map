{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","resolveCollectionURL","_assetsManager","then","modelVisitor","t","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","_assetReqComplete","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","CCtarget","WebGLCubeRenderTarget","format","RGBAFormat","encoding","sRGBEncoding","CC","CubeCamera","_renderer","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","defUI","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","ShaderMaterial","uniforms","color","vertexShader","getDefVertexShader","fragmentShader","flatShading","selector","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","lp","lpIcon","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","PATH_COLLECTION","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","graphPostVisitor","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","minFilter","LinearMipmapLinearFilter","magFilter","LinearFilter","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","replace","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","soundscape","global","setGlobalAudio","loop","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","urls","forEach","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","audioURL","Audio","setBuffer","play","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","STD_FOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","enabled","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","getSelectorRadius","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","handleMotion","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_reqPos","_fromPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","fpTeleport","gTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","gSemIcons","enableLPIcons","gLPIcons","enableSemIcons","_selectorRad","setSelectorModel","path","bUseStdMat","setSelectorColor","addSemIcon","meshape","semicon","Sprite","addLPIcon","rn","lpicon","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","needsUpdate","isOrbit","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","PositionalAudio","setRefDistance","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","requestSceneState","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","isPlaying","stop","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeAndRequestDefaultHome","getDescription","computeSelectorRanges","_handleHomeReq","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","attr","PATH_SCENES","sin","uiAddButton","toggleFullScreen","isConnectionSecure","toggle","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","elid","el","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","popupVRC","getVRCclassFromID","checkAuth","sstate","popupUser","uiFunction","idbutton","inputid","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","wappid","fid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_onUserInteraction","_elPanoVideo","_vpanoPlaying","context","state","resume","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","powerPreference","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","_bUserInts","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_envMapInt","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_queryDataUI","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","_onAllReqsCompleted","shadowMap","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","_postAllReqsCompleted","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","combine","AddOperation","envMapIntensity","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","onplaying","VideoTexture","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","bias","PCFSoftShadowMap","_updateEnvironment","bLoop","_auMain","dt","getDelta","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":";AAquBeA,aAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,iBAAAA,OAAAA,SAAAA,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,gBAAAA,IAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,sDAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,gBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,IAAAA,OAAAA,WAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,MAAAA,YAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,QAAAA,EAAAA,EAAAA,MAAAA,KAAAA,WAAAA,OAAAA,EAAAA,KAAAA,IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,WAAAA,EAAAA,IAAAA,mBAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,EAAAA,SAAAA,IAAAA,GAAAA,oBAAAA,UAAAA,QAAAA,UAAAA,OAAAA,EAAAA,GAAAA,QAAAA,UAAAA,KAAAA,OAAAA,EAAAA,GAAAA,mBAAAA,MAAAA,OAAAA,EAAAA,IAAAA,OAAAA,KAAAA,UAAAA,SAAAA,KAAAA,QAAAA,UAAAA,KAAAA,GAAAA,gBAAAA,EAAAA,MAAAA,GAAAA,OAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,OAAAA,eAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,OAAAA,eAAAA,KAAAA,GAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EArtBTA,IAAAA,EAAAA,SAAAA,GAqtBSA,EAAAA,EArtBIC,MAAMC,OAqtBVF,IAAAA,EAAAA,EAAAA,GAntBHG,SAAAA,EAAAA,EAAIC,GAAK,IAAA,EAAA,OAAA,EAAA,KAAA,GA8VD,EAAA,EA7VhB,EAAA,EAAA,KAAA,OA6VgB,oBAAA,WAchB,OAbKC,EAAAA,SAAS,SAACC,GACPA,GAAAA,EAAEC,QAAUD,EAAEE,SAAS,CACnBC,IAAAA,EAAKH,EAAEI,SAASD,QAETE,IAAPF,IACAA,EAAGG,SACHN,EAAEO,SAASC,OAASL,EAAGM,gBAOnC,EAAA,KAzWKX,EAAAA,KAAOA,GAAaY,KAAKC,OAAOC,MAEhCC,EAAAA,gBAED,EAAKf,OAASY,KAAKC,OAAOC,QACrBE,EAAAA,OAASJ,KAAKK,aACdC,EAAAA,OAASN,KAAKO,QAGnB,EAAKnB,OAASY,KAAKC,OAAOO,MACrBJ,EAAAA,OAASJ,KAAKS,SACdH,EAAAA,OAASN,KAAKU,UAInB,EAAKtB,OAASY,KAAKC,OAAOU,KACrBP,EAAAA,OAASJ,KAAKY,QACdN,EAAAA,OAASN,KAAKa,SAIlBC,EAAAA,GAAG3B,GAEH4B,EAAAA,YAASpB,EAETqB,EAAAA,kBAAmB,EAGnBC,EAAAA,YAAStB,EAGTuB,EAAAA,YAAgB,EAChBC,EAAAA,eAAgB,EAGhBC,EAAAA,aAAWzB,EACX0B,EAAAA,aAAW1B,EACX2B,EAAAA,cAAW3B,EAxCC,EAmtBNX,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,KAlqBf,MAAA,SAAGG,GACKA,QAAOQ,IAAPR,GACAA,IAAOa,KAAKuB,SAMT,OAJFjB,KAAAA,OAAOnB,GAAM,KACbqC,KAAAA,IAAOrC,EACPsC,KAAAA,KAAOtC,EAEL,OA0pBIH,CAAAA,IAAAA,YAvpBf,MAAA,WAIW,OAHFsB,KAAAA,OAAON,KAAKuB,UAAY,KACxBC,KAAAA,IAAMxB,KAAKuB,SAET,OAmpBIvC,CAAAA,IAAAA,oBAhpBf,MAAA,SAAkB0C,GAEP,OADFV,KAAAA,iBAAmBU,EACjB,OA8oBI1C,CAAAA,IAAAA,cAroBf,MAAA,SAAY2C,GACJC,IAAAA,EAAID,EAAGE,MAAM,KAGZ,IAAA,IAAIC,UADWnC,IAAhB,KAAKoB,SAAsB,KAAKA,OAAS,IAC/Ba,EAAE,CACRD,IAAAA,EAAKC,EAAEE,GAAGC,OACVJ,EAAGK,OAAS,IAAG,KAAKjB,OAAOY,IAAM,GAIpC,IAAA,IAAIM,KAAK,KAAKC,SAAS,CACpBC,IAAAA,EAAI,KAAKD,SAASD,QACPtC,IAAXwC,EAAE/C,MAAoB+C,EAAEC,YAAYT,GAGrC,OAAA,OAsnBI3C,CAAAA,IAAAA,aA5mBf,MAAA,SAAW2C,GACH,QAAgBhC,IAAhB,KAAKoB,OACD,YAAoBpB,IAApB,KAAKoB,OAAOY,KA0mBT3C,CAAAA,IAAAA,iBAjmBf,MAAA,SAAeqD,GAEJ,OADF3C,KAAAA,SAAS4C,YAAcD,EACrB,OA+lBIrD,CAAAA,IAAAA,iBAtlBf,MAAA,WACW,OAAA,KAAKU,SAAS4C,cAqlBVtD,CAAAA,IAAAA,WAllBf,MAAA,SAASuD,GAEE,OADF7C,KAAAA,SAAS8C,MAAQD,EACf,OAglBIvD,CAAAA,IAAAA,WA7kBf,MAAA,WACW,OAAA,KAAKU,SAAS8C,QA4kBVxD,CAAAA,IAAAA,OApkBf,MAAA,WAMW,OALFyD,KAAAA,SAAU,EAGfzC,KAAK0C,MAAMC,WAAW,KAAM,KAAKvD,MAAM,GAEhC,OA8jBIJ,CAAAA,IAAAA,OAtjBf,MAAA,WAKW,OAJFyD,KAAAA,SAAU,EAEX,KAAKG,WAAW5C,KAAK0C,MAAMC,WAAW,KAAM,KAAKvD,MAAM,GAEpD,OAijBIJ,CAAAA,IAAAA,SAziBf,MAAA,SAAO0C,GACCA,YAAM/B,IAAN+B,EACI,KAAKe,QAAgB,KAAKI,OAClB,KAAKC,OAGjBpB,EAAU,KAAKoB,OACP,KAAKD,SAkiBN7D,CAAAA,IAAAA,iBA1hBf,MAAA,WAIW,OAHF4D,KAAAA,WAAY,EACjB5C,KAAK0C,MAAMC,WAAW,KAAM,KAAKvD,KAAM,KAAKwD,WAErC,OAshBI5D,CAAAA,IAAAA,gBA9gBf,MAAA,WAIW,OAHF4D,KAAAA,WAAY,EACjB5C,KAAK0C,MAAMC,WAAW,KAAM,KAAKvD,KAAM,KAAKwD,WAErC,OA0gBI5D,CAAAA,IAAAA,cAvgBf,MAAA,SAAY0C,GAID,OAHHA,EAAG,KAAKvB,gBACP,KAAK4C,iBAEH,OAmgBI/D,CAAAA,IAAAA,cA1ff,MAAA,SAAYgE,GAAE,IAAA,EAAA,KAcL,IAAA,IAAIf,KAbJvC,KAAAA,SAASuD,KAAOD,EAEhB3D,KAAAA,SAAS,SAACC,GACPA,EAAEC,SACFD,EAAEO,SAAWmD,GAKb1D,EAAEF,OAAM,EAAKM,SAASuD,KAAOD,KAIvB,KAAKd,SAAS,CACpBC,IAAAA,EAAI,KAAKD,SAASD,GAClBE,EAAEe,aAAaf,EAAEe,YAAYF,GAG9B,OAAA,OAueIhE,CAAAA,IAAAA,cAhef,MAAA,WACW,OAAA,KAAKU,SAASuD,OA+dVjE,CAAAA,IAAAA,kCA3df,MAAA,SAAgCmE,EAAQC,GAI7B,OAHF1D,KAAAA,SAASyD,OAASA,EAClBzD,KAAAA,SAAS0D,MAASA,EAEhB,OAudIpE,CAAAA,IAAAA,YArdf,MAAA,WAEW,OADH,KAAKU,SAAS0D,OAAO,KAAKF,YAAY,KAAKxD,SAAS0D,OACjD,OAmdIpE,CAAAA,IAAAA,yBAjdf,MAAA,WAEW,OADH,KAAKU,SAASyD,QAAQ,KAAKD,YAAY,KAAKxD,SAASyD,QAClD,OA+cInE,CAAAA,IAAAA,aA3cf,MAAA,SAAWqE,GAQA,OAPFhE,KAAAA,SAAS,SAACC,GACPA,EAAEC,SACFD,EAAEO,SAASyD,QAAUD,KAKtB,OAmcIrE,CAAAA,IAAAA,gBA/bf,MAAA,SAAc0C,GASH,OARFR,KAAAA,WAAaQ,EAEbrC,KAAAA,SAAS,SAACC,GACPA,EAAEC,SACFD,EAAE4B,WAAaQ,KAIhB,OAsbI1C,CAAAA,IAAAA,mBApbf,MAAA,SAAiB0C,GASN,OARFP,KAAAA,cAAgBO,EAEhBrC,KAAAA,SAAS,SAACC,GACPA,EAAEC,SACFD,EAAE6B,cAAgBO,KAInB,OA2aI1C,CAAAA,IAAAA,YAxaf,MAAA,SAAUuE,GASC,OARFlE,KAAAA,SAAS,SAACC,GACPA,EAAEC,SACXD,EAAEO,SAASC,OAAUyD,KAMb,OA+ZIvE,CAAAA,IAAAA,mBA5Zf,MAAA,SAAiBS,GAKN,OAJFJ,KAAAA,SAAS,SAACC,GACPA,EAAEC,QAAUD,EAAEE,UAAUQ,KAAK0C,MAAMc,uBAAuB/D,EAAIH,KAG/D,OAuZIN,CAAAA,IAAAA,+BAnZf,MAAA,WACQgB,OAAqB,IAArBA,KAAKyD,KAAKzB,OAAqB,MAE9B3C,KAAAA,SAAS,SAACC,GACPA,GAAAA,EAAEC,QAAUD,EAAEE,SAAS,CACnByC,IAAAA,EAAI,IAAIhD,MAAMyE,QAGdC,IAFO,IAAI1E,MAAM2E,MAAOC,cAAcvE,GAAGwE,UAAU7B,QAE3CtC,GACRoE,OAAQpE,EAEP,IAAA,IAAIqE,KAAKhE,KAAKyD,KAAK,CAChBhE,IAAAA,EAAKO,KAAKyD,KAAKO,GACfC,EAAIhC,EAAEiC,kBAAkBzE,EAAG0E,WAEnBxE,IAARgE,GAAqBM,EAAIF,KACzBA,EAAQE,EACRN,EAAMlE,GAIVkE,GAAK3D,KAAK0C,MAAMc,uBAAuBG,EAAKrE,MAIjD,QA0XIN,CAAAA,IAAAA,YApWf,MACW,WACHmD,IAAAA,EAAI,KAAKiC,QAQNjC,OANPA,EAAE9C,SAAS,SAACC,GACJA,EAAEC,SACFD,EAAEO,SAAWP,EAAEO,SAASuE,WAIzBjC,IA0VInD,CAAAA,IAAAA,SArVf,MAAA,WACQqF,IAAAA,EAAI,KAAKC,YAEH3E,IAAN0E,QAA6B1E,IAAV0E,EAAE7C,KAAmB6C,EAAEE,YAAa,QAkVhDvF,CAAAA,IAAAA,cA/Uf,MAAA,SAAYiD,GACJA,QAAMtC,IAANsC,EAAAA,CAEMA,EAAET,IAYL,YAXO7B,IAAVsC,EAAET,MAAmB,KAAKlB,OAAO2B,EAAET,UAAO7B,GAE9CsC,EAAEqC,YAAS3E,EAEXsC,EAAE5C,SAAS,SAACC,GACJA,EAAEE,UAAUF,EAAEE,SAASgF,UACvBlF,EAAEO,UAAUP,EAAEO,SAAS2E,YAG1BC,KAAAA,OAAOxC,GAEL,QAgUIjD,CAAAA,IAAAA,iBA3Tf,MAAA,WAES,IADD0F,IACKV,EADC,KAAK9B,SAASF,OACR,EAAIgC,GAAG,EAAGA,IAAUO,KAAAA,YAAY,KAAKrC,SAAS8B,IAEvD,OAAA,OAuTIhF,CAAAA,IAAAA,WA3Sf,MAAA,SAAS2F,GACDC,IAAAA,EAAqB,iBAATD,EAAoB,KAAKrE,OAAOqE,GAAQA,EASjDC,OARHA,IACAA,EAAEC,IAAI,WACkBlF,IAApBiF,EAAElF,SAASuD,OAAoB,KAAKvD,SAASuD,KAAO2B,EAAElF,SAASuD,WAC/CtD,IAAhBiF,EAAEhC,YAAyB,KAAKA,UAAYgC,EAAEhC,YAK/CgC,IAiSI5F,CAAAA,IAAAA,eAxRf,MAAA,WAOW,OANFoB,KAAAA,OAAOyE,IAAI,WACkBlF,IAA9B,KAAKS,OAAOV,SAASuD,OAAoB,KAAKvD,SAASuD,KAAO,KAAK7C,OAAOV,SAASuD,WACzDtD,IAA1B,KAAKS,OAAOwC,YAAyB,KAAKA,UAAY,KAAKxC,OAAOwC,WAI/D,KAAKxC,SAiRDpB,CAAAA,IAAAA,WAxQf,MAAA,WACQ8F,IAAAA,GAAK,IAAI7F,MAAM2E,MAAOC,cAAe,MACrCkB,EAAK,IAAI9F,MAAM+F,OAGZD,OAFPD,EAAGG,kBAAkBF,GAEdA,IAmQI/F,CAAAA,IAAAA,cAzPf,MAAA,SAAYkG,EAAEC,EAAEC,GAIL,OAHHF,aAAajG,MAAMyE,QAAS,KAAK2B,SAASC,KAAKJ,GAC9C,KAAKG,SAASE,IAAIL,EAAEC,EAAEC,GAEpB,OAqPIpG,CAAAA,IAAAA,WAzOf,MAAA,SAASwG,EAAGC,EAAGC,GAOJ,OANHF,aAAcvG,MAAMyE,QAAS,KAAKiC,MAAML,KAAKE,SAElC7F,IAAP8F,IAAmBA,EAAKD,EAAIE,EAAKF,GAChCG,KAAAA,MAAMJ,IAAIC,EAAGC,EAAGC,IAGlB,OAkOI1G,CAAAA,IAAAA,cAxNf,MAAA,SAAY4G,EAAGC,EAAGC,GAIP,OAHHF,aAAc3G,MAAMyE,QAAS,KAAKqC,SAAST,KAAKM,GAC/C,KAAKG,SAASR,IAAIK,EAAGC,EAAGC,GAEtB,OAoNI9G,CAAAA,IAAAA,iBA/Mf,MAAA,WAEW,OADFgH,KAAAA,WAAWV,KAAMtF,KAAKiG,IAAIC,OACxB,OA6MIlH,CAAAA,IAAAA,SA1Mf,MAAA,WAEW,OADF+G,KAAAA,SAASR,KAAK,cAAc,EAAI,GAC9B,OAwMIvG,CAAAA,IAAAA,eA9Lf,MAAA,SAAamH,GACLC,IAAAA,OAAKzG,EAMLyG,MAJa,iBAAND,IACPC,EAAKpG,KAAK0C,MAAM2D,qBAAqBF,SAG9BxG,IAAPyG,EAAyB,WAETzG,IAAhB,KAAKsB,SAAsB,KAAKA,OAAS,IACxCA,KAAAA,OAAOqF,KAAKF,GAEV,QAkLIpH,CAAAA,IAAAA,OAvKf,MAAA,SAAKuH,EAAKC,GACFD,QAAQ5G,IAAR4G,EAAmB,OAAO,KAE9BA,EAAMvG,KAAK0C,MAAM+D,qBAAqBF,GAElC3B,IAAAA,EAAI,KAGHA,GAAAA,EAAE5D,uBAAiDrB,IAA7BK,KAAK0G,eAAeH,GAqBpC3B,OApBP5E,KAAK0G,eAAeH,GAAKI,KAAK,SAAErH,GACxB6C,IAAAA,EAAI7C,EAAE8E,QAINQ,GAFJ5E,KAAK0C,MAAMkE,aAAahC,EAAGzC,QAEVxC,IAAbiF,EAAE3D,OACG,IAAA,IAAI4F,KAAKjC,EAAE3D,OACZ2D,EAAE3D,OAAO4F,GAAGhC,IAAI1C,EAAEiC,SAClBQ,EAAEC,IAAID,EAAE3D,OAAO4F,SAGlBjC,EAAEC,IAAK1C,GAKRqE,GAAYA,MAGpBM,QAAQC,IAAI,QACLnC,EAIPA,EAAExF,OAASY,KAAKC,OAAOC,OAAOF,KAAKgH,aAAaT,GAEhDU,IAAAA,EAAI,IAAIC,QAAS,SAAEC,EAASC,GAC5BpH,KAAKqH,SAASC,KAAMf,EAAK,SAACgB,GAClBC,IAAAA,EAAQD,EAAKE,OAASF,EAAKE,MAAM,GAKjC7C,GAFJ5E,KAAK0C,MAAMkE,aAAahC,EAAG4C,QAEV7H,IAAbiF,EAAE3D,OACG,IAAA,IAAI4F,KAAKjC,EAAE3D,OACZ2D,EAAE3D,OAAO4F,GAAGhC,IAAI2C,EAAMpD,SACtBQ,EAAEC,IAAID,EAAE3D,OAAO4F,SAGlBjC,EAAEC,IAAK2C,GAEZL,EAAQK,GACRV,QAAQC,IAAI,SAASR,EAAI,WAErB3B,EAAExF,OAASY,KAAKC,OAAOC,OAAOF,KAAK0H,kBAAkBnB,GAMrDC,GAAYA,UAEpB7G,EACA,SAACgI,GACGb,QAAQC,IAAIY,GAGR/C,EAAExF,OAASY,KAAKC,OAAOC,OAAOF,KAAK0H,kBAAkBnB,GACrDC,GAAYA,QAwCjB,OAFH5B,EAAE5D,mBAAkBhB,KAAK0G,eAAeH,GAAOU,GAE5C,OA4DIjI,CAAAA,IAAAA,WAzDf,MAAA,SAAU4I,GAGC,OAFP5H,KAAK0C,MAAMmF,WAAW,KAAMD,GAErB,OAsDI5I,CAAAA,IAAAA,aAnDf,MAAA,SAAY8I,GAED,OADF1G,KAAAA,QAAUiC,EACR,OAiDIrE,CAAAA,IAAAA,aA/Cf,MAAA,SAAY8I,GAED,OADFzG,KAAAA,QAAUgC,EACR,OA6CIrE,CAAAA,IAAAA,cA3Cf,MAAA,SAAa8I,GAEF,OADFxG,KAAAA,SAAW+B,EACT,SAyCIrE,EArtBTA,GAqtBSA,EAAAA,EAAAA,QAAAA,QAAAA;;AC3lBA+I,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA5HTA,IAAAA,EAAAA,WAEM5I,SAAAA,EAAAA,GAAG,EAAA,KAAA,GACNgF,KAAAA,IAAS,IAAIlF,MAAMyE,QAAQ,EAAE,EAAE,GAC/BsE,KAAAA,OAAS,IAAI/I,MAAMyE,QAAQ,EAAE,EAAE,GAC/BuE,KAAAA,GAASjI,KAAKkI,aACdC,KAAAA,SAASxI,EAETyI,KAAAA,aAAUzI,EACV0I,KAAAA,aAAU1I,EAGVmB,KAAAA,GAAG3B,GAgHG4I,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,KAvGf,MAAA,SAAG5I,GACKA,QAAOQ,IAAPR,EAKG,OAHPa,KAAKiG,IAAIqC,QAAQnJ,GAAM,KAClBA,KAAAA,GAAKA,EAEH,OAiGI4I,CAAAA,IAAAA,cAvFf,MAAA,SAAY7C,EAAEC,EAAEC,GAIL,OAHHF,aAAajG,MAAMyE,QAAS,KAAKS,IAAImB,KAAKJ,GACzC,KAAKf,IAAIoB,IAAIL,EAAEC,EAAEC,GAEf,OAmFI2C,CAAAA,IAAAA,YAzEf,MAAA,SAAU7C,EAAEC,EAAEC,GAIH,OAHHF,aAAajG,MAAMyE,QAAS,KAAKsE,OAAO1C,KAAKJ,GAC5C,KAAK8C,OAAOzC,IAAIL,EAAEC,EAAEC,GAElB,OAqEI2C,CAAAA,IAAAA,SA5Df,MAAA,SAAO1E,GAGI,OAFF8E,KAAAA,IAAM9E,EAEJ,OAyDI0E,CAAAA,IAAAA,cAhDf,MAAA,SAAYpG,GACJC,IAAAA,EAAID,EAAGE,MAAM,KAGZ,IAAA,IAAIC,UADWnC,IAAhB,KAAKoB,SAAsB,KAAKA,OAAS,IAC/Ba,EAAE,CACRD,IAAAA,EAAKC,EAAEE,GAAGC,OACVJ,EAAGK,OAAS,IAAG,KAAKjB,OAAOY,IAAM,GAGlC,OAAA,OAuCIoG,CAAAA,IAAAA,aA7Bf,MAAA,SAAWpG,GACH,QAAgBhC,IAAhB,KAAKoB,OACD,YAAoBpB,IAApB,KAAKoB,OAAOY,KA2BToG,CAAAA,IAAAA,aApBf,MAAA,SAAWQ,GACH,GAACA,EAGE,OAFFH,KAAAA,QAAUG,EAER,OAgBIR,CAAAA,IAAAA,aATf,MAAA,SAAWQ,GACH,GAACA,EAGE,OAFFF,KAAAA,QAAUE,EAER,SAKIR,EA5HTA,GA4HSA,EAAAA,EAAAA,QAAAA,QAAAA;;ACmCAS,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA7JTA,IAAAA,EAAAA,WAEMC,SAAAA,EAAAA,EAAKC,EAAMC,GAAI,EAAA,KAAA,GAClBxE,KAAAA,IAAM,IAAIlF,MAAMyE,QAAQ,EAAE,EAAE,GAE5BkF,KAAAA,UAAiBjJ,IAAR8I,EAAqBA,EAAO,GACrCI,KAAAA,WAAkBlJ,IAAT+I,EAAqBA,EAAO,EACrCI,KAAAA,UAAiBnJ,IAARgJ,EAAqBA,EAAO3I,KAAKiG,IAAI8C,QAU9CC,KAAAA,aAAUrJ,EACVsJ,KAAAA,mBAAgBtJ,EA2IV6I,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,cAjGf,MAAA,SAAYtD,EAAEC,EAAEC,GAML,OALHF,aAAajG,MAAMyE,QAAS,KAAKS,IAAImB,KAAKJ,GACzC,KAAKf,IAAIoB,IAAIL,EAAEC,EAAEC,GAIf,OA2FIoD,CAAAA,IAAAA,UAxFf,MAAA,SAAQE,GAEG,OADFG,KAAAA,MAAQH,EACN,OAsFIF,CAAAA,IAAAA,SApFf,MAAA,SAAOG,GAEI,OADFG,KAAAA,KAAOH,EACL,OAkFIH,CAAAA,IAAAA,SAzEf,MAAA,WACQ,KAAKQ,SAAS,KAAKA,QAAQxE,UAC3B,KAAKyE,eAAe,KAAKA,cAAczE,UAEvC0E,IAAAA,EAAW,IAAIjK,MAAMkK,sBAAuB,KAAKP,KAAM,CACvDQ,OAAQnK,MAAMoK,WAGdC,SAAUrK,MAAMsK,eAGhBC,EAAK,IAAIvK,MAAMwK,WAAY,KAAKZ,MAAO,KAAKC,KAAMI,GA+C/C,OA9CPM,EAAGnE,SAASC,KAAK,KAAKnB,KAEtBqF,EAAG5J,OAAQI,KAAK0J,UAAW1J,KAAK2J,oBAC3BX,KAAAA,QAAUE,EAASU,QAyBnBX,KAAAA,cAAgBC,EAkBd,OAeIV,CAAAA,IAAAA,YAXf,MAAA,WACW,OAAA,KAAKQ,UAUDR,CAAAA,IAAAA,eAPf,MAAA,SAAa5D,QAOE4D,EA7JTA,GA6JSA,EAAAA,EAAAA,QAAAA,QAAAA;;ACnFAqB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA/Ef,IAAIA,EAAW,CAGfA,KAAgB,WAEZA,EAASC,QAAY,GACrBD,EAASE,UAAY,GAGrB/J,KAAKgK,GAAqBH,EAASG,GACnChK,KAAKiK,UAAqBJ,EAASI,UACnCjK,KAAKkK,mBAAqBL,EAASK,oBAOvCL,mBAA8B,SAACM,GAC3BN,EAASC,QAAQK,GAAa,GAC9BN,EAASE,UAAUI,GAAW,IAIlCN,gBAA2B,SAACO,EAAQ7C,GAC5B,GAAC6C,EAEA,IAAA,IAAItC,EAAI,EAAGA,EAAIsC,EAAOpI,OAAQ8F,IAAK,CAChCuC,IAAAA,EAAUD,EAAOtC,GACjBuC,GAASA,EAAQ9C,KAe7BsC,GAAc,SAACM,EAASG,EAAcC,GAE9BD,QAAiB3K,IAAjB2K,EAA2B,CACvBE,IAAAA,EAAWX,EAASC,aAEEnK,IAAtB6K,EAASL,KAAwBK,EAASL,GAAW,IACzDK,EAASL,GAAS7D,KAAKgE,QAIJ3K,IAAnB4K,GACAvK,KAAKyK,UAAUT,GAAGG,EAASI,IAgBnCV,UAAqB,SAACM,EAAS5C,EAAMmD,GAC7BN,IAAAA,EAASP,EAASC,QAAQK,GAC9BN,EAASc,gBAAgBP,EAAQ7C,GAE5BmD,GACL1K,KAAKyK,UAAUR,UAAUE,EAAS5C,KAGvBsC,EAAAA,EAAAA,QAAAA,QAAAA;;AC0LAe,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAxQf,IAAIA,EAAS,CAEbA,KAAc,WACVA,EAAOC,UAAY,GACnBD,EAAOE,OAAY,GAEnBF,EAAOG,QAAU,IAAI9L,MAAM+L,eAG3BJ,EAAOK,MAAQ,CACXC,KAAM,CAAE9L,KAAK,QAAS+L,MAAO,GAC7BC,KAAM,CAAEhM,KAAK,OAAQ+L,MAAO,IAAIlM,MAAMoM,QAAQ,GAAI,GAAI,EAAK,MAG/DT,EAAOU,eAGXV,mBAA4B,WACxB,MAAA,qcAeJA,YAAqB,WAGjBA,EAAOE,OAAOS,MAAS,IAAItM,MAAMuM,MAAM,EAAE,EAAE,GAC3CZ,EAAOE,OAAOW,MAAS,IAAIxM,MAAMuM,MAAM,EAAE,EAAE,GAC3CZ,EAAOE,OAAOY,MAAS,IAAIzM,MAAMuM,MAAM,EAAE,EAAE,GAC3CZ,EAAOE,OAAOa,OAAS,IAAI1M,MAAMuM,MAAM,EAAE,EAAE,GAC3CZ,EAAOE,OAAOc,IAAS,IAAI3M,MAAMuM,MAAM,EAAE,EAAE,GAC3CZ,EAAOE,OAAOe,KAAS,IAAI5M,MAAMuM,MAAM,EAAE,EAAE,GAC3CZ,EAAOE,OAAOgB,OAAS,IAAI7M,MAAMuM,MAAM,EAAE,GAAI,GAE7CZ,EAAOE,OAAOiB,MAAS,IAAI9M,MAAMuM,MAAM,EAAE,EAAE,IAE3CZ,EAAOE,OAAOkB,IAAU,IAAI/M,MAAMuM,MAAM,EAAE,EAAE,IAC5CZ,EAAOE,OAAOmB,QAAU,IAAIhN,MAAMuM,MAAM,EAAE,EAAE,IAG5CZ,EAAOC,UAAUqB,iBAAmB,IAAIjN,MAAMkN,kBAAkB,CAC5DC,aAAa,EACbC,YAAY,EACZ/I,QAAS,IAIbsH,EAAOC,UAAUkB,MAAQ,IAAI9M,MAAMqN,eAAe,CAC9CC,SAAU,CACNC,MAAO,CAAEpN,KAAK,OAAQ+L,MAAOP,EAAOE,OAAOiB,OAC3CzI,QAAS,CAAElE,KAAK,QAAS+L,MAAO,KAGpCsB,aAAc7B,EAAO8B,qBACrBC,eAP8C,khBAyB9CP,aAAa,EACbC,YAAY,EACZO,aAAa,IAIjBhC,EAAOC,UAAUgC,SAAWjC,EAAOC,UAAUkB,MAAM3H,QAYnDwG,EAAOC,UAAUiC,cAAgBlC,EAAOC,UAAUkB,MAAM3H,QACxDwG,EAAOC,UAAUiC,cAAcP,SAASC,MAAMrB,MAAQP,EAAOE,OAAOS,MAWpEX,EAAOC,UAAUkC,YAAc,IAAI9N,MAAMkN,kBAAkB,CACvDC,aAAa,EACb9I,QAAS,EACT+I,YAAY,EAEZW,KAAM/N,MAAMgO,aAEhBjN,KAAK0C,MAAMwK,cAAc5F,KAAKtH,KAAKmN,SAAS,WAAY,SAACvD,GACrDgB,EAAOC,UAAUkC,YAAYK,IAAMxD,IAIvCgB,EAAOC,UAAUwC,YAAc,IAAIpO,MAAMkN,kBAAkB,CACvDK,MAAO5B,EAAOE,OAAOS,MAErBa,aAAa,EACbC,YAAY,EACZ/I,QAAS,GACTgK,WAAW,IAef1C,EAAOC,UAAU0C,cAAgB,IAAItO,MAAMqN,eAAe,CACtDC,SAAU3B,EAAOK,MAEjBwB,aAAc7B,EAAO8B,qBACrBC,eAJsD,iqBA0BtDP,aAAa,EACbC,YAAY,EACZO,aAAa,IAIjBhC,EAAOC,UAAU2C,gBAAkB,IAAIvO,MAAMkN,kBAAkB,CAC3DK,MAAO5B,EAAOE,OAAOkB,IACrBI,aAAa,EACbC,YAAY,EACZ/I,QAAS,KAGbsH,EAAOC,UAAU4C,kBAAoB,IAAIxO,MAAMkN,kBAAkB,CAC7DK,MAAO5B,EAAOE,OAAOgB,OACrBM,aAAa,EACbC,YAAY,EACZ/I,QAAS,KAIbsH,EAAO8C,QAAU,IAAIzO,MAAM0O,eAAe,CACtCP,KAAK,IAAInO,MAAM2O,eAAgBtG,KAAMtH,KAAKmN,SAAS,eAEnDf,aAAa,EACb9I,QAAS,EAETgK,WAAW,IAGf1C,EAAOC,UAAUgD,GAAK,IAAI5O,MAAMqN,eAAe,CAC3CG,aAAc7B,EAAO8B,qBACrBC,eAF2C,mcAkB3CP,aAAa,EACbC,YAAY,EACZO,aAAa,IAGjBhC,EAAOkD,OAAS,IAAI7O,MAAM0O,eAAe,CACrCP,KAAK,IAAInO,MAAM2O,eAAgBtG,KAAMtH,KAAKmN,SAAS,cAEnDf,aAAa,EACb9I,QAAS,EACT+I,YAAY,IAIhBzB,EAAO8C,QAAQK,iBAAkB,EACjCnD,EAAOkD,OAAOC,iBAAmB,GAGrCnD,YAAqB,SAACzL,EAAI6O,GAClBpD,EAAOC,UAAU1L,GACjB2H,QAAQC,IAAI,oBAAoB5H,EAAG,uBAIvCyL,EAAOC,UAAU1L,GAAM6O,GAG3BpD,aAAsB,SAACzL,EAAI8O,GACvBrD,EAAOG,QAAQzD,KAAK2G,EAAU,SAACD,GAC3BpD,EAAOsD,YAAY/O,EAAI6O,SAE3BrO,EACA,SAACgI,GACGb,QAAQC,IAAIY,MAIpBiD,YAAqB,SAACzL,GACXyL,OAAAA,EAAOC,UAAU1L,IAG5ByL,OAAgB,WACZA,EAAOK,MAAMC,KAAKC,OAASnL,KAAKmO,MAGrBvD,EAAAA,EAAAA,QAAAA,QAAAA;;AC2TAlI,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAAAA,IAAAA,OAAAA,EAnkBXA,EAAQ,CAEZA,kBAA0B,IAG1BA,KAAa,WAET1C,KAAKoO,OAAS,GAEd1L,EAAM2L,eAAiB,IAAIpP,MAAMqP,qBAAsB,EAAK,GAAI,IAGhE5L,EAAM6L,kBAAe5O,EACrB+C,EAAM8L,iBAAe7O,EAErB+C,EAAM+L,OAASC,SAASC,cAAc,KACtCjM,EAAM+L,OAAOG,MAAMC,QAAU,OAC7BH,SAASI,KAAKC,YAAarM,EAAM+L,QAEjC/L,EAAMwK,cAAgB,IAAIjO,MAAM2O,eAGpClL,WAAmB,SAACsM,GAITA,YAHQrP,IAAXqP,IAAsBA,EAAS,MAG5BA,EAAO,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,IAG5D1M,QAAgB,SAAC6D,GACb8I,OAAOC,SAASC,KAAOhJ,GAO3B7D,mBAA2B,WAChB2M,OAAAA,OAAOG,iBAKlB9M,cAAsB,WAGlB1C,KAAKoO,OAAOqB,UAAW,EAUvBzP,KAAKoO,OAAOqB,YARL,qUAAqUC,KAAKC,UAAUC,aACpV,0kDAA0kDF,KAAKC,UAAUC,UAAUR,OAAO,EAAE,KAUnnDpP,KAAKoO,OAAOyB,YAAc,GAC1B7P,KAAKoO,OAAOyB,YAAY,iBAAkB,EAC1C7P,KAAKoO,OAAOyB,YAAY,iBAAkB,EAErC,OAAQF,YACZA,UAAUG,GAAGC,mBAAoB,gBAAiBpJ,KAAK,SAAEjF,GAC3C1B,KAAKoO,OAAOyB,YAAY,kBAA3BnO,EAGJoF,QAAQC,IAAI,6BAA6B/G,KAAKoO,OAAOyB,YAAY,mBAGxEF,UAAUG,GAAGC,mBAAoB,gBAAiBpJ,KAAK,SAAEjF,GAC3C1B,KAAKoO,OAAOyB,YAAY,kBAA3BnO,EAGJoF,QAAQC,IAAI,6BAA6B/G,KAAKoO,OAAOyB,YAAY,qBAS7EnN,SAAiB,WACN1C,OAAAA,KAAKoO,OAAOqB,UAOvB/M,cAAsB,WACX1C,OAAAA,KAAKoO,OAAOyB,YAAY,iBAOnCnN,cAAsB,WACX1C,OAAAA,KAAKoO,OAAOyB,YAAY,iBAKnCnN,iBAAyB,SAAEsN,GACnBA,OAAAA,EAASZ,OAAOY,EAASC,YAAY,KAAK,GAAGC,eAGrDxN,QAAgB,SAAEsN,GACVG,IAAAA,EAAMzN,EAAM0N,iBAAiBJ,GAE7BG,MAAQ,QAARA,IACQ,SAARA,QAAAA,IAGRzN,cAAsB,SAAEsN,GAChBK,IAAAA,EAAQL,EAASC,YAAY,KAC7BI,OAAW,IAAXA,EAAqBL,EAASM,UAAW,EAAGD,EAAQ,GAEjD,IAGX3N,cAAsB,SAACL,GACfA,QAAAA,EAAEkO,WAAW,cACblO,EAAEkO,WAAW,aAIrB7N,qBAA6B,SAAC6D,GACtBA,OAAAA,EAAIgK,WAAW,QAAgBhK,EAE5BvG,KAAKwQ,gBAAgBjK,GAIhC7D,SAAiB,SAAC+N,EAAUC,EAAKC,EAAWC,GACxCC,EAAEC,KAAK,CACHvK,IAAKkK,EACLrR,KAAK,OACL2R,UAAW,CAAEC,iBAAiB,GAC9BzJ,KAAM0J,KAAKC,UAAUR,GACrBS,YAAY,kCACZC,SAAS,OAETC,QAAS,SAAC9J,GACFoJ,GAAWA,EAAUpJ,MAE9B+J,KAAK,SAAC3J,GACLb,QAAQC,IAAIY,GACRiJ,GAAQA,OAKpBlO,YAAoB,SAAE6O,GAClBA,EAAOC,mBAAmB,GAEpBhS,IAAAA,EAAW,GACjB+R,EAAOlS,SAAU,SAAA4C,GACRA,GAAAA,EAAE1C,OAAQ,CACLkS,IAAAA,EAAIxP,EAAEzC,SACZiS,EAAEC,aAAczP,EAAE0P,aAClBnS,EAAS8G,KAAMmL,EAAEG,mBAKnBC,IAAAA,EAAmB5S,MAAM6S,oBAAoBC,sBAAuBvS,GAAU,GAC9EwS,EAAmB/S,MAAM6S,oBAAoBG,cAAeJ,GAAmBK,SAE/EC,EAAQ,IAAIlT,MAAMC,MAClBkT,EAAO,IAAInT,MAAMoT,KAAML,GAEtBG,OADPA,EAAMtN,IAAKuN,GACJD,GAGXzP,WAAmB,SAACiC,EAAMvF,EAAMsC,GAWvB,IAAA,IAAIO,UAVCtC,IAAN+B,IAAiBA,GAAI,GAIzBiD,EAAKtF,SAAS,SAACC,GACPoC,EAAGpC,EAAEgT,OAAOC,OAAOnT,GAClBE,EAAEgT,OAAOE,QAAQpT,KAIZuF,EAAKzC,SAAS,CACpBC,IAAAA,EAAIwC,EAAKzC,SAASD,GACtBS,EAAMC,WAAWR,EAAG/C,EAAMsC,KAIlCgB,iBAAyB,SAACkC,GAGlB,GAACA,EAAEnC,QAAH,CAKC,IAAA,IAAIR,KAAK2C,EAAE1C,SAAS,CACjBC,IAAAA,EAAIyC,EAAE1C,SAASD,GACnBS,EAAM+P,iBAAiBtQ,GAG3B2E,QAAQC,IAAInC,QATRlC,EAAMC,WAAWiC,EAAGA,EAAExF,MAAM,IAcpCsD,aAAqB,SAACgQ,EAAYlL,GAC1B,IAACA,EAAO,OAAO,EAIf5C,IAAAA,EAAI8N,EACJtT,EAAOwF,EAAExF,KAEboI,EAAMnI,SAAU,SAAEC,GAiBVA,EAAEC,SAIEH,IAASY,KAAKC,OAAOC,QAErBZ,EAAE4B,YAAgB,EAClB5B,EAAE6B,eAAgB,EAGd7B,EAAEE,WACFF,EAAEE,SAASmT,oBACX7L,QAAQC,IAAI,yBAWQ,OAAnBzH,EAAEO,SAASuN,MAKZ9N,EAAEO,SAASuN,IAAIwF,WAAa5S,KAAKoO,OAAOqB,SAAU,EAAIzP,KAAK6S,eAC3DvT,EAAEO,SAASuN,IAAI0F,UAAa7T,MAAM8T,yBAClCzT,EAAEO,SAASuN,IAAI4F,UAAa/T,MAAMgU,eAKtC7T,IAASY,KAAKC,OAAOO,MACrBlB,EAAEO,SAAWG,KAAK4K,OAAOC,UAAU0C,cAG/BjO,EAAEE,WACFF,EAAEE,SAASmT,oBACX7L,QAAQC,IAAI,2BAKhBnC,EAAElF,SAASuD,OACX3D,EAAEO,SAAW+E,EAAElF,SAASuD,UAwBxCP,qBAA6B,SAACwQ,GACtB/M,IAAAA,EAAI,IAAIlH,MAAMC,MAEdiU,EAASD,EAAKrR,MAAMa,EAAM0Q,mBAC1BC,EAAYF,EAAOnR,OAEnBqR,OAAAA,EAAY,EAAUlN,GAG1BA,EAAEd,SAASE,IAAK+N,WAAWH,EAAO,IAAKG,WAAWH,EAAO,IAAKG,WAAWH,EAAO,KAC5EE,EAAY,EAAUlN,GAG1BA,EAAEJ,SAASR,IAAK+N,WAAWH,EAAO,IAAKG,WAAWH,EAAO,IAAKG,WAAWH,EAAO,KAC5EE,EAAY,EAAUlN,GAG1BA,EAAER,MAAMJ,IAAK+N,WAAWH,EAAO,IAAKG,WAAWH,EAAO,IAAKG,WAAWH,EAAO,KACtEhN,MAGXzD,mBAA2B,SAAC6Q,EAAGC,GAKpBD,OAJPA,EAAErO,EAAIoO,WAAYC,EAAErO,EAAEuO,YAAYD,IAClCD,EAAEpO,EAAImO,WAAYC,EAAEpO,EAAEsO,YAAYD,IAClCD,EAAEnO,EAAIkO,WAAYC,EAAEnO,EAAEqO,YAAYD,IAE3BD,GAIX7Q,UAAkB,SAACiO,GACfE,EAAEC,KAAK,CACH1R,KAAM,MACNmH,IAAKvG,KAAK0T,aAAa,OACvB3C,UAAW,CAAEC,iBAAiB,GAC9BI,SAAU,OAEVC,QAAS,SAAC9J,GAASoJ,EAAUpJ,OAUrC7E,yBAAiC,SAACuB,GAC1B0P,IAAAA,EAAO,KAEP1P,OAAAA,EAAI,KACS0P,EAAM,MACnBA,GADA1P,GAAK,KACIwP,YAAY,GAAKE,GAG1B1P,EAAI,GACQ0P,EAAM,MAClBA,GADA1P,GAAK,KACIwP,YAAY,GAAKE,GAG1B1P,EAAI,KACO0P,EAAK,MAChBA,EAAO1P,EAAEwP,YAAY,GAAKE,GAI9BA,EAAO1P,EAAEwP,YAAY,GAAKE,GAK9BjR,wBAAgC,SAACkR,GAEtBA,OADPA,EAAMA,EAAIC,QAAQ,gBAAiB,KAKvCnR,kBAA0B,WAClBoR,IAAAA,EAAOpF,SAASqF,gBAab,OAXHD,EAAKE,kBAAmBF,EAAKE,oBAExBF,EAAKG,qBACVH,EAAKG,uBAEAH,EAAKI,wBACVJ,EAAKI,0BAEAJ,EAAKK,qBACVL,EAAKK,uBAEF,GAKXzR,aAAqB,SAAC0R,EAAMxM,QACPjI,IAAbiI,IAEJlF,EAAM+L,OAAOc,KAAO8E,IAAIC,gBAAiBF,GACzC1R,EAAM+L,OAAO8F,SAAW3M,EACxBlF,EAAM+L,OAAO+F,UAIjB9R,aAAqB,SAAEkR,EAAKhM,GACxBlF,EAAM+R,aAAc,IAAIC,KAAM,CAAEd,GAAO,CAAExU,KAAM,eAAkBwI,IAIrElF,gBAAwB,SAACiS,EAAS/M,GAC9BlF,EAAMkS,aAAc3D,KAAKC,UAAUyD,GAAU/M,IAGjDlF,oBAA4B,SAAEmS,EAAQjN,GAClClF,EAAM+R,aAAc,IAAIC,KAAM,CAAEG,GAAU,CAAEzV,KAAM,6BAAgCwI,IAItFlF,WAAmB,SAACiC,EAAMiD,GAClBuI,IAAAA,EAAMzN,EAAM0N,iBAAiBxI,GAC7BuI,KAAAA,EAAInO,OAAS,GAAbmO,CAGAA,GAAQ,QAARA,GAAyB,SAARA,EAAe,CAC5B2E,IAEAC,EAAO,CAEPC,OAJgB,QAAR7E,QASexQ,IAAvB+C,EAAM6L,eAA4B7L,EAAM6L,aAAe,IAAItP,MAAMgW,cAErEvS,EAAM6L,aAAa2G,MAAOvQ,EAAM,SAAEwQ,GACzBA,aAAkBC,YACnB1S,EAAM2S,oBAAqBF,EAAQvN,IAGnCd,QAAQC,IAAKoO,GACbzS,EAAM4S,gBAAgBH,EAAQvN,KAEnCmN,GAIH5E,GAAQ,QAARA,EAAc,MACYxQ,IAAtB+C,EAAM8L,cAA2B9L,EAAM8L,YAAc,IAAIvP,MAAMsW,aAE/DJ,IAAAA,EAASzS,EAAM8L,YAAY0G,MAAMvQ,GAErCjC,EAAMkS,aAAaO,EAAQvN,MAInClF,eAAuB,SAAC8S,EAAM5N,GACtB6N,IAAAA,EAAM,IAAIC,MAEd5O,QAAQC,IAAI,wBAAwByO,GAEpCxV,KAAKiG,IAAI0P,QAAQC,OAAS,EAC1B5V,KAAKiG,IAAI0P,QAAQE,yBAEjB7V,KAAK0J,UAAUoM,QAAQN,EAAKA,GAC5BxV,KAAK0J,UAAUqM,OAAQ/V,KAAKgW,UAAWhW,KAAKiG,IAAI0P,SAE5CM,IAAAA,EAASjW,KAAK0J,UAAUwM,WAAWC,YAUhCV,OATPA,EAAIW,IAAMH,EAENrO,IACAlF,EAAM+L,OAAOc,KAAO0G,EAAOpC,QAAQ,YAAa,sBAChDnR,EAAM+L,OAAO8F,SAAW3M,EACxBlF,EAAM+L,OAAO+F,SAGjBxU,KAAKqW,YACEZ,GAGX/S,uBAA+B,SAACjD,EAAI2S,QACrBzS,IAAPF,QAA6BE,IAATyS,IAEpBA,EAAKkE,OAETlE,EAAK1S,SAASD,GAAKA,KAUvBiD,eAAuB,SAACvD,GAChBsS,IAAAA,EAAI,IAAIxS,MAAMsX,kBAAmB,EAAE,EAAE,GAErCvI,EAAM,IAAI/O,MAAMuX,qBAEpB9T,EAAMwK,cAAc5F,KAAMtH,KAAKmN,SAAS,uBAAyB,SAACsJ,GAC9DA,EAAInN,SAAWrK,MAAMsK,aACrByE,EAAIZ,IAAMqJ,IAGV7R,IAAAA,EAAI5E,KAAK0W,gBAAgBvX,GAKtByF,OAJPA,EAAEC,IAAK,IAAI5F,MAAMoT,KAAKZ,IACtB7M,EAAE1B,YAAY8K,GAEdpJ,EAAEzE,gBACKyE,GAIXlC,kBAA0B,SAACvD,GACnBsS,IAAAA,EAAI,IAAIxS,MAAMsX,kBAAmB,EAAE,EAAE,GAErCvI,EAAM,IAAI/O,MAAMuX,qBACpBxI,EAAI2I,UAAY,EAEhBjU,EAAMwK,cAAc5F,KAAMtH,KAAKmN,SAAS,uBAAyB,SAACsJ,GAC9DA,EAAInN,SAAWrK,MAAMsK,aACrByE,EAAIZ,IAAMqJ,IAGd/T,EAAMwK,cAAc5F,KAAMtH,KAAKmN,SAAS,2BAA6B,SAACsJ,GAClEA,EAAInN,SAAWrK,MAAMsK,aACrByE,EAAI4I,aAAeH,EACnBzI,EAAI6I,aAAeJ,IAGvB/T,EAAMwK,cAAc5F,KAAMtH,KAAKmN,SAAS,2BAA6B,SAACsJ,GAClEA,EAAInN,SAAWrK,MAAMsK,aACrByE,EAAI8I,UAAYL,IAOhB7R,IAAAA,EAAI5E,KAAK0W,gBAAgBvX,GAKtByF,OAJPA,EAAEC,IAAK,IAAI5F,MAAMoT,KAAKZ,IACtB7M,EAAE1B,YAAY8K,GAEdpJ,EAAEzE,gBACKyE,GAIXlC,aAAqB,SAACkH,EAASmN,EAAGC,QACnBrX,IAAPoX,IAAkBA,EAAK,QAChBpX,IAAPqX,IAAkBA,EAAK,GAEvBvF,IAAAA,EAAI,IAAIxS,MAAMgY,oBAAqBF,EAAIC,GAEvChJ,EAAM,IAAI/O,MAAMuX,0BACJ7W,IAAZiK,GAAuBlH,EAAMwK,cAAc5F,KAAKsC,EAAS,SAAC6M,GAC1DA,EAAInN,SAAWrK,MAAMsK,aACrByE,EAAIZ,IAAMqJ,IAGV7R,IAAAA,EAAI5E,KAAK0W,kBAAkBQ,QAAmB,IAAVjI,KAAKkI,IAItCvS,OAHPA,EAAEC,IAAK,IAAI5F,MAAMoT,KAAKZ,EAAGzD,IACzBpJ,EAAEzE,gBAEKyE,IAIIlC,EAAAA,EAAAA,QAAAA,QAAAA;;ACCA0U,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EApkBf,IAAIA,EAAW,CAEfA,SAAoB,EACpBA,SAAoB,EAEpBA,WAAsB,EAKtBA,KAAgB,WACZA,EAASC,YAAW1X,EACpByX,EAASE,cAAW3X,EACpByX,EAASG,QAAW,EAEpBH,EAASI,WAAY,EAGrBJ,EAASK,YAAS9X,EAClByX,EAASM,YAAS/X,EAElByX,EAASO,mBASbP,YAAuB,SAAC1V,GACpB0V,EAASG,OAAS7V,EAClBoF,QAAQC,IAAI,aAAarF,IAY7B0V,KAAgB,SAACQ,EAASC,EAAKC,GAMpBjH,OAHPuG,EAASI,WAAY,EACrB1Q,QAAQC,IAAI,kBAAkB8Q,GAEvBhH,EAAEkH,QAASH,EAAS,SAAErQ,GACzB6P,EAASE,SAAY/P,EACrB6P,EAASC,OAAYQ,EACrBT,EAASI,WAAY,EAIrBJ,EAASY,WAAWzQ,GAEhBuQ,GAAYA,IAChB9X,KAAKiK,UAAU,kBAAmB4N,MAK1CT,WAAsB,SAACa,GAEfA,QAAStY,KADbsY,OAAiBtY,IAATsY,EAAqBb,EAASE,SAAWW,GAG5C,IAAA,IAAInW,KAAKmW,EACNb,EAASc,aAAapW,IAAIsV,EAASc,aAAapW,GAAImW,EAAKnW,KAGrEsV,gBAA2B,SAAC5V,EAAKpC,QAChBO,IAATP,IAAoBA,EAAOY,KAAKC,OAAOC,OAEvC+G,IAAAA,OAAItH,EACJuC,EAAW,GAKX+E,GAHA7H,IAASY,KAAKC,OAAOO,MAAOyG,EAAIjH,KAAKmY,gBAAgB3W,IACrDpC,IAASY,KAAKC,OAAOC,QAAO+G,EAAIjH,KAAKoY,aAAa5W,SAE5C7B,IAANsH,EAAAA,CAEC,IAAA,IAAIhF,KAAKgF,EAAE/E,SAAS,CACjBmW,IAAAA,EAAQpR,EAAE/E,SAASD,QAELtC,IAAd0Y,EAAM7W,KAAmBU,EAASoE,KAAM+R,EAAM7W,KAG/CU,OAAAA,IAGXkV,kBAA6B,SAAChY,QACbO,IAATP,IAAoBA,EAAOY,KAAKC,OAAOC,OACvCoY,IAAAA,EAAQtY,KAAKO,OAEbnB,IAASY,KAAKC,OAAOO,MAAK8X,EAAQtY,KAAKU,UACvCtB,IAASY,KAAKC,OAAOU,KAAK2X,EAAQtY,KAAKa,SAEvC0X,IAAAA,EAAQ,GAEP,IAAA,IAAIC,KAAKF,EAAM,CACZ1T,IAAAA,EAAI0T,EAAME,GAKV5T,GAAKA,EAAEN,QAAUM,EAAEN,OAAO9C,WAEE7B,IAAxB4Y,EAAM3T,EAAEN,OAAO9C,OAAoB+W,EAAM3T,EAAEN,OAAO9C,KAAO,IAC7D+W,EAAM3T,EAAEN,OAAO9C,KAAK8E,KAAK1B,EAAEpD,MAM5B+W,OAAAA,GAGXnB,2BAAsC,SAACqB,GAC/BC,IAAAA,EAAI1Y,KAAKmY,gBAAgBM,GACzBC,QAAM/Y,IAAN+Y,EAAAA,CAEAC,IAAAA,EAAK,GAEJ,IAAA,IAAItW,KAAKqW,EAAExW,SAAS,CACjB0W,IAAAA,EAASF,EAAExW,SAASG,GACpBuW,EAAOxZ,MACPuZ,EAAGrS,KAAK,CACJgN,WAAWsF,EAAOvT,SAASH,EAAEuO,YAAY2D,EAASyB,aAClDvF,WAAWsF,EAAOvT,SAASF,EAAEsO,YAAY2D,EAASyB,aAClDvF,WAAWsF,EAAOvT,SAASD,EAAEqO,YAAY2D,EAASyB,aAClDvF,WAAWsF,EAAOjT,MAAMT,EAAEuO,YAAY2D,EAASyB,eAKpDF,OAAAA,IAGXvB,4BAAuC,SAACqB,GAChCC,IAAAA,EAAI1Y,KAAKmY,gBAAgBM,GACzBC,QAAM/Y,IAAN+Y,EAAAA,CAEAI,IAAAA,EAAK,GAEJ,IAAA,IAAIzW,KAAKqW,EAAExW,SAAS,CACjB6W,IAAAA,EAASL,EAAExW,SAASG,GACpB0W,EAAOrZ,SAASsZ,eAChBF,EAAGxS,KAAKyS,EAAOrZ,SAASsZ,eAMzBF,OAAAA,IAIX1B,gBAA2B,WACvBA,EAASc,aAAe,GAGxBd,EAASc,aAAae,MAAQ,SAACA,QACbtZ,IAAVsZ,GAEJ7B,EAAS8B,SAASD,IAGtB7B,EAASc,aAAa5V,YAAc,SAAC6W,QACnBxZ,IAAVwZ,GAEJ/B,EAASgC,eAAeD,IAI5B/B,EAASc,aAAamB,YAAc,SAACC,GAE7BC,IAAAA,EAAOD,EAAIE,SACXF,EAAIE,WACAD,EAAKhT,KAAKvG,KAAKyZ,gBAAgBF,EAAKhT,KACpCgT,EAAKxT,UAAU/F,KAAK0Z,wBAAwBH,EAAKxT,WAGrD4T,IAAAA,EAAIL,EAAIM,UACRD,GACIA,EAAEE,WAAW7Z,KAAK8Z,sBAAuB,IAAI7a,MAAMyE,QAAQiW,EAAEE,UAAU,GAAGF,EAAEE,UAAU,GAAGF,EAAEE,UAAU,KAErG7Z,KAAK+Z,SACDJ,EAAEnN,QAAWxM,KAAK+Z,QAAQvN,MAAQ,IAAIvN,MAAMuM,MAAMmO,EAAEnN,MAAM,GAAGmN,EAAEnN,MAAM,GAAGmN,EAAEnN,MAAM,KAChFmN,EAAEK,YAAWha,KAAK+Z,QAAQC,UAAYL,EAAEK,gBAE1Bra,IAAdga,EAAEM,QAAuBja,KAAKka,cAAcP,EAAEM,SAC7Cja,KAAKka,eAAc,IAIxBla,KAAKma,iBAAgB,IAKzBna,KAAKma,iBAAgB,GAGrBC,IAAAA,EAAMd,EAAIe,YACVD,GACIA,EAAIE,MAAMta,KAAKua,WAAU,GAG7BjB,EAAIkB,UAAUxa,KAAKya,YAAYnB,EAAIkB,WAK3CpD,EAASc,aAAawC,WAAa,SAACA,QACb/a,IAAf+a,GAEAA,EAAWC,QACX3a,KAAK4a,eAAeF,EAAWC,OAAOpU,IAAKmU,EAAWC,OAAOE,OAKrEzD,EAASc,aAAa4C,QAAU,SAACA,QACbnb,IAAZmb,GAEJ9a,KAAKiG,IAAI8U,WAAWD,IAIxB1D,EAASc,aAAa8C,aAAe,SAAChY,GAC9BA,QAAMrD,IAANqD,EAEC,IAAA,IAAIiY,KAAKjY,EAAE,CACRkY,IAAAA,EAAUlY,EAAEiY,GAEZC,GAAAA,EAAQC,QAAoC,IAA1BD,EAAQC,OAAOnZ,OAAa,CAC1CoZ,IAAAA,EAAI,IAAInc,MAAMyE,QACd4P,WAAW4H,EAAQC,OAAO,IAC1B7H,WAAW4H,EAAQC,OAAO,IAC1B7H,WAAW4H,EAAQC,OAAO,KAE1BE,EAAI,IAAIpc,MAAMyE,QACd4P,WAAW4H,EAAQC,OAAO,IAC1B7H,WAAW4H,EAAQC,OAAO,IAC1B7H,WAAW4H,EAAQC,OAAO,KAE9Bnb,KAAKsb,IAAIC,oBAAoBH,GAC7Bpb,KAAKsb,IAAIC,oBAAoBF,MAMzCjE,EAASc,aAAasD,WAAa,SAACC,GAC5BA,QAAS9b,IAAT8b,EAEC,IAAA,IAAIpX,KAAKoX,EAAK,CACXlT,IAAAA,EAAMkT,EAAKpX,GAEL,SAANA,EACArE,KAAKiG,IAAIyV,YACL,IAAI1b,KAAK+H,KACR4T,YAAYpT,EAAIlD,SAAS,GAAGkD,EAAIlD,SAAS,GAAGkD,EAAIlD,SAAS,IACzDuW,UAAUrT,EAAIP,OAAO,GAAGO,EAAIP,OAAO,GAAGO,EAAIP,OAAO,IACjD6T,OAAOtT,EAAIJ,MAIZnI,IAAAA,KAAK+H,IAAI1D,GACZsX,YAAYpT,EAAIlD,SAAS,GAAGkD,EAAIlD,SAAS,GAAGkD,EAAIlD,SAAS,IACzDuW,UAAUrT,EAAIP,OAAO,GAAGO,EAAIP,OAAO,GAAGO,EAAIP,OAAO,IACjD6T,OAAOtT,EAAIJ,OAOxBiP,EAASc,aAAa4D,WAAa,SAACC,GAC5BA,QAAOpc,IAAPoc,EAAAA,CAEAzD,IAAAA,EAAQyD,EAAGzD,MACXC,EAAQwD,EAAGxD,MAGN/W,EAAAA,SAAAA,GACDoD,IAAAA,EAAI0T,EAAM9W,GAGVwa,EAAIhc,KAAKic,qBAAqBza,GAAK0a,iBAGnCC,EAAYvX,EAAEuX,UAEdA,IACIA,EAAU9W,UAAU2W,EAAEL,YAAYQ,EAAU9W,SAAS,GAAG8W,EAAU9W,SAAS,GAAG8W,EAAU9W,SAAS,IACjG8W,EAAUpW,UAAUiW,EAAEI,YAAYD,EAAUpW,SAAS,GAAGoW,EAAUpW,SAAS,GAAGoW,EAAUpW,SAAS,IACjGoW,EAAUxW,OAAUqW,EAAEK,SAASF,EAAUxW,MAAM,GAAGwW,EAAUxW,MAAM,GAAGwW,EAAUxW,MAAM,IAErFwW,EAAUG,MAAQC,MAAMC,QAAQL,EAAUG,OAM9CG,IAAAA,EAAO7X,EAAE6X,KACTA,IACIF,MAAMC,QAAQC,GACdA,EAAKC,QAAQ,SAAAC,GACT3c,KAAK0W,kBAAkBpP,KAAKqV,GAAGC,SAASZ,KAI5CA,EAAE1U,KAAKmV,IAKX7X,EAAEiY,YAAeb,EAAEc,cAAclY,EAAEiY,YACnCjY,EAAEmY,eAAef,EAAEc,cAAclY,EAAEmY,eAEnCnY,EAAEoY,OAAOhB,EAAEiB,SAkBXrY,EAAEsY,WAAUlB,EAAEjb,OAAS6D,EAAEsY,WAtD5B,IAAA,IAAI1b,KAAO8W,EAAP9W,EAAAA,GAgEJ,IAAA,IAAI2b,KAAS5E,EAAM,CAChBrW,IAAAA,EAAWqW,EAAM4E,GAEjBlW,EAAIjH,KAAKoY,aAAa+E,GAEtBlW,QAAMtH,IAANsH,EACK,IAAA,IAAIhF,KAAKC,EAAS,CACfkb,IAAAA,EAAUlb,EAASD,GACnBE,EAAInC,KAAKoY,aAAagF,QAChBzd,IAANwC,GAAiBA,EAAEya,SAAS3V,IAMvC,IAAA,IAAIzF,KAAO8W,EAAM,CACd1T,IAAAA,EAAI0T,EAAM9W,GACVwa,EAAIhc,KAAKoY,aAAa5W,GAEtBwa,QAAMrc,IAANqc,SACerc,IAAXiF,EAAE9B,OAGE8B,EAAE9B,MAAOkZ,EAAElZ,OAAQgE,QAAQC,IAAI,QAAQvF,KACpCwa,EAAEnZ,OAAQiE,QAAQC,IAAI,QAAQvF,KAQrCoD,EAAE/E,UAAS,CACPmO,IAAAA,EAAM,IAAI/O,MAAMuX,qBAAqB5R,EAAE/E,UAC3Cmc,EAAE9Y,YAAa8K,OAqB/BoJ,EAASc,aAAamF,cAAgB,SAACtB,GAC/BA,QAAOpc,IAAPoc,EAAAA,CAEAzD,IAAAA,EAAQyD,EAAGzD,MACXC,EAAQwD,EAAGxD,MAGN/W,EAAAA,SAAAA,GACDoD,IAAAA,EAAI0T,EAAM9W,GAGVwa,EAAIhc,KAAKsd,wBAAwB9b,GAAK0a,iBAGtCO,EAAO7X,EAAE6X,KACTA,IACIF,MAAMC,QAAQC,GACdA,EAAKC,QAAQ,SAAAC,GACT3c,KAAKud,qBAAqBjW,KAAKqV,GAAGC,SAASZ,KAI/CA,EAAE1U,KAAKmV,IAIX7X,EAAEoY,OAAOhB,EAAEiB,SAEXrY,EAAEtC,aAAa0Z,EAAE5C,eAAexU,EAAEtC,aAClCsC,EAAEpC,OAAOwZ,EAAEwB,SAAS5Y,EAAEpC,OAGtBoC,EAAEsY,WAAUlB,EAAEjb,OAAS6D,EAAEsY,UAGzBO,IAAAA,EAAU7Y,EAAE6Y,QACZlB,GAAAA,MAAMC,QAAQiB,GACT,IAAA,IAAIpb,KAAKob,EAAQ,CACd/E,IAAAA,EAAI+E,EAAQpb,GACZqb,EAAM,IAAIze,MAAMyE,QAAQ4P,WAAWoF,EAAE,IAAIpF,WAAWoF,EAAE,IAAIpF,WAAWoF,EAAE,KAC3E1Y,KAAK2d,WAAWC,aAAapc,EAAKkc,EAAKpK,WAAWoF,EAAE,KAIxDmF,IAAAA,EAAejZ,EAAEiZ,aACjBtB,GAAAA,MAAMC,QAAQqB,GACT,IAAA,IAAIxb,KAAKwb,EAAa,CAIlB,IAHDnF,IAAAA,EAAImF,EAAaxb,GAEjB8Y,EAAS,GACJnX,EAAE,EAAGA,EAAE0U,EAAE1W,OAAQgC,GAAG,EAAE,CACvBK,IAAAA,EAAI,IAAIpF,MAAMyE,QAAQgV,EAAE1U,GAAG0U,EAAE1U,EAAE,GAAG0U,EAAE1U,EAAE,IAC1CmX,EAAO7U,KAAKjC,GAGhBrE,KAAK2d,WAAWG,kBAAkBtc,EAAK2Z,KAhD9C,IAAA,IAAI3Z,KAAO8W,EAAP9W,EAAAA,GAuDJ,IAAA,IAAI2b,KAAS5E,EAAM,CAChBrW,IAAAA,EAAWqW,EAAM4E,GAEjBlW,EAAIjH,KAAKmY,gBAAgBgF,GAEzBlW,QAAMtH,IAANsH,EACK,IAAA,IAAIhF,KAAKC,EAAS,CACfkb,IAAAA,EAAUlb,EAASD,GACnBE,EAAInC,KAAKmY,gBAAgBiF,QACnBzd,IAANwC,GAAiBA,EAAEya,SAAS3V,IAMvC,IAAA,IAAIzF,KAAO8W,EAAM,CACd1T,IAAAA,EAAI0T,EAAM9W,GACVwa,EAAIhc,KAAKmY,gBAAgB3W,GAEzBwa,QAAMrc,IAANqc,SACerc,IAAXiF,EAAE9B,OAGE8B,EAAE9B,MAAOkZ,EAAElZ,OAAQgE,QAAQC,IAAI,QAAQvF,KACpCwa,EAAEnZ,OAAQiE,QAAQC,IAAI,QAAQvF,KAIrCoD,EAAEmZ,WAAY/B,EAAEjZ,iBAEhB6B,EAAE/E,UAAS,CACPmO,IAAAA,EAAM,IAAI/O,MAAMuX,qBAAqB5R,EAAE/E,UAC3Cmc,EAAE9Y,YAAa8K,QAwBnCoJ,eAA0B,SAAC4G,EAAKC,GAC5B7G,EAASc,aAAa8F,GAAOC,GAKjC7G,SAAoB,SAAC8G,EAAOC,EAAM3X,GAC1B4Q,IAAAA,EAASI,WAAcJ,EAASG,aACtB5X,IAAVue,EAAAA,MACSve,IAATwe,IAAoBA,EAAO/G,EAASgH,UAEpCvG,IAAAA,EAAMT,EAASC,OAEfgH,EAAI,GACRA,EAAExG,IAAOA,EACTwG,EAAE9W,KAAO2W,EACTG,EAAEF,KAAQA,IAAS/G,EAASkH,SAAW,MAAQ,MAE3CC,IAAAA,EAAOtN,KAAKC,UAAUmN,GAG1BxN,EAAEC,KAAK,CACHvK,IAAKvG,KAAK0T,aAAa,aACvBtU,KAAK,OACLmI,KAAMgX,EACNpN,YAAY,kCACZC,SAAS,OAITC,QAAS,SAACmN,GAEFA,IAAGpH,EAASE,SAAWkH,GAGvBhY,GAAYA,SAK5B4Q,SAAoB,SAAC6B,GACjB7B,EAASK,OAASwB,GAEtB7B,SAAoB,WACTA,OAAAA,EAASK,QAGpBL,eAA0B,SAAC+B,GACvB/B,EAASM,OAASyB,GAEtB/B,eAA0B,WACfA,OAAAA,EAASM,SAILN,EAAAA,EAAAA,QAAAA,QAAAA;;ACliBAqH,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAlCf,IAAIA,EAAW,CAGfA,KAAgB,WAEZA,EAASC,UAAY,IAAIzf,MAAM0f,cAC/BF,EAAS1T,QAAY,IAAI9L,MAAM2f,aAGnCH,iBAA4B,SAACI,GACzBA,EAAW7e,KAAK0C,MAAM+D,qBAAqBoY,GAEvCtc,IAAAA,EAAK,IAAItD,MAAM6f,MAAO9e,KAAKye,SAASC,WAExCD,EAAS1T,QAAQzD,KAAMuX,EAAU,SAAChK,GAC9BtS,EAAGwc,UAAWlK,GAGdtS,EAAGyc,WAgBIP,EAAAA,EAAAA,QAAAA,QAAAA;;ACu1BAxY,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA93Bf,IAAMgZ,EAAkB,SAAS/Z,GAAW,OAAC,EAAM+J,KAAKiQ,IAAIha,EAAI+J,KAAKkI,KAAO,GAMxElR,EAAM,CAGVA,QAAe,GACfA,SAAe,IACfA,QAAe,IAEfA,OAAa,IACbA,uBAA6B,EAG7BA,WAAkB,EAClBA,QAAkB,EAClBA,YAAkB,EAIlBA,KAAW,WACPA,EAAIkZ,WAAQxf,EACZsG,EAAImZ,sBAAwBnZ,EAAIoZ,uBAEhCpZ,EAAIqZ,eAAiB,GACrBrZ,EAAIsZ,aAAkB,GACtBtZ,EAAIuZ,SAAiB,IAErBvZ,EAAIwZ,WAAY,EAEhBxZ,EAAIyZ,eAAgB,EAOpBzZ,EAAI0Z,eAAYhgB,EAChBsG,EAAI2Z,kBAGJ3Z,EAAI4Z,UAAW,IAAI7f,KAAK+H,KAAM8T,OAAO7b,KAAKiG,IAAI6Z,SAC9C7Z,EAAI8Z,SAAW,IAAI/f,KAAK+H,IACxB9B,EAAI+Z,QAAW,IAAIhgB,KAAK+H,IAExB9B,EAAIga,aAAUtgB,EAEdsG,EAAIia,WAAa,EACjBja,EAAIka,cAAgB,EAEpBla,EAAIqC,QAAU,GAIdrC,EAAIma,MAAQ,IAAInhB,MAAMyE,QAAQ,EAAE,EAAE,GAClCuC,EAAIC,MAAQ,IAAIjH,MAAMohB,WAGtBpa,EAAIqa,WAAa,EACjBra,EAAIsa,WAAa,IAAIthB,MAAMyE,QAAQ,EAAE,EAAE,GAGvCuC,EAAIua,mBAAoB,GAS5Bva,sBAA4B,WACjBA,OAAAA,EAAI4Z,SAAS1b,KASxB8B,oBAA0B,WACfA,OAAAA,EAAIma,OASfna,eAAqB,WACbsC,IAAAA,EAAM,IAAIvI,KAAK+H,IAKZQ,OAJPA,EAAIpE,IAAImB,KAAKW,EAAI4Z,SAAS1b,KAC1BoE,EAAIP,OAAO1C,KAAKW,EAAI4Z,SAAS7X,QAC7BO,EAAIJ,IAAMlC,EAAI4Z,SAAS1X,IAEhBI,GAGXtC,OAAa,SAACsC,EAAKpJ,GACXoJ,QAAQ5I,IAAR4I,EAGGA,OADPA,EAAIzH,GAAG3B,GACAoJ,GAOXtC,gBAAsB,WACdA,OAAAA,EAAIia,WAAa,GAQzBja,+BAAqC,WAC1BA,OAAAA,EAAIua,mBAQfva,oBAA0B,WAClBjG,QAAyBL,IAAzBK,KAAKygB,gBAALzgB,CAKIA,KAAKygB,gBAAgBpc,EACrBrE,KAAKygB,gBAAgBjI,EAEvBrT,GAAK,GACPc,EAAIua,mBAAoB,EAI5Bva,EAAIua,mBAAoB,OAZpBva,EAAIua,mBAAoB,GAmBhCva,eAAqB,SAACvE,QACR/B,IAAN+B,GACAA,IAAMuE,EAAIwZ,YAEdxZ,EAAIwZ,UAAY/d,OAEM/B,IAAlBsG,EAAIya,YAAyBza,EAAIya,UAAUC,QAAUjf,GAErDuE,EAAI2a,UAAS3a,EAAI2a,QAAQD,QAAUjf,GACnCuE,EAAI4a,gBAAe5a,EAAI4a,cAAcF,QAAUjf,GAEnDoF,QAAQC,IAAI,iBAAiBd,EAAIwZ,aAMrCxZ,kBAAwB,WACpBA,EAAI6a,gBAAgB7a,EAAIwZ,YAO5BxZ,qBAA2B,WAChBA,OAAAA,EAAIwZ,WAOfxZ,QAAc,WAAcA,OAAAA,EAAIkZ,QAAUlZ,EAAI8a,YAM9C9a,cAAoB,WAAcA,OAAAA,EAAIkZ,QAAUlZ,EAAI+a,SAMpD/a,SAAe,WAAcA,OAAAA,EAAIkZ,QAAUlZ,EAAIgb,aAM/Chb,WAAiB,SAAC6U,QACEnb,IAAZmb,IAEAA,IAAY7U,EAAI8a,YAAa9a,EAAI2Z,kBACjC9E,IAAY7U,EAAI+a,SAAa/a,EAAIib,wBACjCpG,IAAY7U,EAAIgb,aAAahb,EAAIkb,gCAOzClb,uBAA6B,gBACHtG,IAAlBsG,EAAI0Z,WAAyB1Z,EAAI2Z,kBAErC3Z,EAAI8U,WAAW9U,EAAI0Z,YAMvB1Z,gBAAsB,WACdjG,IAAAA,KAAKohB,GAAGC,eAARrhB,CAQAiG,GANJA,EAAI0Z,UAAY1Z,EAAIkZ,MAEpBlZ,EAAIkZ,MAAQlZ,EAAI8a,WAChB9a,EAAIyZ,eAAgB,OAGA/f,IAAhBsG,EAAI2a,QAAsB,CAC1B3a,EAAIqb,UAAY,IAAIriB,MAAMsiB,kBAAmBtb,EAAI6Z,QAASzQ,OAAOmS,WAAanS,OAAOoS,YAAaxb,EAAIyb,SAAUzb,EAAI8C,SACpH9C,EAAIqb,UAAUhP,OAAOqP,YAErB1b,EAAI2a,QAAU,IAAI3hB,MAAM2iB,cAAe3b,EAAIqb,UAAWthB,KAAK0J,UAAUwM,YAEjE/T,IAAAA,EAAI8D,EAAI2a,QAEZze,EAAE0f,YAAgB5b,EAAIqZ,eACtBnd,EAAE2f,WAAgB,EAEd7b,EAAIuZ,SAAW,IACfrd,EAAE4f,eAAgB,EAClB5f,EAAE6f,cAAgB/b,EAAIuZ,UAG1Brd,EAAE8f,oBAAqB,EAEvB9f,EAAE+f,YAAc,EAChB/f,EAAEggB,YAAc,IAChBhgB,EAAEigB,YAAc,IAEXnc,EAAIwZ,YAAWtd,EAAEwe,SAAU,GAGhCxe,EAAEkgB,iBAAiB,QAAQ,WACvBpc,EAAIyZ,eAAgB,IAExBvd,EAAEkgB,iBAAiB,MAAM,WACrBpc,EAAIyZ,eAAgB,IAK5BzZ,EAAIya,UAAYza,EAAI2a,QAEpB3a,EAAI0P,QAAU1P,EAAIqb,UAGdthB,KAAKye,SAASC,WAAazY,EAAI0P,QAAQzT,SAASF,OAAO,GAAGiE,EAAI0P,QAAQ9Q,IAAK7E,KAAKye,SAASC,WAE7FzY,EAAIya,UAAU9gB,SACVqG,EAAI4Z,UAAU5Z,EAAIqc,iBAEtBtiB,KAAKqW,cAMTpQ,sBAA4B,WACpBjG,IAAAA,KAAKohB,GAAGC,eAARrhB,CAUAiG,GARJA,EAAI0Z,UAAY1Z,EAAIkZ,MAEhBnf,KAAKsb,IAAIiH,oBAAoB,IAAKviB,KAAKsb,IAAIkH,kBAAkB,IAEjEvc,EAAIkZ,MAAQlZ,EAAI+a,QAChB/a,EAAIyZ,eAAgB,OAGM/f,IAAtBsG,EAAI4a,cAA4B,CAChC5a,EAAIwc,OAAS,IAAIxjB,MAAMsiB,kBAAmBtb,EAAI6Z,QAASzQ,OAAOmS,WAAanS,OAAOoS,YAAaxb,EAAIyb,SAAUzb,EAAI8C,SACjH9C,EAAIwc,OAAOnQ,OAAOqP,YAElB1b,EAAI4a,cAAgB,IAAI5hB,MAAM2iB,cAAe3b,EAAIwc,OAAQziB,KAAK0J,UAAUwM,YAEpE/T,IAAAA,EAAI8D,EAAI4a,cAEZ1e,EAAE+f,YAAc,EAChB/f,EAAE2f,WAAc,EAChB3f,EAAE0f,YAAc5b,EAAIsZ,YAEhBtZ,EAAIuZ,SAAW,IACfrd,EAAE4f,eAAgB,EAClB5f,EAAE6f,cAAgB/b,EAAIuZ,UAK1Brd,EAAE6F,OAAO1C,KAAKW,EAAI0P,QAAQtQ,UAE1BlD,EAAEggB,YAAc,IAChBhgB,EAAEigB,YAAc,IAEXnc,EAAIwZ,YAAWtd,EAAEwe,SAAU,GAGpC1a,EAAIya,UAAYza,EAAI4a,cAEpB5a,EAAI0P,QAAU1P,EAAIwc,OAGdziB,KAAKye,SAASC,WAAazY,EAAI0P,QAAQzT,SAASF,OAAO,GAAGiE,EAAI0P,QAAQ9Q,IAAK7E,KAAKye,SAASC,WAE7FzY,EAAIya,UAAU9gB,SACVqG,EAAI4Z,UAAU5Z,EAAIqc,iBAEtBtiB,KAAKqW,cAoBTpQ,4BAAkC,WACzBjG,KAAK0C,MAAM+M,aAEhBxJ,EAAI0Z,UAAY1Z,EAAIkZ,MAEpBlZ,EAAIkZ,MAAQlZ,EAAIgb,YAChBhb,EAAIyZ,eAAgB,EACpB1f,KAAK0iB,qBAAqBnd,IAAI,EAAI,QAGb5F,IAAjBsG,EAAI0c,WACJ1c,EAAI2c,WAAa,IAAI3jB,MAAMsiB,kBAAmBtb,EAAI6Z,QAASzQ,OAAOmS,WAAanS,OAAOoS,YAAaxb,EAAIyb,SAAUzb,EAAI8C,SACrH9C,EAAI2c,WAAWtQ,OAAOqP,YAEtB1b,EAAI0c,SAAW,IAAI1jB,MAAM4jB,0BAA0B5c,EAAI2c,WAAY5iB,KAAK0J,UAAUwM,YAGlFjQ,EAAI0c,SAASG,YAAc,GAG/B7c,EAAIya,UAAYza,EAAI0c,SACpB1c,EAAI0P,QAAY1P,EAAI2c,WAGhB5iB,KAAKye,SAASC,WAAazY,EAAI0P,QAAQzT,SAASF,OAAO,GAAGiE,EAAI0P,QAAQ9Q,IAAK7E,KAAKye,SAASC,WAE7FzY,EAAIya,UAAU9gB,SACVqG,EAAI4Z,UAAU5Z,EAAIqc,iBAEtBtiB,KAAKqW,cASTpQ,gBAAsB,SAAC5C,GACnB4C,EAAIqa,WAAajd,GASrB4C,mBAAyB,SAACsN,GACtBtN,EAAIsa,WAAWjb,KAAKiO,IAMxBtN,KAAW,WACPA,EAAIqa,WAAa,GAUrBra,OAAa,SAAC5C,GACNrD,IAAAA,KAAKohB,GAAGC,eAARrhB,CAEJiG,EAAI4Z,SAAS1X,IAAM9E,EAEf0f,IAAAA,EAAM9c,EAAI0P,QACdoN,EAAI5a,IAAM9E,EACV0f,EAAIlN,2BAOR5P,OAAa,WACFA,OAAAA,EAAI4Z,SAAS1X,KAKxBlC,YAAkB,WACVjG,GAAAA,KAAKohB,GAAGC,eAAe,CAEnBlf,IAAAA,EAAInC,KAAK0J,UAAUoG,GAAGkT,UAAU/c,EAAI0P,SAcxC,OAbAxT,EAAE8gB,iBAAkBhd,EAAI4Z,SAAS1b,KACjChC,EAAE+gB,mBAAoBjd,EAAIC,YAC1B/D,EAAEghB,kBAAmBld,EAAIma,OAczBgD,IAAAA,EAAQnd,EAAIya,UACZqC,EAAQ9c,EAAI0P,QAKZ1P,GAHJ8c,EAAII,kBAAkBld,EAAIma,OAC1B2C,EAAIG,mBAAmBjd,EAAIC,OAEvBD,EAAIkZ,QAAUlZ,EAAIgb,YAAlBhb,CAKAA,GAAAA,EAAIkZ,QAAUlZ,EAAI+a,QAMlB,OALA/a,EAAI4Z,SAAS1b,IAAImB,KAAK8d,EAAKpb,QAE3B/B,EAAI4Z,SAAS7X,OAAO9C,EAAIe,EAAI4Z,SAAS1b,IAAIe,EAAIe,EAAIma,MAAMlb,EACvDe,EAAI4Z,SAAS7X,OAAO7C,EAAIc,EAAI4Z,SAAS1b,IAAIgB,EAAIc,EAAIma,MAAMjb,OACvDc,EAAI4Z,SAAS7X,OAAO5C,EAAIa,EAAI4Z,SAAS1b,IAAIiB,EAAIa,EAAIma,MAAMhb,GAI3Da,EAAI4Z,SAAS1b,IAAImB,KAAKyd,EAAI1d,UAC1BY,EAAI4Z,SAAS7X,OAAO1C,KAAK8d,EAAKpb,aAd1B/B,EAAI4Z,SAAS1b,IAAImB,KAAKyd,EAAI1d,WAmBlCY,UAAgB,WAGRjG,KAAKohB,GAAGC,eAAgBpb,EAAIod,qBAC3Bpd,EAAIqd,sBAETrd,EAAIsd,gBAQRtd,aAAmB,WACXA,IAAAA,EAAIud,mBAEc,GAAlBvd,EAAIqa,WAAkB,CAKlBtgB,KAAKohB,GAAGqC,aAAezjB,KAAKohB,GAAGqC,YAAYhhB,SAC3CzC,KAAKohB,GAAGqC,YAAYN,kBAAkBld,EAAIsa,YAC1Cta,EAAIsa,WAAWmD,UAEdzd,EAAIsa,WAAWjb,KAAKW,EAAIma,OAEzBuD,IAAAA,EAAK1d,EAAIsa,WAAWnc,QACxBuf,EAAGC,eAAe3d,EAAIqa,WAAatgB,KAAKmO,KAExClI,EAAI4Z,SAAS1b,IAAIU,IAAI8e,GACrB1d,EAAI4Z,SAAS7X,OAAOnD,IAAI8e,KAIhC1d,oBAA0B,WAClBA,KAAAA,EAAIia,UAAY,GAAhBja,CAMAA,GAJAA,EAAImZ,uBAAyB,EAAKnZ,EAAIka,cAAgB,EACrDla,EAAIka,eAAiBngB,KAAK6jB,OAAOC,YAAc7d,EAAIia,WAAaja,EAAImZ,sBAGrEnZ,EAAIka,eAAiB,EAUrB,OARAla,EAAIia,WAAa,EAGjBja,EAAI4Z,SAAS1b,IAAImB,KAAKW,EAAI+Z,QAAQ7b,KAClC8B,EAAI4Z,SAAS7X,OAAO1C,KAAKW,EAAI+Z,QAAQhY,QACrC/B,EAAI4Z,SAAS1X,IAAMlC,EAAI+Z,QAAQ7X,SAE/BnI,KAAKiK,UAAU,yBAA0BhE,EAAI+Z,QAAQ7gB,IAIzD8G,EAAIka,cAAgBlB,EAAgBhZ,EAAIka,eAExCla,EAAI4Z,SAAS1b,IAAI4f,YAAY9d,EAAI8Z,SAAS5b,IAAK8B,EAAI+Z,QAAQ7b,IAAK8B,EAAIka,eACpEla,EAAI4Z,SAAS7X,OAAO+b,YAAY9d,EAAI8Z,SAAS/X,OAAQ/B,EAAI+Z,QAAQhY,OAAQ/B,EAAIka,eAExEla,EAAI8Z,SAAS5X,KAAQlC,EAAI+Z,QAAQ7X,MACtClC,EAAI4Z,SAAS1X,IAAMlJ,MAAM+kB,UAAUC,KAAKhe,EAAI8Z,SAAS5X,IAAKlC,EAAI+Z,QAAQ7X,IAAKlC,EAAIka,eAI/Ela,EAAI0P,QAAQxN,IAAMlC,EAAI4Z,SAAS1X,IAC/BlC,EAAI0P,QAAQE,4BAIhB5P,mBAAyB,WACjBA,KAAAA,EAAIia,UAAY,GAAhBja,CAMAA,GAJAA,EAAImZ,uBAAyB,EAAKnZ,EAAIka,cAAgB,EACrDla,EAAIka,eAAiBngB,KAAK6jB,OAAOC,YAAc7d,EAAIia,WAAaja,EAAImZ,sBAGrEnZ,EAAIka,eAAiB,EAYrB,OAVAla,EAAIia,WAAa,EAIjBlgB,KAAKohB,GAAG8C,SAAS5e,KAAKtF,KAAKohB,GAAG+C,SAE9Brd,QAAQC,IAAI,YAAY/G,KAAKohB,GAAG8C,SAAS/e,GACzC2B,QAAQC,IAAI,aAAad,EAAI4Z,SAAS1b,IAAIgB,QAE1CnF,KAAKiK,UAAU,yBAA0BhE,EAAI+Z,QAAQ7gB,IAIzDa,KAAKohB,GAAG8C,SAASH,YAAY/jB,KAAKohB,GAAGgD,SAAUpkB,KAAKohB,GAAG+C,QAASle,EAAIka,iBAMxEla,eAAqB,WACbmd,IAAAA,EAAQnd,EAAIya,UACZqC,EAAQ9c,EAAI0P,QAEZxR,EAAM8B,EAAI4Z,SAAS1b,IACnBkgB,EAAMpe,EAAI4Z,SAAS7X,OAGnBhI,KAAKohB,GAAGC,iBAWRpb,EAAIkZ,QAAUlZ,EAAIgb,aAOtBhb,EAAIma,MAAMkE,WAAWD,EAAKlgB,GAC1B8B,EAAIma,MAAMmE,YAENte,EAAIkZ,QAAUlZ,EAAI+a,SAClBoC,EAAKpb,OAAO1C,KAAKnB,GAEjB4e,EAAI1d,SAASH,EAAIke,EAAKpb,OAAO9C,EAAKe,EAAIma,MAAMlb,EAAIe,EAAIue,OACpDzB,EAAI1d,SAASF,EAAIie,EAAKpb,OAAO7C,EAAKc,EAAIma,MAAMjb,EAAIc,EAAIue,OACpDzB,EAAI1d,SAASD,EAAIge,EAAKpb,OAAO5C,EAAKa,EAAIma,MAAMhb,EAAIa,EAAIue,SAGpDzB,EAAI1d,SAASC,KAAKnB,GAClBif,EAAKpb,OAAO1C,KAAK+e,KAlBjBtB,EAAI1d,SAASC,KAAKnB,KAuB1B8B,OAAa,WAITA,EAAIwe,cACJxe,EAAIye,YACJze,EAAIqc,kBAWRrc,WAAiB,SAACsC,EAAKoc,GACf3kB,KAAKkgB,WAAa,QACVvgB,IAAR4I,IAEJvI,KAAKiK,UAAU,yBAA0B1B,EAAIpJ,SAE5BQ,IAAbglB,IAAwB1e,EAAImZ,sBAAwBuF,GAIxD1e,EAAIia,UAAYlgB,KAAK6jB,OAAOC,YAExB9jB,KAAKohB,GAAGC,gBACRpb,EAAI+Z,QAAQ7b,IAAImB,KAAKiD,EAAIpE,IAAKoE,EAAIpE,IAAM8B,EAAI4Z,SAAS1b,KACrD8B,EAAI8Z,SAAS5b,IAAImB,KAAKW,EAAI4Z,SAAS1b,KAEnCnE,KAAKohB,GAAG+C,QAAQ7e,KAAKiD,EAAIpE,IAAKoE,EAAIpE,IAAM8B,EAAI4Z,SAAS1b,KACrDnE,KAAKohB,GAAGgD,SAAS9e,KAAKtF,KAAKohB,GAAG8C,YAG9Bje,EAAI+Z,QAAQ7b,IAAImB,KAAKiD,EAAIpE,IAAKoE,EAAIpE,IAAM8B,EAAI4Z,SAAS1b,KACrD8B,EAAI+Z,QAAQhY,OAAO1C,KAAMiD,EAAIP,OAAQO,EAAIP,OAAS/B,EAAI4Z,SAAS7X,QAC/D/B,EAAI+Z,QAAQ7X,IAAMI,EAAIJ,IAAKI,EAAIJ,IAAMlC,EAAI4Z,SAAS1X,IAElDlC,EAAI8Z,SAAS5b,IAAImB,KAAKW,EAAI4Z,SAAS1b,KACnC8B,EAAI8Z,SAAS/X,OAAO1C,KAAKW,EAAI4Z,SAAS7X,QACtC/B,EAAI8Z,SAAS5X,IAAMlC,EAAI4Z,SAAS1X,OAKxClC,kBAAwB,SAAClB,EAAI4f,GACrB5f,QAAOpF,IAAPoF,EAAAA,CAGA6f,IAAAA,EAAI,IAAI3lB,MAAMyE,QAId8a,EAAgB,EAAZzZ,EAAG8f,OACXD,EAAE1f,EAAIH,EAAGmN,OAAOhN,EAAKsZ,EAAIvY,EAAIma,MAAMlb,EACnC0f,EAAEzf,EAAIJ,EAAGmN,OAAO/M,EAAKqZ,EAAIvY,EAAIma,MAAMjb,EACnCyf,EAAExf,EAAIL,EAAGmN,OAAO9M,EAAKoZ,EAAIvY,EAAIma,MAAMhb,EAE/BmD,IAAAA,GAAM,IAAIvI,KAAK+H,KAAM4T,YAAYiJ,GAAGhJ,UAAU7W,EAAGmN,QACrDjM,EAAI6e,WAAWvc,EAAKoc,KAUxB1e,iBAAuB,SAACuS,EAAGmM,GACnBnM,QAAM7Y,IAAN6Y,EAAAA,CAEAzT,IAAAA,EAAKyT,EAAEuM,WAEX9e,EAAI+e,kBAAkBjgB,EAAG4f,KAG7B1e,gBAAsB,SAACgf,EAAOC,EAAQP,GAC9B3hB,IAAAA,EAAI,IAAI/D,MAAMyE,QACdwhB,QAAWvlB,IAAXulB,EACAliB,EAAE+gB,YAAYkB,EAAOhf,EAAI4Z,SAAS1b,IAAK,QAEtC,CACGF,IAAAA,EAAIghB,EAAME,WAAWlf,EAAI4Z,SAAS1b,KACtCF,GAAK,GACLjB,EAAEkC,EAAI+f,EAAM/f,EAAKggB,EAAOhgB,EAAIjB,EAC5BjB,EAAEmC,EAAI8f,EAAM9f,EAAK+f,EAAO/f,EAAIlB,EAC5BjB,EAAEoC,EAAI6f,EAAM7f,EAAK8f,EAAO9f,EAAInB,EAG5BsE,IAAAA,GAAM,IAAIvI,KAAK+H,KAAM4T,YAAY3Y,GAAG4Y,UAAUqJ,GAAOpJ,OAAO5V,EAAI4Z,SAAS1X,KAC7ErB,QAAQC,IAAIwB,GAEZtC,EAAI6e,WAAWvc,EAAKoc,IAUxB1e,mBAAyB,SAACmf,QACXzlB,IAAPylB,IAAkBA,EAAK,IAAInmB,MAAMyE,QAAQ,EAAE,GAAI,IAE/C2hB,IAAAA,EAAUrlB,KAAKslB,eAAeP,WAE9BQ,EAAM,IAAItmB,MAAMyE,QAChB2hB,EAAQnT,OAAOhN,EAAKmgB,EAAQR,OAASO,EAAGlgB,EAAI,IAC5CmgB,EAAQnT,OAAO/M,EAAKkgB,EAAQR,OAASO,EAAGjgB,EAAI,IAC5CkgB,EAAQnT,OAAO9M,EAAKigB,EAAQR,OAASO,EAAGhgB,EAAI,KAGhDa,EAAIga,SAAU,IAAIjgB,KAAK+H,KAAM4T,YAAY4J,GAAK3J,UAAUyJ,EAAQnT,SAOpEjM,WAAiB,SAACsC,GACdtC,EAAIga,QAAU1X,GAGlBtC,6BAAmC,SAAC0e,EAAUS,GAC1Cnf,EAAIuf,mBAAmBJ,GACvBnf,EAAI6e,WAAW7e,EAAIga,QAAS0E,IAOhC1e,YAAkB,SAAC0e,GACf1e,EAAI6e,WAAW7e,EAAIga,QAAS0E,IAQhC1e,qBAA2B,SAACsC,EAAKoc,GAC7B1e,EAAIyV,WAAWnT,GACftC,EAAI6e,WAAWvc,EAAKoc,IAUxB1e,0BAAgC,SAAWsL,GACnCkU,IAAAA,EAAQ,KAEPlU,KAAAA,OAASA,EACTA,KAAAA,OAAOxL,SAAS2f,QAAS,OACzB/E,KAAAA,SAAU,EAEVgF,KAAAA,kBAAoB,GACpBC,KAAAA,kBAAoB,EAEpB9C,KAAAA,YAAc,EACd+C,KAAAA,UAAW,EACXC,KAAAA,uBAAoBnmB,EACpBomB,KAAAA,uBAAoBpmB,EAErBqmB,IAgBIC,EACAC,EAEAC,EACAC,EApBJJ,EAAiC,SAAWK,GACzCZ,EAAMI,WACTJ,EAAME,kBAAoBU,IAG1BC,EAAyC,SAAWD,GACpDZ,EAAME,kBAAoBU,EAC1BZ,EAAMI,UAAW,GAGjBU,EAAiC,WACjCd,EAAMG,kBAAoBvW,OAAOmX,aAAe,GAIhDC,GACIR,EAAM,IAAIhnB,MAAMyE,QAAS,EAAG,EAAG,GAC/BwiB,EAAQ,IAAIjnB,MAAMynB,MAElBP,EAAK,IAAIlnB,MAAMohB,WACf+F,EAAK,IAAInnB,MAAMohB,YAAcpR,KAAK0X,KAAM,IAAO,EAAG,EAAG1X,KAAK0X,KAAM,KAE7D,SAAW3gB,EAAY4gB,EAAOC,EAAMC,EAAOC,GAC9Cb,EAAM3gB,IAAKshB,EAAMD,GAASE,EAAO,OACjC9gB,EAAWghB,aAAcd,GACzBlgB,EAAWihB,SAAUb,GACrBpgB,EAAWihB,SAAUd,EAAGe,iBAAkBjB,GAAOc,MAKpDI,KAAAA,QAAU,WACXZ,IAEAlX,OAAOgT,iBAAkB,oBAAqBkE,GAAgC,GAC9ElX,OAAOgT,iBAAkB,oBAAqB2D,GAAgC,GAC9E3W,OAAOgT,iBAAkB,4BAA6BiE,GAAwC,GAE9Fb,EAAM9E,SAAU,GAGfyG,KAAAA,WAAa,WACd/X,OAAOgY,oBAAqB,oBAAqBd,GAAgC,GACjFlX,OAAOgY,oBAAqB,oBAAqBrB,GAAgC,GACjF3W,OAAOgY,oBAAqB,4BAA6Bf,GAAwC,GAEjGb,EAAM9E,SAAU,GAGf/gB,KAAAA,OAAS,WAGNwO,IAAAA,EAFCqX,IAAkB,IAAlBA,EAAM9E,UAGXvS,EAASqX,EAAME,mBAED,CACNiB,IAAAA,EAAQ,KAAKU,eAAiBroB,MAAMgQ,KAAKsY,SAAU,KAAKD,gBAAmB7B,EAAM3C,YAAc,EAC/F+D,EAAOzY,EAAOyY,KAAO5nB,MAAMgQ,KAAKsY,SAAUnZ,EAAOyY,MAAS,EAE1DC,EAAQ1Y,EAAO0Y,MAAQ7nB,MAAMgQ,KAAKsY,SAAUnZ,EAAO0Y,OAAU,EAC7DC,EAAStB,EAAMG,kBAAoB3mB,MAAMgQ,KAAKsY,SAAU9B,EAAMG,mBAAsB,EAExFa,EAAqBhB,EAAMlU,OAAOvL,WAAY4gB,EAAOC,EAAMC,EAAOC,KAKrEviB,KAAAA,QAAU,WACXihB,EAAM2B,cAGLI,KAAAA,yBAA2B,WAC4B,mBAA7CC,uBAAuBC,mBAC9BD,uBAAuBC,oBAAoB/gB,KAAK,SAAAghB,GAK5C7gB,QAAQC,IAAI4gB,KACbC,MAAM9gB,QAAQ+gB,QAIpBP,KAAAA,aAAe,WACR,YAAuD,IAAhD7B,EAAME,kBAAkBmC,qBAAuCrC,EAAME,kBAAkBmC,qBAAuBrC,EAAME,kBAAkBiB,OAGpJmB,KAAAA,gBAAkB,WACX,YAAuD,IAAhDtC,EAAME,kBAAkBmC,qBAAwC,IAAMrC,EAAME,kBAAkBmC,qBAAwBrC,EAAME,kBAAkBiB,OAG5JO,KAAAA,YAIMlhB,EAAAA,EAAAA,QAAAA,QAAAA;;ACrRAmb,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EArmBf,IAAIA,EAAK,CAETA,mBAAwB,IACxBA,OAAY,EACZA,OAAY,EAEZA,iBAAsB,GAItBA,KAAU,WACNphB,KAAK0J,UAAUoG,GAAG6Q,SAAU,EAC5B3gB,KAAK0J,UAAUoG,GAAGkY,sBAAuB,SAGrChoB,KAAKoO,OAAOqB,SAAUzP,KAAK0J,UAAUoG,GAAGmY,0BAA0BjoB,KAAKkoB,QAAU9G,EAAG+G,kBACnFnoB,KAAK0J,UAAUoG,GAAGmY,0BAA0BjoB,KAAKkoB,SAEtD9G,EAAGgH,cAAe,EAClBhH,EAAGiH,YAAc,KACjBjH,EAAGkH,aAAe,eAElBlH,EAAGmH,IAAM,IAAItpB,MAAMC,MAEnBkiB,EAAGmH,IAAI1jB,IAAK7E,KAAKiG,IAAI0P,SACrB3V,KAAKY,QAAQiE,IAAIuc,EAAGmH,KAKpBnH,EAAG8C,SAAW9C,EAAGmH,IAAIljB,SACrB+b,EAAGgD,SAAW,IAAInlB,MAAMyE,QACxB0d,EAAG+C,QAAW,IAAIllB,MAAMyE,QAExB0d,EAAGoH,kBAAe7oB,EAElByhB,EAAGqC,iBAAc9jB,EACjByhB,EAAGqH,iBAAc9oB,EAEjByhB,EAAGsH,eAAiB,IAAIzpB,MAAMyE,QAC9B0d,EAAGuH,eAAiB,IAAI1pB,MAAMyE,QAC9B0d,EAAGwH,eAAiB,IAAI3pB,MAAMyE,QAC9B0d,EAAGyH,eAAiB,IAAI5pB,MAAMyE,QAE9B0d,EAAG0H,eAAYnpB,EACfyhB,EAAG2H,eAAYppB,EAEfyhB,EAAG4H,WAAQrpB,EACXyhB,EAAG6H,WAAQtpB,EAEXyhB,EAAG8H,SAAWlpB,KAAKmN,SAAS,uBAG5BnN,KAAKgK,GAAG,gBAAiB,SAAC/H,GAClBA,IAAMmf,EAAG+H,QAAQ/H,EAAGgI,qBAAqBnnB,KAEjDjC,KAAKgK,GAAG,cAAe,SAAC/H,MAKxBjC,KAAKgK,GAAG,iBAAkB,SAAC/H,GACvB6E,QAAQC,IAAI,WAAW9E,KAG3BjC,KAAKgK,GAAG,iBAAkB,SAACqf,GACnBC,IAAAA,EAAKtpB,KAAKupB,UAAU,SACpBC,EAAKxpB,KAAKupB,UAAU,SAEpBE,EAASzpB,KAAK4K,OAAOC,UAAU6e,QAC/BC,EAAKF,EAAOJ,EAAMI,EAAOznB,QACzBwnB,GAAIA,EAAGtmB,YAAYymB,GACnBL,GAAIA,EAAGpmB,YAAYymB,MAS/BvI,eAAoB,SAAChiB,QACJO,IAATP,IAEJgiB,EAAGkH,aAAelpB,EAClB0H,QAAQC,IAAI,iBAAiB3H,KAOjCgiB,aAAkB,WACPA,OAAAA,EAAGgH,cAIdhH,uBAA4B,WACpB,IAACphB,KAAKiG,IAAI2jB,iCAAkC,OAAO,EAEnD3iB,IAAAA,EAAIjH,KAAKygB,gBAAgBpc,EACrBrE,KAAKygB,gBAAgBjI,EAMtB,OAHPxY,KAAKiG,IAAI6e,YAAY,IAAI9kB,KAAK+H,KAAM4T,YAAY1U,EAAE/B,EAAG+B,EAAE9B,EAAInF,KAAK6pB,WAAY5iB,EAAE7B,GAAIgc,EAAG0I,qBAG9E,GAGX1I,qBAA0B,SAACnf,GAEC,iBAApBmf,EAAGkH,cAAiClH,EAAG2I,yBAE3C/pB,KAAKgqB,GAAGC,0BAA0BjqB,KAAKkqB,kBAK3C9I,mBAAwB,WAChBphB,QAAoBL,IAApBK,KAAKmqB,WAA0B,OAAO,EAEtCC,IAAAA,EAAIpqB,KAAKupB,UAAUvpB,KAAKmqB,YAGrB,OAFHC,GAAKA,EAAE9oB,UAAU8oB,EAAE9oB,YAEhB,GAIX8f,cAAmB,SAACiJ,QACL1qB,IAAP0qB,IAGAjJ,EAAGqC,YAAa4G,EAAG9kB,IAAK6b,EAAGsH,eAAgBtH,EAAGwH,gBAG7CyB,EAAG9kB,IAAKvF,KAAKiG,IAAIqkB,wBAAyBtqB,KAAKiG,IAAIskB,yBAS5DnJ,oBAAyB,SAAC/c,GACtB+c,EAAGmH,IAAIljB,SAASC,KAAKjB,IAKzB+c,kBAAuB,SAACjf,EAAGqoB,GACnBpJ,EAAGqC,cAEPrC,EAAGqC,YAActhB,EACjB2E,QAAQC,IAAI,gBAGZ5E,EAAEkgB,iBAAkB,cAAe,WAC3BjB,EAAGqJ,sBAEPzqB,KAAKiK,UAAU,gBAAiBmX,EAAG+H,UAEvChnB,EAAEkgB,iBAAkB,YAAa,WAC7BriB,KAAKiK,UAAU,cAAemX,EAAG+H,UAIrChnB,EAAEkgB,iBAAkB,eAAgB,WAChCriB,KAAKiK,UAAU,iBAAkBmX,EAAG+H,UAExChnB,EAAEkgB,iBAAkB,aAAc,WAC9BriB,KAAKiK,UAAU,eAAgBmX,EAAG+H,UAGtC/H,EAAGsJ,kBAAkBtJ,EAAG+H,OAAQqB,GAEhCxqB,KAAKiK,UAAU,wBAAyBmX,EAAG+H,UAI/C/H,kBAAuB,SAACjf,EAAGqoB,GACnBpJ,EAAGqH,cAEPrH,EAAGqH,YAActmB,EACjB2E,QAAQC,IAAI,gBAGZ5E,EAAEkgB,iBAAkB,cAAgB,WAEhCriB,KAAKiK,UAAU,gBAAiBmX,EAAGuJ,UAEvCxoB,EAAEkgB,iBAAkB,YAAc,WAC9BriB,KAAKiK,UAAU,cAAemX,EAAGuJ,UAIrCxoB,EAAEkgB,iBAAkB,eAAgB,WAChCriB,KAAKiK,UAAU,iBAAkBmX,EAAGuJ,UAExCxoB,EAAEkgB,iBAAkB,aAAc,WAC9BriB,KAAKiK,UAAU,eAAgBmX,EAAGuJ,UAGtCvJ,EAAGsJ,kBAAkBtJ,EAAGuJ,OAAQH,GAEhCxqB,KAAKiK,UAAU,wBAAyBmX,EAAGuJ,UAK/CvJ,iBAAsB,SAAEwJ,GACvBA,EAAQvI,iBAAkB,MAAOjB,EAAGyJ,gBAEjC/jB,QAAQC,IAAIqa,EAAGkH,aAAe,qBAI1BtoB,KAAKsb,IAAIiH,oBAAoB,IAAKviB,KAAKsb,IAAIkH,kBAAkB,IAGjExiB,KAAK8qB,SAASC,qBAEjB/qB,KAAK0J,UAAUoG,GAAGkb,WAAYJ,GAC9BxJ,EAAGiH,YAAcuC,EAGU,iBAApBxJ,EAAGkH,eACHtoB,KAAKgW,UAAUiV,WAAa,KACxBjrB,KAAKkrB,aAAYlrB,KAAKkrB,WAAWzoB,SAAU,IAU9C,IAAIR,IAAAA,EAAAA,SAAAA,GACCE,IAAAA,EAAInC,KAAK0J,UAAUoG,GAAGqb,cAAclpB,QAEhCtC,IAANwC,IAGAA,EAAEM,SAAU,EAEZN,EAAEkgB,iBAAkB,YAAa,SAAC+I,GAE1BC,IAAAA,EAAOD,EAAE7jB,KAAK+jB,WAGlBxkB,QAAQC,IAAI,QAAQskB,GAEP,SAATA,EAAkBjK,EAAGmK,kBAAkBppB,GAAG,GAE7B,UAATkpB,EAAkBjK,EAAGoK,kBAAkBrpB,GAAG,IAK1CA,EAAEkgB,iBAAiB,cAAe,WAC1BjB,EAAGqJ,uBACPzqB,KAAKiK,UAAU,gBAAiBmX,EAAG+H,QAEnCriB,QAAQC,IAAI,0BAEhB5E,EAAEkgB,iBAAiB,YAAa,WAC5BriB,KAAKiK,UAAU,cAAemX,EAAG+H,UAGrCnpB,KAAKiK,UAAU,wBAAyBmX,EAAG+H,aAhCtDlnB,EAAI,EAAGA,EAAI,EAAGA,IAAdA,EAAAA,GAyFTmf,EAAGmH,IAAI1jB,IAAK7E,KAAKiG,IAAI0P,SAErByL,EAAGqK,oBAAoBzrB,KAAKiG,IAAI4Z,SAAS1b,KACzC2C,QAAQC,IAAI/G,KAAKiG,IAAI4Z,SAAS1b,KAE9Bid,EAAGgH,cAAe,EAClBthB,QAAQC,IAAI,qBAIZ/G,KAAKiK,UAAU,UAAU,IAM7BmX,eAAoB,WAChBA,EAAGiH,YAAYhB,oBAAqB,MAAOjG,EAAGyJ,gBAC9CzJ,EAAGiH,YAAc,KAEjBjH,EAAGgH,cAAe,EAElBhH,EAAGqK,oBAAqB,IAAIxsB,MAAMyE,QAAQ,EAAE,EAAE,IAE9C1D,KAAKiK,UAAU,UAAU,GAGzBjK,KAAK8qB,SAASC,qBAEd/qB,KAAKiG,IAAIylB,cAET5kB,QAAQC,IAAI,YAMhBqa,OAAY,WACJ,GAACphB,KAAKoO,OAAOyB,YAAYuR,EAAGkH,cAG5BlH,GAAmB,OAAnBA,EAAGiH,YAAqB,CAcxB1Y,UAAUG,GAAG6b,eAAgBvK,EAAGkH,aAbd,CACdsD,iBAAkB,CACd,WAWoDjlB,KAAMya,EAAGyK,uBAKrEzK,EAAGiH,YAAYyD,OAIvB1K,kBAAuB,SAACtZ,EAAG0iB,GACnBuB,IAGAC,OAAQrsB,EACRssB,OAAQtsB,EAYRmI,QARoBnI,IAApByhB,EAAGoH,eACHpH,EAAGoH,aAAexoB,KAAKksB,eAEvB9K,EAAGoH,aAAazlB,iBAChBqe,EAAGmH,IAAI1jB,IAAIuc,EAAGoH,eAId1gB,IAAMsZ,EAAGuJ,OACTvJ,EAAGoH,aAAa3jB,IAAKuc,EAAGqH,aAEpB+B,IACAyB,EAAQjsB,KAAKksB,aAAa,SAAS5kB,KAAK8Z,EAAG8H,UAAUhmB,YAAYlD,KAAK4K,OAAOC,UAAUiC,eAAeuP,UAAU,EAAE,EAAE,GACpH+E,EAAGqH,YAAY5jB,IAAIonB,SAOnBzB,GAFJpJ,EAAGoH,aAAa3jB,IAAKuc,EAAGqC,aAEpB+G,EAAQ,CACJhrB,IAAAA,EAAW,IAAIP,MAAMktB,uBA7BnB,KAAA,KACA,EA4BoE,GAC1E3sB,EAAS0X,SAAUjI,KAAKkI,GAAK,GAC7B3X,EAAS4sB,UAAU,EAAE,GAAIC,KAErBja,IAAAA,EAAO,IAAInT,MAAMoT,KAAM7S,EAAUQ,KAAK4K,OAAOC,UAAUiC,eAC3DsU,EAAGqC,YAAY5e,IAAKuN,EAAKhO,SAEzB4nB,EAAQhsB,KAAKksB,aAAa,SAAS5kB,KAAK8Z,EAAG8H,UAAUhmB,YAAYlD,KAAK4K,OAAOC,UAAUiC,eACvFsU,EAAGqC,YAAY5e,IAAImnB,GAKvBhsB,QAAuBL,IAAvBK,KAAKyK,UAAU4e,KAAqBmB,EAAQ,CACxCf,IAAAA,EAASzpB,KAAK4K,OAAOC,UAAU6e,QAC/BC,EAAKF,EAAOzpB,KAAKyK,UAAU4e,IAAMI,EAAOznB,QACxC8F,IAAMsZ,EAAGuJ,OAAQsB,EAAM/oB,YAAYymB,GAClCqC,EAAM9oB,YAAYymB,KAK/BvI,YAAiB,WAyBTgJ,IAAAA,EAAIhJ,EAAGqH,YAON,IAAA,IAAIxmB,KANTmf,EAAGqH,YAAcrH,EAAGqC,YACpBrC,EAAGqC,YAAc2G,EAKHhJ,EAAGqC,YAAYvhB,SAAUkf,EAAGqC,YAAYhf,OAAO2c,EAAGqC,YAAYvhB,SAASD,IAChF,IAAA,IAAIA,KAAKmf,EAAGqH,YAAYvmB,SAAUkf,EAAGqH,YAAYhkB,OAAO2c,EAAGqH,YAAYvmB,SAASD,IACrFmf,EAAGoH,aAAatM,iBAEhBkF,EAAGsJ,kBAAkBtJ,EAAGuJ,QACxBvJ,EAAGsJ,kBAAkBtJ,EAAG+H,QAExBriB,QAAQC,IAAI,4BAoDhBqa,mBAAwB,SAACpd,GACZ,IAANA,EAASod,EAAGkL,kBAAkB,GAC7BlL,EAAGkL,kBAAkB,IAQ7BlL,2BAAgC,SAACpd,GACzBA,OAAM,IAANA,EAAgBod,EAAGuH,eACXvH,EAAGsH,gBAQnBtH,4BAAiC,SAACpd,GAC1BA,OAAM,IAANA,EAAgBod,EAAGyH,eACXzH,EAAGwH,gBAGnBxH,uBAA4B,SAACjf,GACrBA,KAAAA,IAAMif,EAAGuJ,aAA2BhrB,IAAjByhB,EAAG2H,WACtB5mB,IAAMif,EAAG+H,aAA2BxpB,IAAjByhB,EAAG0H,WAAtB3mB,CAEAkC,IAAAA,EAAQlC,IAAMif,EAAGuJ,OAASvJ,EAAGuH,eAAiBvH,EAAGsH,eACjD6D,EAAQpqB,IAAMif,EAAGuJ,OAASvJ,EAAG2H,UAAY3H,EAAG0H,UAExC7pB,MAAMyE,QACVW,EAAEa,EAAIqnB,EAAKrnB,EACXb,EAAEc,EAAIonB,EAAKpnB,EACXd,EAAEe,EAAImnB,EAAKnnB,GAGLonB,WAENrqB,IAAMif,EAAGuJ,OAAQvJ,EAAG2H,UAAY1kB,EAC/B+c,EAAG0H,UAAYzkB,IAGxB+c,OAAY,WAEJA,EAAGqC,aAAerC,EAAGqC,YAAYhhB,UACjC2e,EAAGqC,YAAYR,iBAAiB7B,EAAGsH,gBACnCtH,EAAGqC,YAAYN,kBAAkB/B,EAAGwH,gBACpCxH,EAAGwH,eAAelF,SAElBtC,EAAGqL,uBAAuBrL,EAAG+H,SAG7B/H,EAAGqH,aAAerH,EAAGqH,YAAYhmB,UACjC2e,EAAGqH,YAAYxF,iBAAiB7B,EAAGuH,gBACnCvH,EAAGqH,YAAYtF,kBAAkB/B,EAAGyH,gBACpCzH,EAAGyH,eAAenF,SAElBtC,EAAGqL,uBAAuBrL,EAAGuJ,WAmBtBvJ,EAAAA,EAAAA,QAAAA,QAAAA;;AC/dAsL,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA1If,IAAA,EAAA,EAAA,QAAA,mBA0IeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,iBAAAA,OAAAA,SAAAA,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,gBAAAA,IAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,sDAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,gBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,IAAAA,OAAAA,WAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,MAAAA,YAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,QAAAA,EAAAA,EAAAA,MAAAA,KAAAA,WAAAA,OAAAA,EAAAA,KAAAA,IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,WAAAA,EAAAA,IAAAA,mBAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,EAAAA,SAAAA,IAAAA,GAAAA,oBAAAA,UAAAA,QAAAA,UAAAA,OAAAA,EAAAA,GAAAA,QAAAA,UAAAA,KAAAA,OAAAA,EAAAA,GAAAA,mBAAAA,MAAAA,OAAAA,EAAAA,IAAAA,OAAAA,KAAAA,UAAAA,SAAAA,KAAAA,QAAAA,UAAAA,KAAAA,GAAAA,gBAAAA,EAAAA,MAAAA,GAAAA,OAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,OAAAA,eAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,OAAAA,eAAAA,KAAAA,GAjITA,IAAAA,EAAAA,SAAAA,GAiISA,EAAAA,EAjIM1tB,EAAAA,SAiIN0tB,IAAAA,EAAAA,EAAAA,GA/HHC,SAAAA,EAAAA,GAAK,IAAA,EAAA,OAAA,EAAA,KAAA,IACPA,EAAAA,EAAAA,KAAAA,KAAAA,EAAM3sB,KAAKC,OAAOU,KAEnBisB,UAAc5sB,KAAK4K,OAAOE,OAAOW,MACjCohB,EAAAA,YAAc7sB,KAAK4K,OAAOE,OAAOY,MAEjCohB,EAAAA,YAAa,EAEbC,EAAAA,UAAY,IAAIC,YAAYC,MAAM,CACnCC,MAAO,GACPC,OAAQ,GACRC,QAAS,IACTC,aAAc,IACdC,gBAAiB,EAAKV,UACtBW,kBAAmB,GAEnBC,WAAYxtB,KAAKsb,IAAImS,eACrBC,YAAa1tB,KAAKsb,IAAIqS,cAEtBC,eAAgB,SAChBC,aAAc,WAEbhpB,EAAAA,IAAI,EAAKkoB,WAETe,EAAAA,OAAS,IAAId,YAAYe,KAAK,CAC/BC,QAAS,GACTC,SAAU,IACVC,UAAWluB,KAAK4K,OAAOE,OAAOS,QAG7BwhB,EAAAA,UAAUloB,IAAI,EAAKipB,QAEnBK,EAAAA,SAAW,IAAIlvB,MAAMoT,KACtB,IAAIpT,MAAMmvB,cAAqC,GAAtBpuB,KAAKsb,IAAI+S,aAAwC,GAAtBruB,KAAKsb,IAAI+S,aAAkB,GAC/EruB,KAAK4K,OAAOC,UAAUqB,kBAErBiiB,EAAAA,SAAS9oB,SAASE,IAAI,EAAE,EAAE,MAE1BV,EAAAA,IAAK,EAAKspB,UAEV/sB,EAAAA,QAAU,WACN2rB,EAAAA,UAAUxnB,IAAI,CACfgoB,kBAAmB,MAGtBlsB,EAAAA,QAAU,WACN0rB,EAAAA,UAAUxnB,IAAI,CACfgoB,kBAAmB,MAItBptB,EAAAA,gBAnDQ,EA+HFusB,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,eArEf,MAAA,SAAazqB,GAGF,OAFF2qB,KAAAA,UAAY3qB,EACZ,KAAK6qB,YAAY,KAAKC,UAAUxnB,IAAI,CAAE+nB,gBAAiB,KAAKV,YAC1D,OAkEIF,CAAAA,IAAAA,iBA3Df,MAAA,SAAezqB,GAGJ,OAFF4qB,KAAAA,YAAc5qB,EACf,KAAK6qB,YAAY,KAAKC,UAAUxnB,IAAI,CAAE+nB,gBAAiB,KAAKT,cACzD,OAwDIH,CAAAA,IAAAA,uBArDf,MAAA,SAAqBrpB,GAEV,OADF0pB,KAAAA,UAAUxnB,IAAI,CAAEgoB,kBAAmBlqB,IACjC,OAmDIqpB,CAAAA,IAAAA,UA5Cf,MAAA,SAAQ4B,GAEG,OADFR,KAAAA,OAAOvoB,IAAI,CAAEyoB,QAASM,IACpB,OA0CI5B,CAAAA,IAAAA,SAnCf,MAAA,SAAOhrB,GAKI,OAJForB,KAAAA,WAAaprB,EACdA,EAAG,KAAKqrB,UAAUxnB,IAAI,CAAE+nB,gBAAiB,KAAKT,cAC7C,KAAKE,UAAUxnB,IAAI,CAAE+nB,gBAAiB,KAAKV,YAEzC,OA8BIF,CAAAA,IAAAA,UAvBf,MAAA,SAAQnmB,GAAI,IAAA,EAAA,KAkBD,OAjBPvG,KAAK0C,MAAMwK,cAAc5F,KAAKf,EAAK,SAACqD,GAEhC,EAAKukB,SAAStuB,SAAW,IAAIZ,MAAMuX,qBAAqB,CACpDpJ,IAAKxD,EACLwC,aAAa,EACbC,YAAY,IAShB,EAAKyhB,OAAOzoB,SAASE,IAAI,GAAG,KAAM,KAG/B,SAKImnB,EAjITA,GAiISA,EAAAA,EAAAA,QAAAA,QAAAA;;ACjCA6B,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAzGf,IAAA,EAAA,EAAA,QAAA,mBAyGeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,iBAAAA,OAAAA,SAAAA,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,gBAAAA,IAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,sDAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,gBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,IAAAA,OAAAA,WAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,MAAAA,YAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,QAAAA,EAAAA,EAAAA,MAAAA,KAAAA,WAAAA,OAAAA,EAAAA,KAAAA,IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,WAAAA,EAAAA,IAAAA,mBAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,EAAAA,SAAAA,IAAAA,GAAAA,oBAAAA,UAAAA,QAAAA,UAAAA,OAAAA,EAAAA,GAAAA,QAAAA,UAAAA,KAAAA,OAAAA,EAAAA,GAAAA,mBAAAA,MAAAA,OAAAA,EAAAA,IAAAA,OAAAA,KAAAA,UAAAA,SAAAA,KAAAA,QAAAA,UAAAA,KAAAA,GAAAA,gBAAAA,EAAAA,MAAAA,GAAAA,OAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,OAAAA,eAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,OAAAA,eAAAA,KAAAA,GAhGTA,IAAAA,EAAAA,SAAAA,GAgGSA,EAAAA,EAhGKvvB,EAAAA,SAgGLuvB,IAAAA,EAAAA,EAAAA,GA9FH5B,SAAAA,EAAAA,GAAK,IAAA,EAAA,OAAA,EAAA,KAAA,IACPA,EAAAA,EAAAA,KAAAA,KAAAA,EAAM3sB,KAAKC,OAAOU,KAEnBisB,UAAY5sB,KAAK4K,OAAOE,OAAOW,MAE/BshB,EAAAA,UAAY,IAAIC,YAAYC,MAAM,CACnCC,MAAO,GACPC,OAAQ,IACRC,QAAS,KACTC,aAAc,IACdC,gBAAiB,EAAKV,UACtBW,kBAAmB,GAEnBC,WAAYxtB,KAAKsb,IAAImS,eACrBC,YAAa1tB,KAAKsb,IAAIqS,cAEtBC,eAAgB,SAChBC,aAAc,WAEbd,EAAAA,UAAU1nB,SAASD,EAAI,IACvBP,EAAAA,IAAI,EAAKkoB,WAETe,EAAAA,OAAS,IAAId,YAAYe,KAAK,CAC/BC,QAAS,QACTC,SAAU,IACVC,UAAWluB,KAAK4K,OAAOE,OAAOS,QAE7BwhB,EAAAA,UAAUloB,IAAI,EAAKipB,QA3BX,EA8FFS,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,eArCf,MAAA,SAAatsB,GAGF,OAFF2qB,KAAAA,UAAY3qB,EACZ8qB,KAAAA,UAAUxnB,IAAI,CAAE+nB,gBAAiB,KAAKV,YACpC,OAkCI2B,CAAAA,IAAAA,eA/Bf,MAAA,SAAatsB,GAEF,OADF6rB,KAAAA,OAAOvoB,IAAI,CAAE2oB,UAAWjsB,IACtB,OA6BIssB,CAAAA,IAAAA,UAtBf,MAAA,SAAQD,GAEG,OADFR,KAAAA,OAAOvoB,IAAI,CAAEyoB,QAASM,IACpB,SAoBIC,EAhGTA,GAgGSA,EAAAA,EAAAA,QAAAA,QAAAA;;AC0WAjT,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EApdf,IAAA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,wBAmdeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GA7cf,IAAIA,EAAM,CAEVA,aAAmB,IAEnBA,EAAIoR,OAASA,EAAb,QACApR,EAAIiT,MAASA,EAAb,QAIAjT,EAAIkT,KAAO,WACPlT,EAAImT,aAAezuB,KAAKksB,eACxB5Q,EAAImT,aAAa5pB,IAAK,IAAI5F,MAAMoT,KAAMrS,KAAK0C,MAAM2L,eAAgBrO,KAAK4K,OAAO8jB,YAAY,cACzFpT,EAAImT,aAAa1rB,iBAEjBuY,EAAIkH,kBAAkB,KACtBlH,EAAImT,aAAahsB,SAAU,EAC3BzC,KAAKY,QAAQiE,IAAIyW,EAAImT,cAErBnT,EAAIqT,WAAa3uB,KAAKksB,eAClB0C,IAAAA,EAAY,IAAI3vB,MAAMktB,uBAAuB,GAAI,GAAK,GAAK,GAAG,GAAG,GACrE7Q,EAAIqT,WAAW9pB,IAAK,IAAI5F,MAAMoT,KAAMuc,EAAW5uB,KAAK4K,OAAO8jB,YAAY,iBACvEpT,EAAIqT,WAAW5rB,iBACfuY,EAAIqT,WAAWlsB,SAAU,EACzBzC,KAAKY,QAAQiE,IAAIyW,EAAIqT,YAQrBrT,EAAImS,eAAiBztB,KAAKmN,SAAS,yBACnCmO,EAAIqS,cAAiB3tB,KAAKmN,SAAS,mBAQnCmO,EAAIuT,UAAY7uB,KAAKksB,eACrB5Q,EAAIwT,iBAAcnvB,EAClB2b,EAAIyT,YAAc,GAClB/uB,KAAKY,QAAQiE,IAAIyW,EAAIuT,WAGjBG,IAAAA,GAAQ,IAAI/vB,MAAMgwB,gBAAiBC,cAAc,CAAC,IAAIjwB,MAAMyE,QAAU,IAAIzE,MAAMyE,UACpF4X,EAAI6T,UAAY,IAAIlwB,MAAMmwB,KAAMJ,EAAOhvB,KAAK4K,OAAO8jB,YAAY,gBAC/DpT,EAAI6T,UAAU1sB,SAAU,EACxBzC,KAAKY,QAAQiE,IAAIyW,EAAI6T,WAGrB7T,EAAI+T,QAAUrvB,KAAKksB,eACnBlsB,KAAKY,QAAQiE,IAAIyW,EAAI+T,SAErB/T,EAAIgU,gBACJhU,EAAIiU,WAAY,EAEhBjU,EAAIkU,YAAgBxvB,KAAK0C,MAAM+M,WAAY,IAAM,EACjD6L,EAAImU,cAAgB,EAEpBzvB,KAAKgK,GAAG,oBAAqB,SAACyO,GAC1B6C,EAAIoU,gBAAgBjX,GAChB6C,EAAIqU,WAAWrU,EAAIqU,UAAU9sB,SAErC7C,KAAKgK,GAAG,oBAAqB,SAACyO,GACtB6C,EAAIqU,WAAWrU,EAAIqU,UAAU7sB,UAkBzCwY,EAAIsU,cAAgB,WAChBtU,EAAIuU,SAAW7vB,KAAKksB,eACpB5Q,EAAIuU,SAAS9sB,iBACb/C,KAAKY,QAAQiE,IAAIyW,EAAIuU,WAIzBvU,EAAIwU,eAAiB,WACjBxU,EAAIqU,UAAY3vB,KAAKksB,eACrB5Q,EAAIqU,UAAU5sB,iBACd/C,KAAKY,QAAQiE,IAAIyW,EAAIqU,YAOzBrU,EAAIkH,kBAAoB,SAAChE,GACrBlD,EAAIyU,aAAevR,EACnBlD,EAAImT,aAAa9oB,MAAMJ,IAAIiZ,EAAEA,EAAEA,IAOnClD,EAAIiH,kBAAoB,WAEbjH,OAAAA,EAAIyU,cAQfzU,EAAI0U,iBAAmB,SAACC,EAAMC,QACbvwB,IAATswB,IAEJ3U,EAAImT,aAAavS,iBAEjBZ,EAAImT,aAAannB,KAAK2oB,GAAMltB,iBACxBmtB,GAAY5U,EAAImT,aAAavrB,YAAalD,KAAK4K,OAAO8jB,YAAY,eAQ1EpT,EAAI6U,iBAAmB,SAAC3jB,EAAOlJ,GAC3BtD,KAAK4K,OAAOC,UAAUgC,SAASN,SAASC,MAAMrB,MAAQqB,OACtC7M,IAAZ2D,IAAuBtD,KAAK4K,OAAOC,UAAUgC,SAASN,SAASjJ,QAAQ6H,MAAQ7H,IAIvFgY,EAAI8U,WAAa,SAAC3X,EAAO4X,GACjB/U,QAAkB3b,IAAlB2b,EAAIqU,UAAJrU,CAEAxW,IAAAA,GAAK,IAAI7F,MAAM2E,MAAOC,cAAewsB,GACrCtrB,EAAK,IAAI9F,MAAM+F,OACnBF,EAAGG,kBAAkBF,GAGjBurB,IAAAA,EAAU,IAAIrxB,MAAMsxB,OAAQvwB,KAAK4K,OAAO8C,SAC5C4iB,EAAQjrB,SAASC,KAAKP,EAAGmN,QAGzBoe,EAAQ3qB,MAAMJ,IADL,KAAA,KACe,GACxB+qB,EAAQ7uB,KAAOgX,EAEf6C,EAAIqU,UAAU9qB,IAAIyrB,KAGtBhV,EAAIkV,UAAY,SAAC/wB,GACT6b,QAAiB3b,IAAjB2b,EAAIuU,SAAJvU,CAEAmV,IAAAA,EAAKhxB,EAAGoJ,MAGR6nB,EAAS,IAAIzxB,MAAMsxB,OAAQvwB,KAAK4K,OAAOkD,QAC3C4iB,EAAOrrB,SAASC,KAAK7F,EAAG0E,KACxBusB,EAAO/qB,MAAMJ,IAJD,GAAA,GAAA,IAMRlD,IAAAA,EAAI,IAAIpD,MAAMoT,KAAMrS,KAAK0C,MAAM2L,eAAgBrO,KAAK4K,OAAOC,UAAUgD,IACzExL,EAAEsD,MAAMJ,IAAIkrB,EAAGA,EAAGA,GAClBpuB,EAAEgD,SAASC,KAAK7F,EAAG0E,KAEnBmX,EAAIuU,SAAShrB,IAAK6rB,GAClBpV,EAAIuU,SAAShrB,IAAKxC,KAGtBiZ,EAAIqV,mBAAqB,SAACttB,GACDrD,KAAK4K,OAAO8C,QAAQpK,aAA/B3D,IAAN0D,EAA+C,EAChBA,GAIvCiY,EAAIgU,cAAgB,WAChBhU,EAAIsV,SAAW5wB,KAAKksB,eACpB5Q,EAAIsV,SAASC,eAEbvV,EAAIwV,cAAgB,IAAI9D,YAAYC,MAAM,CACtCC,MAAO,IACPC,OAAQ,IACRC,QAAS,IACTC,aAAc,IAIdG,WAAYlS,EAAImS,eAChBC,YAAapS,EAAIqS,cAIjBE,aAAc,SACdD,eAAgB,WAEpBtS,EAAIsV,SAAS/rB,IAAIyW,EAAIwV,eAErBxV,EAAIyV,aAAe,IAAI/D,YAAYe,KAAK,CACpCC,QAAS,OACTC,SAAU,IACVC,UAAWluB,KAAK4K,OAAOE,OAAOS,QAElC+P,EAAIwV,cAAcjsB,IAAIyW,EAAIyV,eAQ9BzV,EAAI0V,YAAc,WACP1V,OAAAA,EAAIsV,UAOftV,EAAIoU,gBAAkB,SAACuB,GACd3V,EAAIiU,WACTjU,EAAIyV,aAAaxrB,IAAI,CAAEyoB,QAASiD,KAWpC3V,EAAI4V,cAAgB,SAACC,EAAY3kB,GACzBrG,IAAAA,EAAInG,KAAKksB,eAETxnB,EAAMysB,EAAWnvB,OACjBorB,EAA6B,GAAnB9R,EAAI+S,aAGd+C,EAAO,IAAIpE,YAAYC,MAAM,CAC7BC,MAAQ5R,EAAI+S,aAAe3pB,EAHjB,IAGkC0oB,EAC5CD,OAAQ7R,EAAI+S,aAAejB,EAC3BA,QAAS,IACTC,aAAc,IACdC,gBAAiB9gB,GAAexM,KAAK4K,OAAOE,OAAOW,MACnD8hB,kBAAmB,GAEnBC,WAAYlS,EAAImS,eAChBC,YAAapS,EAAIqS,cAEjBE,aAAc,SACdD,eAAgB,WAIhB3S,EAAS,GAAJvW,EAAW4W,EAAI+S,aAlBV,IAmBdpT,GAAuB,GAAjBK,EAAI+S,aAEL,IAAA,IAAIrqB,EAAE,EAAGA,EAAEU,EAAKV,IAAI,CACjBqtB,IAAAA,EAASF,EAAWntB,GACpBqtB,IACAA,EAAOhsB,SAASE,IAAKvB,EAAEsX,EAAI+S,aAxBrB,IAwB2CpT,EAAG,EAAK,MACzDmW,EAAKvsB,IAAIwsB,IAKVlrB,OADPA,EAAEtB,IAAIusB,GACCjrB,GAIXmV,EAAIC,oBAAsB,SAACtU,GACnBA,QAAMtH,IAANsH,EAAAA,CAEA5E,IAAAA,EAAI,IAUJiZ,QAAoB3b,IAApB2b,EAAIwT,YAA0B,CAC9BxT,EAAIwT,YAAc7nB,EAEdqqB,IAAAA,EAAQhW,EAAI6T,UAAU3vB,SAAS+xB,WAAWlsB,SAASmsB,MAWhD7xB,OAVP2xB,EAAM,GAAKrqB,EAAE/B,EACbosB,EAAM,GAAKrqB,EAAE9B,OACbmsB,EAAM,GAAKrqB,EAAE7B,GAWjBkW,EAAI6T,UAAU1sB,SAAU,EAGpBwB,IAAAA,EAAIqX,EAAIwT,YAAY3J,WAAWle,GAGnC5E,GAAK4B,EACOA,EAERmX,IAAAA,EAAI,IAAInc,MAAMoT,KAAMrS,KAAK0C,MAAM2L,eAAgBrO,KAAK4K,OAAO8jB,YAAY,gBAC3EtT,EAAE/V,SAASC,KAAKgW,EAAIwT,aACpB1T,EAAEzV,MAAMJ,IAAIlD,EAAEA,EAAEA,GAChBiZ,EAAIuT,UAAUhqB,IAAIuW,GAEdC,IAAAA,EAAI,IAAIpc,MAAMoT,KAAMrS,KAAK0C,MAAM2L,eAAgBrO,KAAK4K,OAAO8jB,YAAY,gBAC3ErT,EAAEhW,SAASC,KAAK2B,GAChBoU,EAAE1V,MAAMJ,IAAIlD,EAAEA,EAAEA,GAChBiZ,EAAIuT,UAAUhqB,IAAIwW,GAEd1V,IAAAA,EAAY,EAAJ1B,EAGRwtB,GAAQ,IAAIxyB,MAAMgwB,gBAAiBC,cAAc,CAAC5T,EAAIwT,YAAY7nB,IAEtEqU,EAAIuT,UAAUhqB,IAAK,IAAI5F,MAAMmwB,KAAMqC,EAAOzxB,KAAK4K,OAAO8jB,YAAY,iBAE9D/U,IAAAA,EAAI,IAAI2B,EAAIiT,MAChB5U,EAAE+X,aAAa1xB,KAAK4K,OAAOE,OAAOS,OAAOomB,aAAa3xB,KAAK4K,OAAOE,OAAOW,OAEzEkO,EAAEgC,YAC4B,IAAzBL,EAAIwT,YAAY5pB,EAAI+B,EAAE/B,GACG,IAAzBoW,EAAIwT,YAAY3pB,EAAI8B,EAAE9B,GACG,IAAzBmW,EAAIwT,YAAY1pB,EAAI6B,EAAE7B,IAG3BuU,EAAE0C,SAAS1W,GAAOisB,QAAS5xB,KAAK0C,MAAMmvB,yBAAyB5tB,IAE/DqX,EAAIuT,UAAUhqB,IAAI8U,GAElB2B,EAAIyT,YAAYzoB,KAAKqT,GAGjBmY,IAAAA,EAAI,GAMDA,OALPA,EAAE1W,EAAIE,EAAIwT,YAAY1qB,QACtB0tB,EAAEzW,EAAIpU,EAAE7C,QAERkX,EAAIwT,iBAAcnvB,EAEXmyB,IAGXxW,EAAIyW,kBAAoB,WACpBzW,EAAIuT,UAAU3S,iBACdZ,EAAIyT,YAAc,IAGtBzT,EAAI0W,oBAAsB,WAClB1W,KAAAA,EAAIyT,YAAY/sB,QAAU,GAEzB,IAAA,IAAIiwB,KAAM3W,EAAIyT,YACfzT,EAAIyT,YAAYkD,GAAIC,kBAK5B5W,EAAI1b,OAAS,WACLI,GAAAA,KAAKiG,IAAIud,mBAAqBxjB,KAAKmyB,aACnC7W,EAAIsV,SAASnuB,SAAU,MADvBzC,CAUAsb,GAHJ0R,YAAYptB,SAGR0b,EAAIwT,YAAY,CACZ9uB,GAAAA,KAAKygB,gBAAgB,CACjB6Q,IAAAA,EAAQhW,EAAI6T,UAAU3vB,SAAS+xB,WAAWlsB,SAASmsB,MACvDF,EAAM,GAAKtxB,KAAKygB,gBAAgBpc,EAAEa,EAClCosB,EAAM,GAAKtxB,KAAKygB,gBAAgBpc,EAAEc,EAClCmsB,EAAM,GAAKtxB,KAAKygB,gBAAgBpc,EAAEe,EAClCkW,EAAI6T,UAAU3vB,SAAS+xB,WAAWlsB,SAAS+sB,aAAc,EAG7D9W,EAAI6T,UAAU1sB,SAAU,OAEvB6Y,EAAI6T,UAAU1sB,SAAU,EA4DzB6Y,GAzDAtb,KAAKygB,kBAAoBzgB,KAAKiG,IAAIyZ,eAClCpE,EAAImT,aAAahsB,SAAU,EAC3B6Y,EAAImT,aAAappB,SAASC,KAAKtF,KAAKygB,gBAAgBpc,IAGpDiX,EAAImT,aAAahsB,SAAU,EAK3B6Y,EAAIqU,YACA3vB,KAAKiG,IAAIyZ,cACTpE,EAAIqU,UAAU9sB,YAGelD,IAAzBK,KAAKkqB,iBAA+B5O,EAAIqU,UAAU7sB,QAKxD9C,KAAKiG,IAAIosB,YAAaryB,KAAKohB,GAAGgH,eAAiBpoB,KAAKiG,IAAI2jB,iCAIzDtO,EAAIqT,WAAWlsB,SAAU,GAH1B6Y,EAAIqT,WAAWlsB,SAAU,EACzB6Y,EAAIqT,WAAWtpB,SAASC,KAAKtF,KAAKygB,gBAAgBpc,IAKtDiX,EAAI0W,sBAGAhyB,KAAKsyB,eAEDtyB,KAAKohB,GAAGgH,aACJpoB,KAAKohB,GAAGqC,aACRnI,EAAIsV,SAASvrB,SAASC,KAAKtF,KAAKohB,GAAGsH,gBACnCpN,EAAIsV,SAASvrB,SAASF,GAAK,GAC3BmW,EAAIsV,SAASvU,SAASf,EAAImU,iBAG1BnU,EAAIsV,SAASvrB,SAAS0e,YAAY/jB,KAAKsyB,cAAcjuB,EAAGrE,KAAKiG,IAAI4Z,SAAS1b,IAAK,IAC/EmX,EAAIsV,SAASvU,SAASrc,KAAKsyB,cAAcruB,EAAIqX,EAAImU,iBAIrDnU,EAAIsV,SAASvrB,SAAS0e,YAAY/jB,KAAKsyB,cAAcjuB,EAAGrE,KAAKiG,IAAI4Z,SAAS1b,IAAK,IAC/EmX,EAAIsV,SAASvU,SAASrc,KAAKsyB,cAAcruB,EAAIqX,EAAIkU,cAErDlU,EAAIsV,SAASsB,iBAET5W,EAAIiU,YAAWjU,EAAIsV,SAASnuB,SAAU,GAErCzC,KAAKyK,UAAU8nB,gBAAejX,EAAImT,aAAahsB,SAAU,IAG9D6Y,EAAIsV,SAASnuB,SAAU,EAGvB6Y,EAAImT,aAAahsB,SAAWzC,KAAKyK,UAAU8nB,cAAc,CACrDC,IAAAA,EAAKlX,EAAIyU,cAAgB,EAAgD,GAAzC9gB,KAAKiQ,IAA4B,GAAxBlf,KAAK6jB,OAAOC,cACzDxI,EAAImT,aAAa9oB,MAAMJ,IAAIitB,EAAGA,EAAGA,MAK1BlX,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AC/Gd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnWD,IAAA,EAAA,EAAA,QAAA,mBAmWC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,IAAA,OAAA,WAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,YAAA,EAAA,QAAA,UAAA,EAAA,UAAA,QAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAjWoBmX,IAAAA,EAAAA,SAAAA,GAiWpB,EAAA,EAjWmCzzB,EAAAA,SAiWnC,IAAA,EAAA,EAAA,GA/VWqqB,SAAAA,EAAAA,GAAI,IAAA,EAAA,OAAA,EAAA,KAAA,IACN1pB,EAAAA,EAAAA,KAAAA,UAAAA,EAAmBK,KAAKC,OAAOU,KAEhC+xB,OAAWrJ,EACXsJ,EAAAA,cAAWhzB,EACXizB,EAAAA,QAAW,MAOXC,EAAAA,QAAU,IAAI5zB,MAAM6zB,gBAAiB9yB,KAAKye,SAASC,WACnDmU,EAAAA,QAAQE,eAAe,IACvBluB,EAAAA,IAAI,EAAKguB,SAETG,EAAAA,gBAAiB,EACjBC,EAAAA,UAAY,GAEZC,EAAAA,aAAe,EAEfC,EAAAA,WAAc,EAGdC,EAAAA,WAAa,EACbC,EAAAA,cAAgB,IAAIp0B,MAAMyE,QAC1B4vB,EAAAA,kBAAgB3zB,EAEhB4zB,EAAAA,WAAc,GACdA,EAAAA,WAAWluB,SAAa,IAAIpG,MAAMyE,QAClC6vB,EAAAA,WAAWvtB,WAAa,IAAI/G,MAAMohB,WAElCmT,EAAAA,eAAY7zB,EAIZ8zB,EAAAA,UApCO,EA+Vf,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,kBAxTD,MAAA,SAAgBjV,GACRA,EAAI,GAAK,KAAKqU,QAAQE,eAAevU,KAuT5C,CAAA,IAAA,yBApTD,MAAA,SAAuB6K,GAGfqK,IAAAA,EAAU1zB,KAAK4K,OAAOC,UAAU6e,QAG7BgK,OAAAA,EAFGrK,EAAMqK,EAAQ1xB,UAgT3B,CAAA,IAAA,UA3SD,MAAA,WAEQyP,IAAAA,EAAI,IAAIxS,MAAM00B,eAAgB,GAAK,GAAI,IAEtCC,KAAAA,aAAe,KAAKC,uBAAuB,KAAKnB,QAEjDoB,IAAAA,EAAQ,IAAI70B,MAAMoT,KAAMZ,EAAG,KAAKmiB,cAE/BG,KAAAA,aAAe/zB,KAAKksB,eACpB6H,KAAAA,aAAalvB,IAAIivB,GACjBC,KAAAA,aAAa7wB,YAAY,KAAK0wB,cAG9BG,KAAAA,aAAaC,mBAAkB,GAG/BC,KAAAA,YAAc,IAAIh1B,MAAMsxB,OAAQvwB,KAAKyK,UAAUypB,YAAY,KAAKxB,OAAS1yB,KAAKyK,UAAUypB,YAAYlyB,SACpGiyB,KAAAA,YAAY5uB,SAASE,IAAI,EAAE,EAAE,GAC7B0uB,KAAAA,YAAYxxB,SAAU,EAGtB0xB,KAAAA,WAAa,IAAIl1B,MAAMsxB,OAAQvwB,KAAKyK,UAAU2pB,SAAS,KAAK1B,OAAS1yB,KAAKyK,UAAU2pB,SAASpyB,SAC7FmyB,KAAAA,WAAW9uB,SAASE,IAAI,EAAE,EAAE,GAE5B4uB,KAAAA,WAAW1xB,SAAU,EAGrB4xB,KAAAA,cAAgBr0B,KAAKksB,eACrBoI,KAAAA,eAAiB,IAAItH,YAAYC,MAAM,CACxCC,MAAO,GACPC,OAAQ,IACRC,QAAS,IACTC,aAAc,IAEdC,gBAAiBttB,KAAK4K,OAAOE,OAAOW,MAEpC+hB,WAAYxtB,KAAKmN,SAAS,yBAC1BugB,YAAa1tB,KAAKmN,SAAS,qBAM1BknB,KAAAA,cAAchvB,SAASF,EAAI,GAC3BkvB,KAAAA,cAAcxvB,IAAI,KAAKyvB,gBAGvBC,KAAAA,aAAe,IAAIvH,YAAYe,KAAK,CACrCC,QAAS,SAAS,KAAK0E,OACvBzE,SAAU,IAEVC,UAAWluB,KAAKyK,UAAU+pB,QAAQ,KAAK9B,OAAS1yB,KAAKyK,UAAU+pB,QAAQxyB,UAEtEuyB,KAAAA,aAAalvB,SAASF,EAAI,EAG1BsvB,KAAAA,gBAAkB,IAAIzH,YAAYe,KAAK,CACxCC,QAAS,iBACTC,SAAU,IACVC,UAAWluB,KAAK4K,OAAOE,OAAOS,QAE7BkpB,KAAAA,gBAAgBpvB,SAASF,GAAK,IAE9BmvB,KAAAA,eAAezvB,IAAI,KAAK0vB,cACxBD,KAAAA,eAAezvB,IAAI,KAAK4vB,iBAExB5vB,KAAAA,IAAI,KAAKkvB,cACTlvB,KAAAA,IAAI,KAAKwvB,eACTxvB,KAAAA,IAAI,KAAKovB,kBAKgCt0B,IAA1CK,KAAKyK,UAAUiqB,UAAU,KAAKhC,UAC9B1yB,KAAKyK,UAAUiqB,UAAU,KAAKhC,QAAU,KAAKyB,WAC7Cn0B,KAAKyK,UAAUkqB,SAAS9vB,IAAK,KAAKsvB,eAgOzC,CAAA,IAAA,UA5ND,MACS,WACD,KAAKP,cAAc,KAAKA,aAAapvB,UACrC,KAAKuvB,cAAc,KAAKA,aAAavvB,UACrC,KAAKyvB,aAAa,KAAKA,YAAYzvB,UAEnC,KAAK2vB,YAAY,KAAKA,WAAW3vB,UACjCxE,KAAKyK,UAAUiqB,UAAU,KAAKhC,SAAS1yB,KAAKyK,UAAUiqB,UAAU,KAAKhC,QAAQluB,UAE7E,KAAK6vB,eAAe,KAAKA,cAAc7vB,UACvC,KAAK8vB,gBAAgB,KAAKA,eAAe9vB,UACzC,KAAK+vB,cAAc,KAAKA,aAAa/vB,UACrC,KAAKiwB,iBAAiB,KAAKA,gBAAgBjwB,UAE1CA,KAAAA,YA8MR,CAAA,IAAA,qBA1MD,MAAA,SAAmB+B,GACX6U,IAAAA,EAAI,KAQD,YAN4Bzb,IAA/Byb,EAAE2Y,aAAa7xB,SAAS,IACxBkZ,EAAE2Y,aAAatvB,OAAO2W,EAAE2Y,aAAa7xB,SAAS,IAGlDkZ,EAAE2Y,aAAazsB,KAAKf,GAEb,OAiMV,CAAA,IAAA,cA9LD,MAAA,SAAYosB,GAOD,OANFA,KAAAA,SAAWA,EAEX4B,KAAAA,aAAahvB,IAAI,CAClByoB,QAAS2E,IAGN,OAuLV,CAAA,IAAA,cApLD,MAAA,WACQ,QAAgBhzB,IAAhB,KAAK+yB,OACL,YAAkB/yB,IAAlB,KAAKgzB,SAA+B,SAAS,KAAKD,OAC/C,KAAKC,WAiLf,CAAA,IAAA,aA9KD,MAAA,SAAWiC,GAQA,OAPFhC,KAAAA,QAAUgC,EAGVH,KAAAA,gBAAgBlvB,IAAI,CACrByoB,QAAS,KAAK4G,IAGX,OAsKV,CAAA,IAAA,gBAnKD,MAAA,SAAcC,GACNA,QAAQl1B,IAARk1B,EAIAA,GAAAA,EAAM,EAAE,CACHZ,KAAAA,YAAYxxB,SAAU,EACvB8Q,IAAAA,EAAI,GAAa,IAANshB,EACVZ,KAAAA,YAAYtuB,MAAMJ,IAAIgO,EAAEA,EAAEA,QAE9B,KAAK0gB,YAAYxxB,SAAU,OARvBwxB,KAAAA,YAAYxxB,SAAU,IAiKlC,CAAA,IAAA,iBAtJD,MAAA,WACS0xB,KAAAA,WAAW1xB,SAAU,IAqJ7B,CAAA,IAAA,eAlJD,MAAA,SAAaqyB,GACL,KAAK1B,WAAa,IAEjBA,KAAAA,UAAYpzB,KAAK6jB,OAAOC,YAExBuP,KAAAA,cAAc/tB,KAAK,KAAK6uB,WAAW9uB,UAEnCiuB,KAAAA,aAAe,IAAIr0B,MAAMyE,QAAS4P,WAAWwhB,EAAG,IAAKxhB,WAAWwhB,EAAG,IAAKxhB,WAAWwhB,EAAG,KACtFC,KAAAA,aAAiC,EAAlBzhB,WAAWwhB,EAAG,IAE7BX,KAAAA,WAAWxuB,MAAMJ,IAAI,KAAKwvB,aAAa,KAAKA,aAAa,KAAKA,cAE9DZ,KAAAA,WAAW1xB,SAAU,KAsI7B,CAAA,IAAA,wBAnID,MAAA,WACQ,KAAA,KAAK2wB,UAAY,GAAjB,CAEA4B,IAAAA,EAAIh1B,KAAKyK,UAAUwqB,gBAEnBpuB,GAAK7G,KAAK6jB,OAAOC,YAAc,KAAKsP,WAAa4B,EAGjDnuB,GAAAA,GAAK,EAUL,OATKusB,KAAAA,WAAa,EAEbe,KAAAA,WAAW9uB,SAASC,KAAK,KAAKguB,cAC9Ba,KAAAA,WAAWxuB,MAAMJ,IAAI,KAAKwvB,aAAa,KAAKA,aAAa,KAAKA,mBAE9DZ,KAAAA,WAAW1xB,SAAU,GAOzB0xB,KAAAA,WAAW9uB,SAAS0e,YAAY,KAAKsP,cAAe,KAAKC,aAAczsB,GAIvEstB,KAAAA,WAAW1xB,SAAU,KA0G7B,CAAA,IAAA,yBArGD,MAAA,SAAuBiW,GACf,KAAKwa,aAAe,IAEnBA,KAAAA,YAAclzB,KAAK6jB,OAAOC,YAE1ByP,KAAAA,WAAWluB,SAASC,KAAK,KAAKD,UAC9BkuB,KAAAA,WAAWvtB,WAAWV,KAAK,KAAKU,YAEhCwtB,KAAAA,UAAY9a,KA6FpB,CAAA,IAAA,wBAxFD,MAAA,WACQ,KAAA,KAAKwa,YAAc,GAAnB,CAEA8B,IAAAA,EAAIh1B,KAAKyK,UAAUwqB,gBAET,KAAK9B,WAAf6B,GAAK,EAAuB,GACRh1B,KAAK6jB,OAAOC,YAAc,KAAKoP,aAAe8B,EAElEE,IAAAA,EAAK,KAAK3B,WACV4B,EAAK,KAAK3B,UAGV,GAAA,KAAKL,YAAc,EAOnB,OANKD,KAAAA,aAAe,EAEf7tB,KAAAA,SAASC,KAAK6vB,EAAG9vB,eAEjB0uB,KAAAA,aAAa/tB,WAAWV,KAAK6vB,EAAGnvB,YAKpCX,KAAAA,SAAS0e,YAAYmR,EAAG7vB,SAAU8vB,EAAG9vB,SAAU,KAAK8tB,YACpDY,KAAAA,aAAa/tB,WAAWovB,MAAMD,EAAGnvB,WAAY,KAAKmtB,eAiE1D,CAAA,IAAA,SA7DD,MAAA,WAEQ,GADCkC,KAAAA,wBACD,KAAKlB,WAAW1xB,QAAQ,CACnB6yB,KAAAA,wBAEDjzB,IAAAA,EAAI,KAAK8xB,WAAWxuB,MAAMT,EAC1B7C,EAAE,KAAO,KAAK8xB,WAAWxuB,MAAMJ,IAAM,IAAFlD,EAAS,IAAFA,EAAS,IAAFA,GAChD,KAAK8xB,WAAW1xB,SAAU,EAG/BsgB,IAAAA,EAAO/iB,KAAKiG,IAAI0P,QAChB4P,EAAMvlB,KAAKiG,IAAI4Z,SAAS1b,IACxB4e,QAAQpjB,IAARojB,QAA6BpjB,IAAR4lB,EAArBxC,CAOCsR,KAAAA,cAAcnC,iBAKfqD,IAAAA,EAAO,KAAKtB,YAAYtuB,MAAMT,GAClCqwB,GAAQ,KAEG,IAAM,KAAKtB,YAAYtuB,MAAMJ,IAAIgwB,EAAMA,EAAMA,GACnD,KAAKtB,YAAYxxB,SAAU,KAiCnC,CAAA,IAAA,cAtBD,MAAA,WAAa,IAAA,EAAA,KACL,KAAA,KAAKuwB,gBACL,KAAKC,UAAUjxB,OAAS,GAAxB,CAEAiC,IAAAA,EAAI,KAAKgvB,UAAUuC,QAEnBjzB,EAAK,IAAIuc,MACbvc,EAAG6T,IAAMnS,EAAEsD,KAEXhF,EAAGyc,OACEgU,KAAAA,gBAAiB,EAEtBzwB,EAAGkzB,QAAU,WACT,EAAKzC,gBAAiB,GAKrB0C,KAAAA,cAAc,QAItB,EAjWoBjD,GAiWpB,QAAA,QAAA;;ACgWchoB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAnsBf,IAAA,EAAA,EAAA,QAAA,qBAmsBeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GA7rBf,IAAIA,EAAY,CAEhBA,gBAA4B,IAC5BA,eAA2B,OAG3BA,gBAA4B,IAC5BA,gBAA4B,KAE5BA,EAAUgoB,OAASA,EAAnB,QAMAhoB,EAAU+jB,KAAO,WACb/jB,EAAUkrB,QAAUtmB,OAAOC,SAASsmB,OAEpCnrB,EAAUorB,gBAEVprB,EAAUqrB,YAASn2B,EACnB8K,EAAUsrB,YAAa,EAEvBtrB,EAAUurB,eAAYr2B,EAEtB8K,EAAU4e,SAAM1pB,EAChB8K,EAAU8nB,eAAgB,EAE1B9nB,EAAUwrB,UAAY,EAEtBxrB,EAAUyrB,WAAa,GAEvBzrB,EAAU0rB,SAAWn2B,KAAKksB,aAAa,WACvCzhB,EAAU0rB,SAAStF,eAEnBpmB,EAAUkqB,SAAW30B,KAAKksB,aAAa,SACvCzhB,EAAUkqB,SAAS/X,SAASnS,EAAU0rB,UACtC1rB,EAAUiqB,UAAY,GAGtBrlB,OAAO+mB,YAAa3rB,EAAU4rB,UAAqC,IAA1B5rB,EAAUwqB,iBACnDxqB,EAAU6rB,oBAAiB32B,EAE3BmH,QAAQC,IAAI,yBACZ0D,EAAU8rB,iBAGd9rB,EAAU8rB,cAAgB,WACtB9rB,EAAU+rB,QAAU3lB,EAAE,eAAeyd,KAAK,KAG9C7jB,EAAUgsB,YAAc,WACbhsB,OAAAA,EAAUwrB,WAIrBxrB,EAAUorB,cAAgB,WAEtBprB,EAAU+pB,QAAU,GACpB/pB,EAAU+pB,QAAQluB,KAAM,IAAIrH,MAAMuM,MAAM,EAAE,EAAE,IAC5Cf,EAAU+pB,QAAQluB,KAAM,IAAIrH,MAAMuM,MAAM,EAAE,EAAE,IAC5Cf,EAAU+pB,QAAQluB,KAAM,IAAIrH,MAAMuM,MAAM,EAAE,EAAE,IAC5Cf,EAAU+pB,QAAQluB,KAAM,IAAIrH,MAAMuM,MAAM,EAAE,EAAE,IAC5Cf,EAAU+pB,QAAQluB,KAAM,IAAIrH,MAAMuM,MAAM,EAAE,EAAE,IAC5Cf,EAAU+pB,QAAQluB,KAAM,IAAIrH,MAAMuM,MAAM,EAAE,EAAE,IAE5Cf,EAAUisB,YAAc,GACxBjsB,EAAUisB,YAAYpwB,KAAM,IAAIrH,MAAMuM,MAAM,GAAI,EAAI,IACpDf,EAAUisB,YAAYpwB,KAAM,IAAIrH,MAAMuM,MAAM,GAAI,GAAI,IACpDf,EAAUisB,YAAYpwB,KAAM,IAAIrH,MAAMuM,MAAM,EAAI,GAAI,IACpDf,EAAUisB,YAAYpwB,KAAM,IAAIrH,MAAMuM,MAAM,EAAI,GAAI,KACpDf,EAAUisB,YAAYpwB,KAAM,IAAIrH,MAAMuM,MAAM,EAAI,EAAI,KACpDf,EAAUisB,YAAYpwB,KAAM,IAAIrH,MAAMuM,MAAM,GAAI,EAAI,KAEpDf,EAAUksB,UAAY,GACtBlsB,EAAUksB,UAAUrwB,KAAK,QACzBmE,EAAUksB,UAAUrwB,KAAK,QACzBmE,EAAUksB,UAAUrwB,KAAK,QACzBmE,EAAUksB,UAAUrwB,KAAK,QACzBmE,EAAUksB,UAAUrwB,KAAK,QACzBmE,EAAUksB,UAAUrwB,KAAK,QAErBswB,IAAAA,EAAK52B,KAAK4K,OAAOC,UACrB+rB,EAAGlN,QAAU,GAET1b,IAAAA,EAAMhO,KAAK4K,OAAOC,UAAUkB,MAAM3H,QACtC4J,EAAIzB,SAASC,MAAMrB,MAAQV,EAAU+pB,QAAQ,GAU7CoC,EAAGlN,QAAQpjB,KAAK0H,GAEX,IAAA,IAAI/L,EAAE,EAAGA,EAAEwI,EAAU+pB,QAAQxyB,OAAQC,IAAI,CACtCe,IAAAA,EAAIgL,EAAI5J,QAEZpB,EAAEuJ,SAASC,MAAMrB,MAAQV,EAAU+pB,QAAQvyB,GAE3C20B,EAAGlN,QAAQpjB,KAAKtD,GAIpByH,EAAUypB,YAAc,GAGnB,IADD2C,IAAAA,GAAS,IAAI53B,MAAM2O,eAAgBtG,KAAMtH,KAAKmN,SAAS,eAClDlL,EAAE,EAAGA,EAAEwI,EAAU+pB,QAAQxyB,OAAQC,IAAI,CACtC60B,IAAAA,EAAO,IAAI73B,MAAM0O,eAAe,CAChCP,IAAKypB,EACLxqB,YAAY,EACZG,MAAO/B,EAAU+pB,QAAQvyB,KAE7B60B,EAAK/oB,iBAAkB,EAEvBtD,EAAUypB,YAAY5tB,KAAKwwB,GAI/BrsB,EAAU2pB,SAAW,GAGhB,IADD2C,IAAAA,GAAU,IAAI93B,MAAM2O,eAAgBtG,KAAMtH,KAAKmN,SAAS,aACnDlL,EAAE,EAAGA,EAAEwI,EAAU+pB,QAAQxyB,OAAQC,IAAI,CACtC60B,IAAAA,EAAO,IAAI73B,MAAM0O,eAAe,CAChCP,IAAK2pB,EACL1qB,YAAY,EACZiB,WAAW,EACXd,MAAO/B,EAAU+pB,QAAQvyB,KAE7B60B,EAAK/oB,iBAAkB,EAEvBtD,EAAU2pB,SAAS9tB,KAAKwwB,KAYhCrsB,EAAUR,UAAY,SAACE,EAAS5C,GACxB,GAACkD,EAAUsrB,WAAX,CACAiB,IAAAA,EAAOvsB,EAAUqrB,OAEjBkB,GAAMA,EAAKC,KAAKxsB,EAAUysB,eAAgB,CAAC9L,EAAGjhB,EAASlG,EAAGsD,MAYlEkD,EAAUT,GAAK,SAACG,EAASE,GACjBA,QAAY1K,IAAZ0K,EAAAA,CAEA8sB,IAAAA,EAAan3B,KAAK6J,SAASE,eAEHpK,IAAxBw3B,EAAWhtB,KAAwBgtB,EAAWhtB,GAAW,IAC7DgtB,EAAWhtB,GAAS7D,KAAK+D,KAO7BI,EAAU2sB,YAAc,WAChB3sB,YAAqB9K,IAArB8K,EAAUqrB,QACPrrB,EAAUsrB,YAOrBtrB,EAAU4sB,MAAQ,WACV5sB,YAAkB9K,IAAlB8K,EAAU4e,KAQlB5e,EAAU1D,IAAM,SAAC9C,GACT,GAACwG,EAAUsrB,WAAX,CACAiB,IAAAA,EAAOvsB,EAAUqrB,OAEjBkB,GAAMA,EAAKC,KAAK,MAAOhzB,KAU/BwG,EAAU6sB,kBAAoB,SAACC,GACtB9sB,EAAUqrB,cACCn2B,IAAZ43B,IAAuBA,EAAUv3B,KAAKoX,SAASC,aAEnC1X,IAAZ43B,EAKJ9sB,EAAUqrB,OAAOmB,KAAK,SAAUM,GAJ5BzwB,QAAQC,IAAI,8CAOpB0D,EAAU+sB,kBAAoB,WACrB/sB,EAAUqrB,QAEfrrB,EAAUqrB,OAAOmB,KAAK,WAS1BxsB,EAAU0c,QAAU,SAACwO,GACblrB,IAAAA,EAAUsrB,WAAVtrB,CACAkrB,IAASlrB,EAAUkrB,QAAUA,GAE7B5gB,IAAAA,EAAO,GAGsB,WAA7B1F,OAAOC,SAASmoB,UAChB1iB,EAAKkb,KAAO,kBACZlb,EAAK2iB,QAAS,EACd3iB,EAAK4iB,oBAAqB,GAK1B5iB,EAAKkb,KAAO,iBAKhBxlB,EAAUqrB,OAAS8B,GAAGzQ,QAAQ1c,EAAUkrB,QAAS5gB,QAExBpV,IAArB8K,EAAUqrB,SACdrrB,EAAUsrB,WAAatrB,EAAUqrB,OAAO+B,UAExCptB,EAAUqtB,6BAGdrtB,EAAU2c,WAAa,gBACMznB,IAArB8K,EAAUqrB,SAEdrrB,EAAUwrB,UAAY,EAEtBxrB,EAAUqrB,OAAO1O,aACjB3c,EAAUsrB,YAAa,IAI3BtrB,EAAUstB,aAAe,aAIzBttB,EAAUutB,YAAc,SAACrF,GACrBloB,EAAUurB,UAAYrD,OACGhzB,IAArB8K,EAAUqrB,aACQn2B,IAAlB8K,EAAU4e,MAEV5e,EAAU+rB,SAAS/rB,EAAU+rB,QAAQyB,OAAO,4BAA4BtF,EAAS,YACrFloB,EAAUqrB,OAAOmB,KAAK,QAAStE,KAEnCloB,EAAUytB,WAAa,SAACtD,GACpBnqB,EAAU0tB,KAAOvD,OACQj1B,IAArB8K,EAAUqrB,aACQn2B,IAAlB8K,EAAU4e,MAEV5e,EAAU+rB,UACV/rB,EAAU+rB,QAAQyB,OAAO,sBAAsBxtB,EAAUksB,UAAUlsB,EAAU4e,IAAI,GAAG,iBAAiBuL,EAAI,eACzGnqB,EAAU+rB,QAAQ4B,UAAU3tB,EAAU+rB,QAAQ6B,eAGlD5tB,EAAUqrB,OAAOmB,KAAK,OAAQrC,KAKlCnqB,EAAUqtB,wBAA0B,WAGhCrtB,EAAUqrB,OAAO9rB,GAAG,UAAW,WAC3BS,EAAUsrB,YAAa,OAGMp2B,IAAzBK,KAAKoX,SAASC,QAAsB5M,EAAU6sB,oBAElDxwB,QAAQC,IAAI,kCAAkC/G,KAAKoX,SAASC,QAC5DrX,KAAKiK,UAAU,iBAEfQ,EAAUstB,iBAGdttB,EAAUqrB,OAAO9rB,GAAG,aAAc,WAC9BS,EAAUsrB,YAAa,EACvBtrB,EAAU4e,SAAM1pB,EAEhB8K,EAAU0rB,SAAStzB,OAEf4H,EAAU+rB,SAAS/rB,EAAU+rB,QAAQyB,OAAO,sDAEhDnxB,QAAQC,IAAI,qBACZ/G,KAAKiK,UAAU,sBAInBQ,EAAUqrB,OAAO9rB,GAAGS,EAAUysB,eAAgB,SAAC3vB,GACvC4C,IAAAA,EAAU5C,EAAK6jB,EACfnnB,EAAIsD,EAAKtD,EAETmG,EAASpK,KAAK6J,SAASE,UAAUI,GACrCnK,KAAK6J,SAASc,gBAAgBP,EAAQnG,KAG1CwG,EAAUqrB,OAAO9rB,GAAG,KAAM,SAACzC,GACvBT,QAAQC,IAAI,cAAgBQ,GAC5BkD,EAAU4e,IAAM9hB,EAEhBkD,EAAU0rB,SAASrzB,OAEf2H,EAAU+rB,SAAS/rB,EAAU+rB,QAAQyB,OAAO,kBAAkB1wB,EAAK,YAGvEkD,EAAU+sB,oBAEVx3B,KAAKiK,UAAU,iBAAkB1C,KAGrCkD,EAAUqrB,OAAO9rB,GAAG,SAAU,SAACzC,GAC3BkD,EAAUwrB,UAAY1uB,EAAK+wB,SAC3BxxB,QAAQC,IAAI,eAAe0D,EAAUwrB,WAErCj2B,KAAKiK,UAAU,iBAAkB1C,KAGrCkD,EAAUqrB,OAAO9rB,GAAG,SAAU,SAACzC,GACvB8hB,IAAAA,EAAM9hB,EAGVT,QAAQC,IAAI,SAAUsiB,EAAI,sBACtB5e,EAAU+rB,SAAS/rB,EAAU+rB,QAAQyB,OAAO,YAAY5O,EAAI,8BAEhE5e,EAAU8tB,YAAYlP,GAGtB5e,EAAU+sB,oBACVx3B,KAAKiK,UAAU,gBAAiBof,KAGpC5e,EAAUqrB,OAAO9rB,GAAG,SAAU,SAACzC,GACvB8hB,IAAAA,EAAM9hB,EACN8hB,QAAQ1pB,IAAR0pB,EAAAA,CAEAjO,IAAAA,EAAI3Q,EAAUyrB,WAAW7M,GACzBjO,GAAGA,EAAEvY,OAKTiE,QAAQC,IAAI,SAAUsiB,EAAI,mBACtB5e,EAAU+rB,SAAS/rB,EAAU+rB,QAAQyB,OAAO,YAAY5O,EAAI,2BAGhE5e,EAAU+sB,oBACVx3B,KAAKiK,UAAU,gBAAiBof,MAGpC5e,EAAUqrB,OAAO9rB,GAAG,SAAU,SAACzC,GACvBmR,IAAAA,EAAIjO,EAAU+tB,YAAYjxB,GAI1B8hB,EAAM3Q,EAAEga,OACJjoB,EAAU8tB,YAAYlP,GAK5BoP,uBAAuB/f,KAI7BjO,EAAUqrB,OAAO9rB,GAAG,SAAU,SAACzC,GACvB8hB,IAAAA,EAAM9hB,EAAK8hB,IACXyL,EAAMvtB,EAAKutB,GAEPrqB,EAAU8tB,YAAYlP,GAE5BqP,aAAa5D,KAGnBrqB,EAAUqrB,OAAO9rB,GAAG,QAAS,SAACzC,GACtB8hB,IAAAA,EAAQ9hB,EAAK8hB,IACbsP,EAAQpxB,EAAK9F,UAEL9B,IAAR0pB,IAEI5e,EAAU8tB,YAAYlP,GAC5B2O,YAAYW,GAEd7xB,QAAQC,IAAI,SAAUsiB,EAAI,yBAAyBsP,GAC/CluB,EAAU+rB,SAAS/rB,EAAU+rB,QAAQyB,OAAO,YAAY5O,EAAI,yBAAyBsP,EAAM,eAGnGluB,EAAUqrB,OAAO9rB,GAAG,OAAQ,SAACzC,GACrB8hB,IAAAA,EAAM9hB,EAAK8hB,IACXuL,EAAMrtB,EAAKqtB,IAEXvL,QAAQ1pB,IAAR0pB,EAAAA,CAEAjO,IAAAA,EAAI3Q,EAAU8tB,YAAYlP,GAC9BjO,EAAE8c,WAAWtD,GAEb9tB,QAAQC,IAAI,SAAUsiB,EAAI,KAAKuL,GAC3BnqB,EAAU+rB,SAAS/rB,EAAU+rB,QAAQyB,OAAO,sBAAsBxtB,EAAUksB,UAAUtN,EAAI,GAAG,QAAQjO,EAAEwd,cAAc,SAAShE,EAAI,kBAG1InqB,EAAUqrB,OAAO9rB,GAAG,QAAS,SAACzC,GACtB8hB,IAAAA,EAAM9hB,EAAK8hB,IACXA,QAAQ1pB,IAAR0pB,EAAAA,CAEAxK,IAAAA,EAAWtX,EAAK/E,MAChB4Y,EAAI3Q,EAAU8tB,YAAYlP,GAG9BjO,EAAEsa,cAAc,GAUZta,EAAEyX,QAAQgG,WAAWzd,EAAEyX,QAAQiG,OAEnC94B,KAAKye,SAAS1T,QAAQzD,KAAMuX,EAAU,SAAChK,GACnCuG,EAAEyX,QAAQ9T,UAAWlK,GACrBuG,EAAEyX,QAAQkG,SAAS,GAGnB3d,EAAEyX,QAAQ7T,aA+BtBvU,EAAUuuB,YAAc,SAACtgB,GACjB,GAACA,EAAD,CAEA0C,IAAAA,EAAI,IAAI6d,aAAa,GACzB7d,EAAE,GAAK1C,EAAErT,SAASH,EAClBkW,EAAE,GAAK1C,EAAErT,SAASF,EAClBiW,EAAE,GAAK1C,EAAErT,SAASD,EAGd8zB,IAAAA,EAAU,IAAIC,UAAU/d,EAAEvG,QAYvBqkB,OAVPA,EAAQ,IAAwB,IAAjBxgB,EAAE1S,WAAWd,EAC5Bg0B,EAAQ,IAAwB,IAAjBxgB,EAAE1S,WAAWb,EAC5B+zB,EAAQ,IAAwB,IAAjBxgB,EAAE1S,WAAWZ,EAC5B8zB,EAAQ,IAAwB,IAAjBxgB,EAAE1S,WAAWozB,EAE5BF,EAAQ,IAAMxgB,EAAEga,OAKTwG,IAIXzuB,EAAU+tB,YAAc,SAACU,GACjBxgB,IAAAA,EAAI,GACJ2gB,EAAO,IAAIF,UAAUD,GAsClBxgB,OAnCPA,EAAEga,OAAS2G,EAAK,IAKhB3gB,EAAE1S,WAAa,IAAI/G,MAAMohB,WACrBgZ,EAAK,IAAM,IACXA,EAAK,IAAM,IACXA,EAAK,IAAM,IACXA,EAAK,IAAM,KAIfA,EAAO,IAAIJ,aAAaC,GACxBxgB,EAAErT,SAAW,IAAIpG,MAAMyE,QAAQ21B,EAAK,GAAGA,EAAK,GAAGA,EAAK,IAqB7C3gB,GAKXjO,EAAU7K,OAAS,WAGV,IAAA,IAAI05B,EAAE,EAAGA,EAAE7uB,EAAUyrB,WAAWl0B,OAAQs3B,IAAI,CACzCle,IAAAA,EAAI3Q,EAAUyrB,WAAWoD,GACzBle,GAAKA,EAAE3Y,SAEP2Y,EAAExb,WAKd6K,EAAU8uB,kBAAoB,SAAC73B,GACvBA,QAAM/B,IAAN+B,EAAAA,CAEAA,GAAAA,EAOA,OANK+I,EAAU8nB,eAEXvyB,KAAKiK,UAAU,kCAGnBQ,EAAU8nB,eAAgB,GAItB9nB,EAAU8nB,eAEVvyB,KAAKiK,UAAU,6BAIfuU,IAAAA,EAAIxe,KAAKsb,IAAIyU,aACjB/vB,KAAKsb,IAAImT,aAAa9oB,MAAMJ,IAAIiZ,EAAEA,EAAEA,GAEpC/T,EAAU8nB,eAAgB,IAIlC9nB,EAAU4rB,UAAY,WACd5rB,QAAkB9K,IAAlB8K,EAAU4e,KACT5e,EAAUqrB,QAAWrrB,EAAUsrB,WAAhC,CAEAyD,IAAAA,EAAOx5B,KAAKiG,IAAI4Z,SAChB,GAAC2Z,EAAD,CAIA1E,IAAAA,EAAK90B,KAAKy5B,uBACVhvB,GAAAA,EAAU8nB,oBAAwB5yB,IAAPm1B,EAAiB,CAExC4E,IAAAA,EAAM5E,EAAG5vB,EAAoBuO,YAAY,GACzCkmB,EAAM7E,EAAG3vB,EAAoBsO,YAAY,GACzCmmB,EAAM9E,EAAG1vB,EAAoBqO,YAAY,GACzC+K,EAAKxe,KAAKsb,IAAIiH,oBAAoB9O,YAAY,GAElDhJ,EAAUqrB,OAAOmB,KAAK,SAAU,CAACyC,EAAGC,EAAGC,EAAIpb,IAI3C9F,IAAAA,EAAI,GASJjO,GARJiO,EAAErT,SAAW,IAAIpG,MAAMyE,QACvBgV,EAAE1S,WAAa,IAAI/G,MAAMohB,WAEzB3H,EAAErT,SAASC,KAAKk0B,EAAKr1B,KACrBuU,EAAE1S,WAAWV,KAAKtF,KAAKiG,IAAIC,OAC3BwS,EAAEga,OAASjoB,EAAU4e,SAGY1pB,IAA7B8K,EAAU6rB,eAA6B,CACnCuD,IAAAA,EAAUpvB,EAAU6rB,eAAejxB,SACnCy0B,EAAUrvB,EAAU6rB,eAAetwB,WAEnC+zB,EAAOF,EAAQ31B,kBAAkBs1B,EAAKr1B,KACtC61B,EAAOF,EAAQG,QAAQj6B,KAAKiG,IAAIC,OAE/B6zB,GAAAA,EAAOtvB,EAAUyvB,iBAAmBF,EAAOvvB,EAAU0vB,gBAAiB,OAI3EjB,IAAAA,EAAUzuB,EAAUuuB,YAAYtgB,GACpCjO,EAAUqrB,OAAOmB,KAAK,SAAUiC,GAChCzuB,EAAU6rB,eAAiB5d,KAO/BjO,EAAU2vB,UAAY,SAAC/Q,GACZ5e,OAAAA,EAAUyrB,WAAW7M,IAGhC5e,EAAU8tB,YAAc,SAAClP,GAGjB5e,QAA8B9K,IAA9B8K,EAAUyrB,WAAW7M,GAAmB,CACpCjO,IAAAA,EAAI,IAAI3Q,EAAUgoB,OAAOpJ,GAC7BjO,EAAEwB,SAASnS,EAAU0rB,UAErB/a,EAAEif,mBAAmBr6B,KAAKmN,SAAS,wBAGnC1C,EAAUyrB,WAAW7M,GAAOjO,EAU5BA,IAAAA,EAAI3Q,EAAUyrB,WAAW7M,GAUtBjO,OAPFA,EAAE3Y,UACHgI,EAAUwrB,YACVj2B,KAAKiK,UAAU,gBAAiBof,IAGpCjO,EAAEtY,OAEKsY,GAGX3Q,EAAU6vB,cAAgB,SAACjR,GACnBjO,IAAAA,EAAI3Q,EAAUyrB,WAAW7M,QACnB1pB,IAANyb,GAEJA,EAAEmf,WAGN9vB,EAAU+vB,gBAAkB,WACnB,IAAA,IAAIx2B,KAAKyG,EAAUyrB,WAAW,CACvBzrB,EAAUyrB,WAAWlyB,GAC3BnB,SAKK4H,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACjaAkT,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA9Rf,IAAIA,EAAa,CAEjBA,WAAwB,EAExBA,KAAkB,WACdA,EAAW8c,iBAAkB,EAC7B9c,EAAW+c,aAAe,GAE1B/c,EAAWgd,gBAAeh7B,EAC1Bge,EAAWid,oBAAiBj7B,EAG5Bge,EAAWkd,YAAc76B,KAAKud,qBAC9BI,EAAWkd,YAAY93B,iBACvB4a,EAAWkd,YAAYhK,eAEvBlT,EAAWmd,gBAEXnd,EAAWod,WAAa,GAK5Bpd,cAA2B,WACvBA,EAAWqd,aAAeh7B,KAAK4K,OAAO8jB,YAAY,oBAGtD/Q,YAAyB,SAAC1C,QACZtb,IAANsb,IACJ0C,EAAWqd,aAAe/f,IAM9B0C,eAA4B,SAAYtZ,GAChCA,QAAM1E,IAAN0E,EAAiB,OAAO,EAExBsZ,GAAAA,EAAW+c,aAAa14B,OAAO,EAAE,CAC7Bi5B,IAAAA,EAAKtd,EAAW+c,aAAa/c,EAAW+c,aAAa14B,OAAO,GAC5DqC,GAAAA,EAAE62B,OAAOD,GAAK,OAAO,EAG7Btd,EAAW+c,aAAap0B,KAAKjC,GACzB82B,IAAAA,EAAYxd,EAAW+c,aAAa14B,OAGpCgB,EAAI,IAAI/D,MAAMoT,KAAMrS,KAAK0C,MAAM2L,eAAgBrO,KAAK4K,OAAO8jB,YAAY,sBAKvEyM,GAJJn4B,EAAEqC,SAASC,KAAKjB,GAChBrB,EAAE2C,MAAMJ,IAAI,KAAM,KAAM,MACxBvF,KAAKsb,IAAI+T,QAAQxqB,IAAK7B,GAElBm4B,EAAY,EAAG,OAAO,EAGtBC,IAAAA,EAAS,IAAIn8B,MAAMo8B,eAAgB1d,EAAW+c,cAC9C3hB,EAAS,IAAI9Z,MAAMoT,KAAM+oB,EAAMp7B,KAAK4K,OAAO8jB,YAAY,sBAKvD,GAAC/Q,EAAW8c,gBAyBX,CACGa,IAAAA,EAAa3d,EAAWid,eAC5BU,EAAW97B,SAASgF,UACpB82B,EAAW97B,SAAW47B,EAItBp7B,KAAK0C,MAAM64B,mBAAmBl3B,EAAE,GAChCi3B,EAAW57B,SAASsZ,cAAc1S,KAAMjC,EAAEa,GAC1Co2B,EAAW57B,SAASsZ,cAAc1S,KAAMjC,EAAEc,GAC1Cm2B,EAAW57B,SAASsZ,cAAc1S,KAAMjC,EAAEe,OAnCd,CAM5BuY,EAAWkd,YAAYh2B,IAAIkU,GAG3BA,EAAOrZ,SAASsZ,cAAgB,GAC3B,IAAA,IAAIhV,EAAE,EAAGA,EAAEm3B,EAAWn3B,IAGvBhE,KAAK0C,MAAM64B,mBAAmB5d,EAAW+c,aAAa12B,GAAI2Z,EAAW9E,YAErEE,EAAOrZ,SAASsZ,cAAc1S,KAAKqX,EAAW+c,aAAa12B,GAAGkB,GAC9D6T,EAAOrZ,SAASsZ,cAAc1S,KAAKqX,EAAW+c,aAAa12B,GAAGmB,GAC9D4T,EAAOrZ,SAASsZ,cAAc1S,KAAKqX,EAAW+c,aAAa12B,GAAGoB,GAGlEuY,EAAWid,eAAiB7hB,EAC5B4E,EAAW8c,iBAAkB,EAiB1B,OAAA,GAGX9c,gBAA6B,WAErBwd,GAAc,IADFxd,EAAW+c,aAAa14B,SAKxC2b,EAAW+c,aAAac,MAEpB7d,EAAWid,gBAAe,CACtBa,IAAAA,EAAS9d,EAAWid,eAAel7B,SACnC+7B,EAAOziB,eAAeyiB,EAAOziB,cAAcwiB,QAIvD7d,kBAA+B,WAC3BA,EAAW+c,aAAe,GAC1B/c,EAAW8c,iBAAkB,EAE7B9c,EAAWkd,YAAY3e,iBACvBlc,KAAKsb,IAAI+T,QAAQnT,kBAGrByB,sBAAmC,WACxBA,OAAAA,EAAWkd,aAGtBld,gBAA6B,WACrBA,OAAAA,EAAW+c,aAAa14B,OAAO,GAKvC2b,oBAAiC,SAAClF,GAM1BkF,GALJA,EAAW+c,aAAe,GAC1B/c,EAAW8c,iBAAkB,OAIE96B,IAA3Bge,EAAWkd,YAAXld,MAEUhe,IAAV8Y,IAAqBA,EAAQ,MAAMkF,EAAWod,YAE9CriB,IAAAA,EAAI1Y,KAAKmY,gBAAgBM,IAAUzY,KAAKud,mBAAmB9E,GAE3D4X,EAAU1S,EAAWkd,YAAY34B,SAAS,GA6BvCwW,OA3BP1Y,KAAKsb,IAAI8U,WAAW3X,EAAO4X,GAE3B3X,EAAE7T,IAAKwrB,GACP3X,EAAExV,YAAwClD,KAAK4K,OAAOC,UAAU0C,eAChEmL,EAAEgjB,gCAA4D17B,KAAK4K,OAAOC,UAAU0C,cAAwDoQ,EAAWqd,cACvJtiB,EAAEvY,gBAEFwd,EAAWkd,YAAY3e,iBAUvByB,EAAWod,aAQX/6B,KAAKsb,IAAI+T,QAAQnT,iBAEVxD,IAGXiF,kBAA+B,SAAClF,EAAO0C,GAC/BigB,IAAAA,EAAS,IAAIn8B,MAAMo8B,eAAgBlgB,GACnCpC,EAAS,IAAI9Z,MAAMoT,KAAM+oB,EAAiCp7B,KAAK4K,OAAOC,UAAU0C,eAEpFwL,EAAOrZ,SAASsZ,cAAgB,GAC3B,IAAA,IAAIhV,EAAE,EAAGA,EAAEmX,EAAOnZ,OAAQgC,IAAI,CAC3BK,IAAAA,EAAI8W,EAAOnX,GACfhE,KAAK0C,MAAM64B,mBAAmBl3B,EAAE,GAEhC0U,EAAOrZ,SAASsZ,cAAc1S,KAAMjC,EAAEa,GACtC6T,EAAOrZ,SAASsZ,cAAc1S,KAAMjC,EAAEc,GACtC4T,EAAOrZ,SAASsZ,cAAc1S,KAAMjC,EAAEe,GAG1CpF,KAAKsb,IAAI8U,WAAW3X,EAAOM,GAEvBL,IAAAA,EAAI1Y,KAAKsd,wBAAwB7E,GAM9BC,OALPA,EAAE7T,IAAIkU,GACNL,EAAEgjB,gCAA2D17B,KAAK4K,OAAOC,UAAU0C,cAAeoQ,EAAWqd,cAE7GtiB,EAAEvY,gBAEKuY,GAGXiF,sBAAmC,SAAYge,GACvC37B,QAAyBL,IAAzBK,KAAKygB,gBAA+B,OAAO,OAEhC9gB,IAAXg8B,IAAsBA,EAAS,KAE/Bt3B,IAAAA,EAAMrE,KAAKygB,gBAAgBpc,EAC3BkhB,EAAMvlB,KAAKiG,IAAIqkB,wBAUZjmB,OAHPA,EAAE0f,YAAY1f,EAAGkhB,EAAKoW,GAEtBhe,EAAWie,eAAev3B,GACnBA,GAMXsZ,aAA0B,SAAClF,EAAOnJ,EAAUuV,GACpCvV,QAAa3P,IAAb2P,QACW3P,IAAXklB,EAAAA,MAQUllB,IAAV8Y,IAAqBA,EAAQ,MAAMkF,EAAWod,YAE9CriB,IAAAA,EAAI1Y,KAAKsd,wBAAwB7E,GAGjCzV,EAAI,IAAI/D,MAAMoT,KAAMrS,KAAK0C,MAAM2L,eAA2CrO,KAAK4K,OAAOC,UAAU0C,eAGhGqL,EAAS,IAAI3Z,MAAM48B,SAehBnjB,OAdPE,EAAOvT,SAASC,KAAKgK,GACrBsJ,EAAOjT,MAAMJ,IAAIsf,EAAQA,EAAQA,GACjCjM,EAAO/T,IAAI7B,GAEXhD,KAAKsb,IAAI8U,WAAW3X,EAAOG,GAE3BF,EAAE7T,IAAK+T,GACPF,EAAEvY,gBACFuY,EAAEgjB,gCAA2D17B,KAAK4K,OAAOC,UAAU0C,cAAeoQ,EAAWqd,cAI7Grd,EAAWod,aAEJriB,IAGXiF,oBAAiC,SAAClF,GAC1B,GAACzY,KAAKygB,gBAAN,CAEApc,IAAAA,EAAIrE,KAAKygB,gBAAgBpc,EACzBma,EAAIxe,KAAKsb,IAAIiH,oBAEV5E,OAAAA,EAAWC,aAAanF,EAAOpU,EAAEma,KAG5Cb,mBAAgC,SAAClF,GACzBC,IAAAA,EAAI1Y,KAAKmY,gBAAgBM,GAEzBC,QAAM/Y,IAAN+Y,EAAiB,OAAO,EAGxB1Y,GAFJ0Y,EAAEwD,sBAEyBvc,IAAvBK,KAAKsb,IAAIqU,UAAyB,OAAO,EAExC,IAAA,IAAIttB,KAAKrC,KAAKsb,IAAIqU,UAAUztB,SAAS,CAClCC,IAAAA,EAAInC,KAAKsb,IAAIqU,UAAUztB,SAASG,GAChCF,GAAKA,EAAEV,OAASgX,GAAOzY,KAAKsb,IAAIqU,UAAUprB,YAAYpC,GAGvD,OAAA,IAGIwb,EAAAA,EAAAA,QAAAA,QAAAA;;AC4uBAqM,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA1gCf,IAAIA,EAAK,CAGTA,gBAAqB,EACrBA,gBAAqB,EAErBA,YAAiB,IAKjBA,QAAa,WACTA,EAAG8R,eAAiB97B,KAAKmN,SAAS,SAElC6c,EAAG+R,SAAU,EACb/R,EAAGgS,YAAc,GACjBhS,EAAGiS,UAAY,GAEfjS,EAAGkS,gBAAiB,EACpBlS,EAAGmS,mBAAoB,EAEvBnS,EAAGoS,gBAAaz8B,EAChBqqB,EAAGqS,mBAAoB,EAEvBrS,EAAGsS,WAAY,EAEftS,EAAGuS,cAAW58B,EAEdqqB,EAAGwS,UAAY,IAAIC,gBAAgBptB,OAAOC,SAASotB,QAEnD1S,EAAG2S,eAGH3S,EAAG4S,YAAiB,GACpB5S,EAAG6S,oBAAiBl9B,EAEpBqqB,EAAG8S,WAAgB,CAAC,IAAM,IAC1B9S,EAAG+S,cAAgB,GAEnB/8B,KAAKyzB,UAGLzzB,KAAKgK,GAAG,aAAc,SAACtI,GACnBsoB,EAAGgT,eAAe,aAAat7B,KAI/Bu7B,IAAAA,EAAQj9B,KAAKgqB,GAAGwS,UAAUU,IAAI,KAC9BD,GAASA,EAAM,GAAKj9B,KAAKm9B,uBAAuBF,IAGxDjT,eAAoB,WACZA,EAAGsS,YAEPtS,EAAGsS,WAAY,OAEU38B,IAArBK,KAAKiG,IAAIga,QAKbjgB,KAAKiG,IAAIylB,YAAY,IAJjB1rB,KAAKiG,IAAIm3B,6BAA6B,MAW9CpT,qBAA0B,WACtBhqB,KAAKgK,GAAG,mBAAoB,WAAM6G,EAAE,aAAa/N,SAEjD9C,KAAKgK,GAAG,kBAAkB,WAClBhK,KAAKoX,SAASimB,kBAAkBxsB,EAAE,aAAa/N,YAC1BnD,IAArBK,KAAKiG,IAAIga,SAAuBjgB,KAAKiG,IAAIylB,YAAY,MAG7D1rB,KAAKgK,GAAG,2BAA4B,WAChC6G,EAAE,aAAahO,OAEfmnB,EAAGsT,wBACCt9B,KAAKiG,IAAIosB,WAAWryB,KAAKsb,IAAIkH,kBAAmBwH,EAAG+S,eAEvD/S,EAAGuT,mBAGPv9B,KAAKgK,GAAG,QAASggB,EAAGwT,UAGxBxT,aAAkB,SAACtoB,GACfsoB,EAAGkS,eAAiBx6B,EACpB1B,KAAKiG,IAAI6a,gBAAgBpf,IAG7BsoB,qBAA0B,SAACtoB,GACvBsoB,EAAGmS,kBAAoBz6B,EACvB1B,KAAKmyB,aAAezwB,EACpB1B,KAAKiG,IAAI6a,gBAAgBpf,IAG7BsoB,6BAAkC,SAAC3mB,QACrB1D,IAAN0D,IAAiBA,EAAI,IAEzBrD,KAAKgK,GAAG,aAAc,SAAC/F,GAEfjE,GAAAA,KAAKy9B,UAAU,CACXC,IAAAA,EAAK19B,KAAKiG,IAAI03B,SAMlB,OAJI15B,EAAI,EAAKy5B,GAAM,EACdA,GAAM,OAEX19B,KAAKiG,IAAI4V,OAAO6hB,GAIhB19B,GAAAA,KAAK49B,WAAW,CACZpf,IAAAA,EAAIxe,KAAKsb,IAAImT,aAAa9oB,MAAMT,EASpC,OAPIjB,EAAI,EAAKua,GAAKnb,EACbmb,GAAKnb,EAENmb,EAAIwL,EAAG8S,WAAW,KAAIte,EAAIwL,EAAG8S,WAAW,IACxCte,EAAIwL,EAAG8S,WAAW,KAAIte,EAAIwL,EAAG8S,WAAW,SAE5C98B,KAAKsb,IAAIkH,kBAAkBhE,OAYvCwL,YAAiB,SAACnS,GACVA,QAAQlY,IAARkY,EAAAA,CAEAgmB,IAAAA,EAAS79B,KAAK89B,mBAAqBjmB,EAGvC7X,KAAKoX,SAAS9P,KAAKu2B,EAAQhmB,GAE3BhH,EAAE,6BAA6BktB,KAAK,UAAW/9B,KAAKg+B,YAAYnmB,EAAI,cACpEhH,EAAE,0CAA0CktB,KAAK,UAAW/9B,KAAKg+B,YAAYnmB,EAAI,cACjFhH,EAAE,oCAAoCktB,KAAK,UAAW,aACtDltB,EAAE,qCAAqCktB,KAAK,UAAW,OACvDltB,EAAE,sCAAsCktB,KAAK,UAAW,OAExDj3B,QAAQC,IAAI82B,KAGhB7T,QAAa,WACLA,GAAAA,EAAGkS,eAAe,CACd12B,IAAAA,EAAKxF,KAAK0iB,qBAAqBxd,EAC/BO,EAAKzF,KAAK0iB,qBAAqBvd,EAG/B6vB,EAAI,IAAI/1B,MAAMyE,QAClBsxB,EAAE9vB,GAAK+J,KAAKiQ,IAAI1Z,EAAKyJ,KAAKkI,IAC1B6d,EAAE7vB,EAAU,GAALM,EACPuvB,EAAE5vB,GAAK6J,KAAKgvB,IAAIz4B,EAAKyJ,KAAKkI,IAE1B6d,EAAEzQ,YAEFvkB,KAAK8Z,sBAAsBkb,GAI3BhL,GAAAA,EAAGmS,kBAAkB,CAEjB94B,IAAAA,EAAIrD,KAAK0iB,qBAAqBvd,EAE9BqZ,EAAIxe,KAAKsb,IAAImT,aAAa9oB,MAAMT,GACpCsZ,GAAKnb,GACG,MAAQrD,KAAKsb,IAAIkH,kBAAkBhE,KAQnDwL,aAAkB,WACdA,EAAGkU,YAAY,eAAe,aAAcl+B,KAAKm+B,kBAC7Cn+B,KAAK0C,MAAM07B,sBAAsBpU,EAAGkU,YAAY,eAAe,KAAMl+B,KAAKohB,GAAGid,QAEjFrU,EAAGkU,YAAY,kBAAkB,OAAQ,WAAMl+B,KAAKiG,IAAIylB,YAAY,OAGxE1B,aAAkB,WACdnZ,EAAE,YAAY2D,MAAOwV,EAAGsU,YACxBztB,EAAE,aAAa0tB,KAAK,aAAav+B,KAAKmN,SAAS,iBAUnD6c,YAAiB,SAACwU,EAAaC,EAAMC,EAASC,GACtCC,IAAAA,EACAC,EAEAJ,EAAKK,SAAS,SACdF,EAAUH,EACVI,EAAUJ,EAAKM,MAAM,GAAG,KAGxBH,EAAU5U,EAAG8R,eAAe2C,EAAK,OACjCI,EAAUJ,GAGVO,IAEAC,EAAKpuB,EAAE,aAFA,OAAOguB,GAEU,gCAAgCD,EAAQ,YAEpE/tB,EAAE,IAAI2tB,GAAavG,OAAOgH,GAEtBP,GAASO,EAAGzqB,MAAOkqB,GACnBC,GAASM,EAAGlB,KAAK,QAASY,IAGlC3U,eAAoB,SAAC6U,EAAQn9B,GACrBA,EAAGmP,EAAE,QAAQguB,GAAQK,SAAS,cAC7BruB,EAAE,QAAQguB,GAAQM,YAAY,eAOvCnV,gBAAqB,SAACwU,GAClBxU,EAAGkU,YAAYM,EAAa,OAAQ,WAChCx+B,KAAKiG,IAAIylB,YAAY,KACtB,mBAOP1B,uBAA4B,SAACwU,GACzBxU,EAAGkU,YAAYM,EAAa,KAAM,WAC1Bx+B,KAAKiG,IAAIm5B,iBACTp/B,KAAKiG,IAAI2Z,kBAEToK,EAAGgT,eAAe,MAAK,KAGvBh9B,KAAKiG,IAAIib,wBACT8I,EAAGgT,eAAe,MAAK,KAE5B,gCAECh9B,KAAKiG,IAAIm5B,gBAAiBpV,EAAGgT,eAAe,MAAK,GAChDhT,EAAGgT,eAAe,MAAK,IAOhChT,cAAmB,SAACwU,GACXx+B,KAAK0C,MAAM07B,sBAKhBpU,EAAGkU,YAAYM,EAAa,KAAMx+B,KAAKohB,GAAGid,OAAQ,sBAOtDrU,6BAAkC,SAACwU,GAC1Bx+B,KAAK0C,MAAM07B,sBACXp+B,KAAK0C,MAAM+M,aAEhBua,EAAGkU,YAAYM,EAAY,SAAU,WAC7Bx+B,KAAKiG,IAAIo5B,YAETr/B,KAAKiG,IAAIq5B,yBACTtV,EAAGgT,eAAe,UAAS,KAG3Bh9B,KAAKiG,IAAIkb,8BACT6I,EAAGgT,eAAe,UAAS,KAEhC,2BAECh9B,KAAKiG,IAAIo5B,WAAYrV,EAAGgT,eAAe,UAAS,GAC/ChT,EAAGgT,eAAe,UAAS,KAOpChT,eAAoB,SAACwU,GACjBxU,EAAGkU,YAAYM,EAAY,MAAO,WAC9BxU,EAAGuV,YACJ,eAOPvV,gBAAqB,SAACwU,GACbx+B,KAAK0C,MAAM07B,uBAEhBpU,EAAGkU,YAAYM,EAAa,OAAQ,WAC5Bx+B,KAAK8qB,SAAS0U,oBACdx/B,KAAK8qB,SAASC,qBAEdla,EAAE,aAAasuB,YAAY,iBAG3Bn/B,KAAK8qB,SAAS2U,sBAEd5uB,EAAE,aAAaquB,SAAS,iBAE7B,eAECl/B,KAAK8qB,SAAS0U,mBAAoB3uB,EAAE,aAAaquB,SAAS,eACzDruB,EAAE,aAAasuB,YAAY,iBAOpCnV,uBAA4B,SAACwU,GAEzBxU,EAAGkU,YAAYM,EAAa,QAAS,WAC7Bx+B,KAAKyK,UAAU8nB,eACfvyB,KAAKyK,UAAU8uB,mBAAkB,GACjC1oB,EAAE,cAAcsuB,YAAY,iBAG5Bn/B,KAAKyK,UAAU8uB,mBAAkB,GACjC1oB,EAAE,cAAcquB,SAAS,iBAE9B,0BAECl/B,KAAKyK,UAAU8nB,cAAe1hB,EAAE,cAAcquB,SAAS,eACtDruB,EAAE,cAAcsuB,YAAY,gBAOrCnV,cAAmB,SAACwU,GAChBxU,EAAGkU,YAAYM,EAAY,KAAMxU,EAAG0V,QAAS,YAOjD1V,gBAAqB,SAACwU,GAClBxU,EAAGkU,YAAYM,EAAa,OAAQx+B,KAAKgqB,GAAG2V,eAAgB,qBAC5D9uB,EAAE,aAAahO,QAOnBmnB,sBAA2B,SAACwU,GACxBxU,EAAGkU,YAAYM,EAAa,aAAc,WACtCx+B,KAAKm+B,oBACN,cAEHnU,EAAGgT,eAAe,aAAch9B,KAAK4/B,iBAIzC5V,kBAAuB,SAACX,GAEb,MAAA,WADEA,EAAI,GAQjBW,eAAoB,SAACwU,GACjBxU,EAAGkU,YAAYM,EAAa,MAAO,WAC3Bx+B,KAAKyK,UAAU2sB,cACfpN,EAAG6V,WAGH7/B,KAAKyK,UAAU0c,QAAQ6C,EAAGuS,WAE/B,qCAEH1rB,EAAE,YAAYonB,OAAO,2DAKrBj4B,KAAKgK,GAAG,iBAAkB,SAACqf,GACvBxY,EAAE,YAAYquB,SAAUlV,EAAG8V,kBAAkBzW,IAI7CrpB,KAAKsb,IAAI6U,iBAAiBnwB,KAAKyK,UAAU+pB,QAAQnL,EAAI,IAErDW,EAAG+V,UAAU,SAACx4B,QACU5H,IAAhB4H,EAAKorB,UAAkE3yB,KAAKyK,UAAUutB,YAAYzwB,EAAKorB,cAInH3yB,KAAKgK,GAAG,iBAAkB,SAACg2B,GACnB1H,IAAAA,EAAWt4B,KAAKyK,UAAUgsB,cAC1B6B,EAAS,EAAGznB,EAAE,kBAAkB0tB,KAAKjG,GACpCznB,EAAE,kBAAkB0tB,KAAK,IAE9Bz3B,QAAQC,IAAI,UAAUuxB,KAc1Bt4B,KAAKgK,GAAG,mBAAoB,WACxB6G,EAAE,YAAYktB,KAAK,QAAQ,WAG3B/9B,KAAKsb,IAAI6U,iBAAiBnwB,KAAK4K,OAAOE,OAAOiB,OAE7C8E,EAAE,kBAAkB0tB,KAAK,WAGF5+B,IAAvBK,KAAKyK,UAAU4e,IAAmBxY,EAAE,YAAYquB,SAAUlV,EAAG8V,kBAAkB9/B,KAAKyK,UAAU4e,MAC7FxY,EAAE,YAAYktB,KAAK,QAAQ,YAOpC/T,gBAAqB,SAACwU,GAClBxU,EAAGkU,YAAYM,EAAa,OAAQ,WAChCxU,EAAGiW,aACJ,QAEHjW,EAAG+V,UAAU,SAACvhB,QACS7e,IAAf6e,EAAEmU,SAAwB9hB,EAAE,aAAaquB,SAAS,cACjDruB,EAAE,aAAasuB,YAAY,iBAQxCnV,oBAAyB,SAACwU,GACtBxU,EAAGkU,YAAYM,EAAa,OAAQ,WAChCxU,EAAG+V,UAAU,SAACx4B,QACY5H,IAAlB4H,EAAKorB,UACL3yB,KAAKoX,SAASG,QAAUvX,KAAKoX,SAASG,OACtCyS,EAAGgT,eAAe,OAAOh9B,KAAKoX,SAASG,SAIvCyS,EAAGiW,iBAWnBjW,aAAkB,SAAC7qB,EAAI+gC,GACO,mBAAfA,IAEXlW,EAAG4S,YAAYz9B,GAAM+gC,IAOzBlW,cAAmB,SAAC7qB,GACZkE,IAAAA,EAAI2mB,EAAG4S,YAAYz9B,QACbQ,IAAN0D,IAEJA,IACA2mB,EAAG6S,eAAiB19B,EACpB2H,QAAQC,IAAI,sBAAsBijB,EAAG6S,kBAGzC7S,sBAA2B,SAACmW,EAAUr4B,QACxBnI,IAANmI,GAEJ+I,EAAE,IAAIsvB,GAAU3rB,MAAM,WAAM1M,OAIhCkiB,sBAA2B,SAACoW,GACxBvvB,EAAE,IAAIuvB,GAASp2B,GAAG,qBAAsB,WAChCmB,IAAAA,EAAQ0F,EAAE,IAAIuvB,GAASC,MACvBC,EAAa,IAAIC,OAAO,iBAAkB,MAC9C1vB,EAAE,IAAIuvB,GAASC,IAAKl1B,EAAM0I,QAAQysB,EAAY,QAMtDtW,WAAgB,SAACxoB,EAAK2J,EAAO/L,GACrBwF,IAAAA,OAAIjF,OAKEA,KAHoBiF,EAA1BxF,IAASY,KAAKC,OAAOO,IAASR,KAAKmY,gBAAgB3W,GAC9CxB,KAAKoY,aAAa5W,MAI3BoD,EAAEy5B,OAAOlzB,GAETnL,KAAKiK,UAAU,gBAAiB,CAACzI,IAAKA,EAAKqF,EAAGzH,EAAMmU,EAAGpI,MAK3D6e,cAAmB,SAAC5qB,GACZkZ,IAAAA,EAAQtY,KAAKO,OACbnB,IAASY,KAAKC,OAAOO,MAAK8X,EAAQtY,KAAKU,UAEvC8/B,IAAAA,EAAc,GACb,IAAA,IAAIh/B,KAAO8W,EAAM,CACd1T,IAEA67B,EAFInoB,EAAM9W,GAEFiB,QAAS,UAAY,GACrB,MAARjB,IAAag/B,GAAe,0BAA0BC,EAAI,mCAAmCj/B,EAAI,kBAAkBpC,EAAK,OAAQoC,EAAI,QAGrIg/B,OAAAA,GAGXxW,mBAAwB,WACpBA,EAAG0W,MAAQ,GAEX1W,EAAG0W,MAAMC,OAAS,IAAI7hB,MAAM9e,KAAKmN,SAAS,oBAC1C6c,EAAG0W,MAAMC,OAAO9lB,MAAO,GAG3BmP,0BAA+B,SAACvR,GAExBA,QAAU9Y,IAAV8Y,EAAAA,CAEAC,IAAAA,EAAI1Y,KAAKmY,gBAAgBM,GACzBC,QAAM/Y,IAAN+Y,EAAAA,CAEAnW,IAAAA,EAAKmW,EAAEkoB,gBACAjhC,IAAP4C,SAEkB5C,IAAlBqqB,EAAGoS,YAA8C,OAAlBpS,EAAGoS,WAAqBpS,EAAGoS,WAAa,IAAIn9B,MAAM6f,MAAO9e,KAAKye,SAASC,WACrGsL,EAAGoS,WAAWtD,OAEnB94B,KAAKye,SAAS1T,QAAQzD,KAAM/E,EAAI,SAACsS,GAC7BmV,EAAGoS,WAAWrd,UAAWlK,GACzBmV,EAAGoS,WAAWrD,SAAS,GAGvB/O,EAAGoS,WAAWpd,aA0BtBgL,UAAe,SAACwW,EAAaK,GACrB7W,GAAAA,EAAG+R,QAAS,OAAO,EAEnB+E,IAAAA,EAAQ,aACRD,IAAYC,GAASD,GAErBE,IAAAA,EAAS,mCAAmCD,EAAM,KAyB/C,OAxBPC,GAAUP,EAAY,SAEtB3vB,EAAE,YAAY0tB,KAAKwC,GACnBlwB,EAAE,mBAAmB2D,MAAM,SAAC4W,GAAMA,EAAE4V,oBACpCnwB,EAAE,YAAYowB,OAAOjX,EAAGkX,aAExBlX,EAAG+R,SAAU,EAEb/7B,KAAKmhC,wBAAyB,EAE1BnX,EAAGgS,YAAc,IACjBh8B,KAAK0J,UAAU03B,cAAepX,EAAGgS,aACjCh8B,KAAK0J,UAAUqM,OAAQ/V,KAAKgW,UAAWhW,KAAKiG,IAAI0P,UAGpD3V,KAAKmyB,cAAe,EAIpBthB,EAAE,iBAAiBhO,OACnBgO,EAAE,oBAAoBhO,OACtBgO,EAAE,qBAAqBhO,OACvBgO,EAAE,gBAAgBhO,QAEX,GAMXmnB,WAAgB,SAACqX,GACbrX,EAAG+R,SAAU,EAGb/7B,KAAKmhC,wBAAyB,EAE1BnX,EAAGgS,YAAc,GAAKh8B,KAAKshC,qBAEf,IAAZD,EAAkBxwB,EAAE,YAAYhO,OAC/BgO,EAAE,YAAY0wB,QAAQvX,EAAGkX,aAG9BlhC,KAAKmyB,cAAe,EAEpBthB,EAAE,iBAAiB/N,OACnB+N,EAAE,oBAAoB/N,OACtB+N,EAAE,qBAAqB/N,OACvB+N,EAAE,gBAAgB/N,OAElB9C,KAAKwhC,iBAGTxX,SAAc,SAAEyX,GACZzhC,KAAKgqB,GAAGsU,aACRoD,WAAYD,EAAWzhC,KAAKgqB,GAAGkX,cAGnClX,QAAa,WAIJ,GAFU,4DAEThqB,KAAKgqB,GAAG2X,UAFdnB,oGAEK,CAEDj6B,IAAAA,EAAM8I,OAAOC,SAASC,KACtBqyB,IAAAA,OAAOlzB,SAASmzB,eAAe,YAAat7B,KAGpDyjB,gBAAqB,WACb8X,IAAAA,EAAQ9hC,KAAK0C,MAAMq/B,eAAe,KAEtC/X,EAAG+V,UAAU,SAACvhB,GAENgiB,IAAAA,EAAc,+CAClBA,GAAe,oEACfA,GAAe,aAAasB,EAAM1rB,IAAI,SACtCoqB,GAAe,2FAEfA,GAAe,qFAAqFxW,EAAG8R,eAAe,6BAEnGn8B,IAAf6e,EAAEmU,WACF6N,GAAe,4FAQbxgC,KAAKgqB,GAAG2X,UAAUnB,KAExB3vB,EAAE,kBAAkB2D,MAAM,WACtBxU,KAAKgqB,GAAGsU,aAEJj8B,IAAAA,EAAI2/B,SAAUnxB,EAAE,eAAewvB,OACzBrgC,KAAK0C,MAAMq/B,eAAe1/B,EAAE,cAG1CwO,EAAE,gBAAgB2D,MAAM,WACpBxU,KAAKgqB,GAAGsU,aAERt+B,KAAK0C,MAAMu/B,SAASjiC,KAAK0T,aAAa,eAAgB,CAACmE,IAAK7X,KAAKoX,SAASC,OAAQ5B,IAAKqsB,EAAM1rB,KAAO,SAACoI,GACjG1X,QAAQC,IAAIyX,WAO5BwL,SAAc,WACNwW,IAAAA,EAAc,GACdlI,EAAWt4B,KAAKyK,UAAUgsB,cAEd+J,GAAZlI,EAAS,EAAkB,sDAAsDA,EAAS,gBAC1E,0DAIpBkI,GAAe,kGACfA,GAAe,gFAAgFxgC,KAAKyK,UAAUurB,UAAU,SAExHwK,GAAe,oGAGfA,GAAe,+EAGfA,GAAe,0EAETxgC,KAAKgqB,GAAG2X,UAAUnB,EAAa,yBAEJ7gC,IAA7BK,KAAKyK,UAAUurB,WACfnlB,EAAE,kBAAkB/N,OACpB+N,EAAE,qBAAqBhO,SAGvBgO,EAAE,kBAAkBwvB,IAAIrgC,KAAKyK,UAAUurB,WACvCnlB,EAAE,kBAAkBhO,OACpBgO,EAAE,qBAAqB/N,aAGAnD,IAAvBK,KAAKyK,UAAU4e,KAAmBxY,EAAE,qBAAqBquB,SAAS,WAAYl/B,KAAKyK,UAAU4e,IAAM,GAEvGxY,EAAE,cAAconB,OAAOj4B,KAAKyK,UAAU+rB,SAEtC3lB,EAAE,aAAaqxB,SAAS,SAAC9W,GAEjB+W,GAAW,OADA/W,EAAEgX,QAAUhX,EAAEgX,QAAUhX,EAAEiX,OACrB,CACZzuB,IAAAA,EAAM/C,EAAE,aAAawvB,MACzBrgC,KAAKyK,UAAUytB,WAAYtkB,GAC3B/C,EAAE,aAAawvB,IAAI,OAK3BxvB,EAAE,kBAAkBqxB,SAAS,SAAC9W,GAEtB+W,GAAW,OADA/W,EAAEgX,QAAUhX,EAAEgX,QAAUhX,EAAEiX,OACrB,CACZzuB,IAAAA,EAAM/C,EAAE,kBAAkBwvB,MAC9BrgC,KAAKyK,UAAUutB,YAAapkB,GAE5B/C,EAAE,kBAAkBhO,OACpBgO,EAAE,qBAAqB0tB,KAAKv+B,KAAKyK,UAAUurB,WAC3CnlB,EAAE,qBAAqB/N,UAI/B+N,EAAE,qBAAqB2D,MAAM,WACzB3D,EAAE,kBAAkB/N,OACpB+N,EAAE,qBAAqBhO,SAG3BgO,EAAE,oBAAoB2D,MAAM,WACxBxU,KAAKyK,UAAU2c,aACfpnB,KAAKgqB,GAAGsU,iBAMhBtU,UAAe,SAACrZ,GACZ3Q,KAAK0C,MAAMq9B,UAAU,SAACx4B,GAClByiB,EAAGiS,UAAY10B,OAGO5H,IAAlB4H,EAAKorB,UACL9hB,EAAE,aAAaquB,SAAS,mBACSv/B,IAA7BK,KAAKyK,UAAUurB,WAAyBh2B,KAAKyK,UAAUutB,YAAYzwB,EAAKorB,WAG5E9hB,EAAE,aAAasuB,YAAY,cAG3BxuB,GAAWA,EAAUpJ,MA8BjCyiB,UAAe,WAEXA,EAAG+V,UAAU,SAACvhB,GAGNA,QAAe7e,IAAf6e,EAAEmU,SAAuB,CACrB6N,IAAAA,EAAc,aAAaxW,EAAG8R,eAAe,iBAG7CwG,GAFJ9B,GAAe,OAAOhiB,EAAEmU,SAAS,gBAE7B2P,OAAOC,KAAKvY,EAAG4S,aAAa,CAGvB,IAAA,IAAI4F,KAFThC,GAAe,qFAECxW,EAAG4S,YACf4D,GAAe,kBAAkBgC,EAAI,KAAKA,EAAI,YAElDhC,GAAe,yDAKd,GAFLA,GAAe,oFAETxgC,KAAKgqB,GAAG2X,UAAUnB,GAAe,OAEnCxW,EAAG6S,iBACH/1B,QAAQC,IAAIijB,EAAG6S,gBACfhsB,EAAE,iBAAiBwvB,IAAIrW,EAAG6S,iBAG9BhsB,EAAE,gBAAgB2D,MAAM,WACpB3D,EAAEqsB,IAAIl9B,KAAK0T,aAAa,SAAU,SAAC8K,GAC/B1X,QAAQC,IAAIyX,GACZxe,KAAKoX,SAASqrB,aAAY,GAC1BziC,KAAKiK,UAAU,UACf4G,EAAE,aAAasuB,YAAY,gBAG/Bn/B,KAAKgqB,GAAGsU,eAGZztB,EAAE,gBAAgB2D,MAAM,WACpBxU,KAAK0C,MAAMggC,QAAQ,kBAEvB7xB,EAAE,cAAc2D,MAAM,WAClBxU,KAAK0C,MAAMggC,QAAQ,gBAGvB7xB,EAAE,iBAAiB7G,GAAG,SAAU,WACxBw4B,IAAAA,EAAM3xB,EAAE,iBAAiBwvB,MAC7BrW,EAAG2Y,cAAcH,GACjBxiC,KAAKgqB,GAAGsU,mBAMX,CACGkC,IAAAA,EAAc,aAAaxW,EAAG8R,eAAe,iBAM5C,GALL0E,GAAe,6EACfA,GAAe,iFAEfA,GAAe,oFAETxgC,KAAKgqB,GAAG2X,UAAUnB,GAAe,OAEvC3vB,EAAE,eAAe2D,MAAM,WACf+J,IAAAA,EAAOtN,KAAKC,UAAU,CACtByhB,SAAU9hB,EAAE,eAAewvB,MAC3BuC,SAAU/xB,EAAE,eAAewvB,QAG/BxvB,EAAEC,KAAK,CACHvK,IAAKvG,KAAK0T,aAAa,QACvBtU,KAAK,OACLmI,KAAMgX,EACNpN,YAAY,kCACZC,SAAS,OAETC,QAAS,SAACmN,GACN1X,QAAQC,IAAIyX,GACRA,IACAxe,KAAKiK,UAAU,QAASuU,GACxB3N,EAAE,aAAaquB,SAAS,cACxBl/B,KAAKgqB,GAAGsU,iBAIjBhtB,KAAK,SAAC3J,GAELkJ,EAAE,eAAe0tB,KAAK,gBACtB1tB,EAAE,eAAektB,KAAK,QAAQ,+BAwBlD/T,eAAoB,WACZ6Y,IAAAA,EAAO7iC,KAAKoX,SAAS0rB,gBACZnjC,IAATkjC,IAAoBA,EAAO7iC,KAAKoX,SAASC,QAEzC8B,IAAAA,EAAQnZ,KAAKoX,SAASimB,iBAEtBmD,EAAc,+BAA+BqC,EAAK,SAClD1pB,IAAOqnB,GAAe,8CAAgDvvB,KAAKiE,MAAMiE,GAAS,UAE9FqnB,GAAe,2EAETxgC,KAAKgqB,GAAG2X,UAAUnB,IAExB3vB,EAAE,UAAU2D,MAAM,WACdxU,KAAKgqB,GAAGsU,gBAIhBtU,sBAA2B,WACnB3E,IACA7G,EADUxe,KAAKslB,eAAeP,WAClBF,OAEZrG,GAAK,IAETwL,EAAG8S,WAAW,GAAS,KAAJte,EACnBwL,EAAG+S,cAAoB,IAAJve,EACnBwL,EAAG8S,WAAW,GAAS,GAAJte,IAKvBwL,cAAmB,WACXwW,IAAAA,EAAc,gDAEduC,EAAM/iC,KAAKsb,IAAIiH,oBACfygB,EAAKhjC,KAAK0C,MAAMmvB,yBAA0BkR,GAE9C/Y,EAAGsT,wBAEHkD,GAAe,kCAAkCwC,EAAG,gBACpDxC,GAAe,0CAA0CxW,EAAG8S,WAAW,GAAG,UAAU9S,EAAG8S,WAAW,GAAG,WAAW9S,EAAG8S,WAAW,GAAG,uBAE3H98B,KAAKgqB,GAAG2X,UAAUnB,EAAa,oBAErC3vB,EAAE,aAAawvB,IAAI0C,GAEnBlyB,EAAE,aAAa7G,GAAG,eAAe,WACzBwU,IAAAA,EAAIlL,WAAYzC,EAAE,aAAawvB,OAEnCrgC,KAAKsb,IAAIkH,kBAAkBhE,GAC3B3N,EAAE,gBAAgB0tB,KAAMv+B,KAAK0C,MAAMmvB,yBAAyBrT,QAIpEwL,SAAc,WACNwW,IAAAA,EAAc,+CAIlBA,GAAe,8EACfA,GAAc,+EACdA,GAAc,2FACdA,GAAe,SAEXxgC,KAAK0C,MAAM07B,uBACXoC,GAAe,8EACfA,GAAc,+EACdA,GAAc,uDACdA,GAAe,SAEXxgC,KAAK0C,MAAM+M,aACX+wB,GAAe,8EACfA,GAAc,mFACdA,GAAc,+EACdA,GAAe,WAIjBxW,EAAG2X,UAAUnB,KAEnBxW,EAAGiZ,uBAAuB,UAC1BjZ,EAAGkZ,6BAA6B,cAChClZ,EAAGmZ,cAAc,aAINnZ,EAAAA,EAAAA,QAAAA,QAAAA;;AChwBAc,aAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,MAAAA,GAAAA,YAAAA,EAAAA,GAAAA,EAAAA,KAAAA,EAAAA,GAAAA,QAAAA,QAAAA,GAAAA,KAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,WAAAA,IAAAA,EAAAA,KAAAA,EAAAA,UAAAA,OAAAA,IAAAA,QAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,MAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,GAAAA,SAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,QAAAA,GAAAA,OAAAA,MAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA3Qf,IAAIA,EAAW,CACfA,OAAkB,YAClBA,MAAkB,OAIlBA,gBAA4B,IAC5BA,iBAA4B,IAC5BA,SAAoB,EAGpBA,KAAgB,WACZA,EAASsY,kBAAmB,EAC5BtY,EAASuY,aAAc,EAEvBvY,EAASwY,cAAW3jC,GAGxBmrB,qBAAgC,SAAEtkB,GAC1BskB,QAAsBnrB,IAAtBmrB,EAASwY,SACTxY,EAASwY,SAASC,QACd/8B,GAAYA,QAIf,CACG,IAACxG,KAAK0C,MAAM07B,qBAAsB,OAClC,IAACzuB,UAAU6zB,aAAc,YAER7jC,IAAjBmrB,EAAS2Y,MAAmB3Y,EAAS2Y,IAAMrN,YAAatL,EAAS4Y,aAAc5Y,EAAS6Y,mBAEnFh0B,UAAU6zB,aAAaI,aAAa,CACzCC,OAAO,EACPrhC,OAAO,EACPshC,aAAc,EACdC,kBAAkB,IAGnBp9B,KAAH,WAAQ,IAAA,EAAA,EAAA,mBAAA,KAAA,SAAeq9B,EAAAA,GAAf,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACJlZ,EAASwY,SAAWW,UAAUD,EAAQ,CAClC5kC,KAAM,QACN8kC,SAAUpZ,EAASqZ,OAEnBC,cAAetZ,EAASuZ,gBACxBC,mBAAoBxZ,EAASuZ,gBAE7BE,WAAY,MACZC,gBAAiB,MAEjBC,aAAa,EAGbC,sBAAuB,IA6CvBl+B,GAAYA,IA3DZ,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,MAAR,OAAA,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,MAgERskB,iBAA4B,WACjBA,OAAAA,EAASsY,kBAIpBtY,gBAA2B,SAAE6Z,QACChlC,IAAtBmrB,EAASwY,SAKbxY,EAASwY,SAASsB,cAAc,WAgB5B9Z,EAASwY,SAASuB,WAAW,SAACC,GAErB9kC,KAAKyK,UAAUqrB,aAAiCn2B,IAAvBK,KAAKyK,UAAU4e,KAK7CrpB,KAAKyK,UAAUqrB,OAAOiP,UAAS,GAAO9N,KAAK,QAAS,CAChDz0B,MAAOsiC,EACPzb,IAAKrpB,KAAKyK,UAAU4e,MAIpBsb,GAAUA,KAVNA,GAAUA,QAvBlBA,GAAUA,KAmDtB7Z,UAAqB,SAACka,GACbA,GACAhlC,KAAKyK,UAAUqrB,QAKpB91B,KAAKyK,UAAUqrB,OAAOmB,KAAK,QAAS,CAChC7iB,KAAM4wB,EACN3b,IAAKrpB,KAAKyK,UAAU4e,IACpBwL,IAAK/J,EAASma,gBAKtBna,eAA0B,WACtBA,EAASoa,qBAAqB,WAErBpa,EAASwY,WACVxY,EAASsY,mBAEbt8B,QAAQC,IAAI,gBAEZ+jB,EAASwY,SAAS6B,iBAClBra,EAASsY,kBAAmB,OAIpCtY,cAAyB,WAChBA,EAASwY,UAEdxY,EAASwY,SAASsB,cAAc,WACxBI,IAAAA,EAAQla,EAASwY,SAAS8B,UAI9Bt+B,QAAQC,IAAI,mBAERs+B,IAAAA,EAAS,IAAIC,WACjBD,EAAOE,cAAcP,GACrBK,EAAOG,UAAY,WACXC,IAAAA,EAAaJ,EAAOK,OAExB1lC,KAAKiK,UAAU,uBAAwBw7B,IAG3C3a,EAASsY,kBAAmB,KAIpCtY,qBAAgC,WACxBA,EAASsY,iBAAkBtY,EAAS8Z,gBACnC9Z,EAASqa,kBAGlBra,aAAwB,WACfA,EAASwY,UACTxY,EAASuY,aAEdvY,EAAS6a,gBAAgB,WACrB7a,EAASwY,SAAS6B,oBAK1Bra,oBAA+B,WAC3BA,EAASoa,qBAAqB,WACrBpa,EAASwY,WACVxY,EAASsY,mBAGbt8B,QAAQC,IAAI,wBAEZ+jB,EAASwY,SAAS6B,iBAClBra,EAASsY,kBAAmB,EAC5BtY,EAASuY,aAAc,OAK/BvY,mBAA8B,WACrBA,EAASwY,UACTxY,EAASsY,mBAEdt8B,QAAQC,IAAI,uBAEZ+jB,EAAS6a,gBAAgB,cAKzB7a,EAASuY,aAAc,EACvBvY,EAASsY,kBAAmB,IAUhCtY,0BAAqC,WAC7BA,EAASsY,iBAAkBtY,EAASC,qBACnCD,EAAS2U,wBAGH3U,EAAAA,EAAAA,QAAAA,QAAAA;;AC1CA8a,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA/Nf,IAAIA,EAAS,CAGbA,WAAoB,MACpBA,EAAOC,WAAiC,EAApBD,EAAOE,WAG3BF,EAAOpX,KAAO,WACVoX,EAAOG,UAAW,EAElBH,EAAOI,WAAQrmC,EACfimC,EAAO1hB,SAAW,IAAIjlB,MAAMgnC,QAG5BL,EAAOM,MAAQ,GACfN,EAAOO,cAAWxmC,EAClBimC,EAAOQ,iBAAczmC,EAErBimC,EAAOS,UAAY,IAMvBT,EAAOU,eAAiB,WAChBV,EAAOG,UACN/lC,KAAK0C,MAAM07B,sBACXzuB,UAAU42B,cAEfX,EAAOI,MAAQr2B,UAAU42B,YAAYC,cACjCZ,EAAOa,YACPb,EAAOc,SACP,CACIC,oBAAoB,IAQ5Bf,EAAOG,UAAW,IAMtBH,EAAOgB,gBAAkB,WAChBhB,EAAOG,WAEZp2B,UAAU42B,YAAYM,WAAWjB,EAAOI,OACxCJ,EAAOG,UAAW,IAOtBH,EAAOkB,YAAc,SAACtoB,GACdA,EAAI,IAAKonB,EAAOS,UAAY7nB,IAGpConB,EAAOc,SAAW,WACd5/B,QAAQC,IAAI,sBAGhB6+B,EAAOa,YAAc,SAACtiC,GACd,GAACyhC,EAAOG,UACP5hC,EAAI4iC,OAAL,CAGAC,IAAAA,EAAM7iC,EAAI4iC,OAAOE,SACjBD,GAAOA,EAAMpB,EAAOS,YAGxBT,EAAO1hB,SAAShf,EAAIf,EAAI4iC,OAAOG,SAC/BtB,EAAO1hB,SAAS/e,EAAIhB,EAAI4iC,OAAOI,UAK/BnnC,KAAKiK,UAAU,cAAe9F,GAE9ByhC,EAAOwB,iBAGXxB,EAAOwB,YAAc,WACbC,IAAAA,EAAUzB,EAAOM,MAAMlkC,OACvBqlC,KAAAA,GAAW,GAAXA,CAEJzB,EAAO0B,qBAAkB3nC,EACzBimC,EAAOQ,iBAAczmC,EAEhB,IAAA,IAAIqE,EAAE,EAAGA,EAAEqjC,EAASrjC,IAAI,CACrBujC,IAAAA,EAAM3B,EAAOM,MAAMliC,GAEnBC,EAAI2hC,EAAO4B,SAAS5B,EAAO1hB,SAAUqjB,EAAIpjC,WAEdxE,IAA3BimC,EAAO0B,iBAAiCrjC,EAAI2hC,EAAO0B,mBACnD1B,EAAO0B,gBAAkBrjC,EACzB2hC,EAAOQ,YAAkBpiC,GAMzBC,GAAKsjC,EAAI1iB,QACL+gB,EAAOO,WAAaniC,GACpBhE,KAAKiK,UAAU,WAAY,CAAE9K,GAAI6E,EAAGwjC,SAAUvjC,IAGlD2hC,EAAOO,SAAWniC,SAIMrE,IAApBimC,EAAOO,UAAwBnmC,KAAKiK,UAAU,WAAY,CAAE9K,GAAIymC,EAAOO,SAAUqB,SAAUvjC,IAC/F2hC,EAAOO,cAAWxmC,MAS9BimC,EAAO6B,mBAAqB,WACpB,GAAC7B,EAAOG,SAELH,OAAAA,EAAO1hB,UAGlB0hB,EAAO8B,mBAAqB,SAACC,EAAKC,GACvB,OAAA,IAAI3oC,MAAMgnC,QAAS0B,EAAKC,IAInChC,EAAOiC,cAAgB,SAACC,EAASC,GACzBC,IAAAA,EAAOhoC,KAAKioC,SAAWF,EAAQ7iC,EAAI4iC,EAAQ5iC,GAC3CgjC,EAAOloC,KAAKioC,SAAWF,EAAQ5iC,EAAI2iC,EAAQ3iC,GAC3Cm0B,EACArqB,KAAKgvB,IAAI+J,EAAK,GAAK/4B,KAAKgvB,IAAI+J,EAAK,GACjC/4B,KAAKiQ,IAAIlf,KAAKioC,QAAUH,EAAQ5iC,GAAK+J,KAAKiQ,IAAIlf,KAAKioC,QAAUF,EAAQ7iC,GACrE+J,KAAKgvB,IAAIiK,EAAK,GAAKj5B,KAAKgvB,IAAIiK,EAAK,GAEjCjmC,EAAI,EAAIgN,KAAKk5B,MAAMl5B,KAAK0X,KAAK2S,GAAIrqB,KAAK0X,KAAK,EAAE2S,IAG1Cr1B,OAAI,KAFH2hC,EAAOE,WAAa7jC,IAYhC2jC,EAAO4B,SAAW,SAACM,EAASC,GACpBzO,IAAAA,EAAI,GAAMrqB,KAAKiQ,KAAK6oB,EAAQ7iC,EAAI4iC,EAAQ5iC,GAAKlF,KAAKioC,SAAS,EAC3Dh5B,KAAKiQ,IAAI4oB,EAAQ5iC,EAAIlF,KAAKioC,SAAWh5B,KAAKiQ,IAAI6oB,EAAQ7iC,EAAIlF,KAAKioC,UAC9D,EAAMh5B,KAAKiQ,KAAK6oB,EAAQ5iC,EAAI2iC,EAAQ3iC,GAAKnF,KAAKioC,UAAU,EAItDhkC,OAAI,KAFH2hC,EAAOC,WAAa52B,KAAKm5B,KAAKn5B,KAAK0X,KAAK2S,MAWpDsM,EAAOyC,OAAS,SAACphC,EAAGuX,GACZ+oB,IAAAA,EAAM,GAaF3B,OAZR2B,EAAIpjC,IAAM,IAAIlF,MAAMgnC,QAAQh/B,EAAE/B,EAAE+B,EAAE9B,GAClCoiC,EAAI1iB,OAASrG,EAEbonB,EAAOM,MAAM5/B,KAAKihC,GAEb3B,EAAOG,UAAUH,EAAOU,iBAK7BV,EAAOwB,cAECxB,EAAOM,MAAMlkC,OAAS,GAGlC4jC,EAAO0C,cAAgB,SAACtkC,GACb4hC,OAAAA,EAAOM,MAAMliC,IAOxB4hC,EAAO2C,cAAgB,WACZ3C,OAAAA,EAAOQ,aAOlBR,EAAO4C,sBAAwB,WACpB5C,OAAAA,EAAO0B,iBAgBH1B,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACvGA6C,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAvHf,IAAIA,EAAS,CAGbA,KAAc,WACVA,EAAOC,OAAW73B,EAAE,6BAA6BktB,KAAK,WACtD0K,EAAOE,SAAW,IAKtBF,eAAwB,SAACtpC,EAAI+e,EAAOC,GACzB,OAAA,IAAIjX,QAAQ,SAACC,EAASC,GACrBjI,QAAOQ,IAAPR,EAIAA,GAAAA,EAAG6C,OAAS,EACZoF,EAAO,6BAGP8W,QAAUve,IAAVue,EAIAuqB,QAAkB9oC,IAAlB8oC,EAAOC,OAAPD,MAKS9oC,IAATwe,IAAoBA,EAAOne,KAAK4oC,WAEhCvqB,IAAAA,EAAI,GACRA,EAAEwqB,OAASJ,EAAOC,OAClBrqB,EAAEyqB,IAAS3pC,EACXkf,EAAE9W,KAAS2W,EACXG,EAAEF,KAAUA,IAASne,KAAK+oC,UAAY,MAAQ,MAE1CxqB,IAAAA,EAAOtN,KAAKC,UAAUmN,GAG1BxN,EAAEC,KAAK,CACHvK,IAAKvG,KAAK0T,aAAa,aACvBtU,KAAK,OACLmI,KAAMgX,EACNpN,YAAY,kCACZC,SAAS,OAETC,QAAS,SAACmN,QACI7e,IAAN6e,GAKJiqB,EAAOE,SAASxpC,GAAMqf,EACtBrX,EAAQqX,IALJpX,EAAO,mCAxBfA,EAAO,kBAJPA,EAAO,yBARPA,EAAO,8BAmDnBqhC,SAAkB,WACPA,OAAAA,EAAOC,QAUlBD,aAAsB,SAACtpC,EAAI+e,GAEhBuqB,OAAAA,EAAOO,eAAe7pC,EAAI+e,EAAOle,KAAK4oC,YAUjDH,kBAA2B,SAACtpC,EAAI+e,GAErBuqB,OAAAA,EAAOO,eAAe7pC,EAAI+e,EAAOle,KAAK+oC,YASjDN,WAAoB,SAACtpC,GACV,OAAA,IAAI+H,QAAQ,SAACC,EAASC,QACHzH,IAAlB8oC,EAAOC,YAIA/oC,IAAPR,EAKJ0R,EAAEkH,QAAS/X,KAAKipC,WAAWR,EAAOC,OAAO,SAASvpC,EAAG,QAAS,SAACoI,GAC3DT,QAAQC,IAAIQ,GACZkhC,EAAOE,SAASxpC,GAAMoI,EACtBJ,EAAQI,KAPRH,EAAO,2BAJPA,QAkBGqhC,EAAAA,EAAAA,QAAAA,QAAAA;;AC3Hf,aAmiDezoC,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA1hDf,IAAA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,kBAEA,EAAA,EAAA,QAAA,yBAEA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,wBACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,qBAwgDeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GA9hDf,IAAIA,EAAO,GACXqP,OAAOrP,KAAOA,EAwBdA,EAAKhB,KAAaA,EAAlB,QACAgB,EAAK+H,IAAaA,EAAlB,QACA/H,EAAKwI,WAAaA,EAAlB,QAIAxI,EAAK6J,SAAaA,EAAlB,QACA7J,EAAK0C,MAAaA,EAAlB,QACA1C,EAAKoX,SAAaA,EAAlB,QACApX,EAAK4K,OAAaA,EAAlB,QACA5K,EAAKiG,IAAaA,EAAlB,QACAjG,EAAKye,SAAaA,EAAlB,QACAze,EAAKohB,GAAaA,EAAlB,QACAphB,EAAKsb,IAAaA,EAAlB,QACAtb,EAAKyK,UAAaA,EAAlB,QACAzK,EAAK2d,WAAaA,EAAlB,QACA3d,EAAKgqB,GAAaA,EAAlB,QACAhqB,EAAK8qB,SAAaA,EAAlB,QACA9qB,EAAK4lC,OAAaA,EAAlB,QACA5lC,EAAKyoC,OAAaA,EAAlB,QAKAzoC,EAAKkI,aAAe,IAAIjJ,MAAMyE,QAAQ,EAAE,EAAE,GAC1C1D,EAAKuB,SAAW,IAEhBvB,EAAKkpC,QAAW,IAAQj6B,KAAKkI,GAC7BnX,EAAKioC,QAAWh5B,KAAKkI,GAAK,IAE1BnX,EAAK4oC,UAAY,EACjB5oC,EAAK+oC,UAAY,EAGjB/oC,EAAKC,OAAS,GAEdD,EAAKC,OAAOC,MAAS,EACrBF,EAAKC,OAAOO,IAAS,EACrBR,EAAKC,OAAOU,GAAS,EAGrBX,EAAK0T,aAAqBrE,OAAOC,SAASsmB,OAAS,QACnD51B,EAAK89B,mBAAqB99B,EAAK0T,aAAe,SAC9C1T,EAAKipC,WAAqB55B,OAAOC,SAASsmB,OAAS,MACnD51B,EAAKmpC,UAAqB95B,OAAOC,SAASsmB,OAAS,SACnD51B,EAAKopC,WAAqBppC,EAAKmpC,UAAY,SAC3CnpC,EAAKqpC,eAAqBrpC,EAAKopC,WAAW,0BAC1CppC,EAAKspC,eAAqBtpC,EAAKopC,WAAW,0BAE1CppC,EAAKwQ,gBAAkBnB,OAAOC,SAASsmB,OAAS,eAChD51B,EAAKg+B,YAAkB3uB,OAAOC,SAASsmB,OAAS,WAChD51B,EAAKmN,SAAkBkC,OAAOC,SAASsmB,OAAS,QAChD51B,EAAKupC,QAAkBl6B,OAAOC,SAASsmB,OAAS,OAEhD51B,EAAKwpC,aAAe,GACpBxpC,EAAKypC,YAAe,GACpBzpC,EAAK0pC,aAAe,GACpB1pC,EAAK2pC,YAAe,KAEpB3pC,EAAK4pC,MAAQ,GAMb5pC,EAAK6pC,kBAAoB,SAAC5Z,GACtBjwB,EAAKwQ,gBAA+Cyf,GAQxDjwB,EAAK8pC,cAAgB,SAAC7Z,GAClBjwB,EAAKg+B,YAA2C/N,GAIpDjwB,EAAK+pC,mBAAqB,WAClB/pC,EAAKgqC,eAAiBhqC,EAAKiqC,eAAejqC,EAAKgqC,aAAahrB,OAClB,cAA1Chf,EAAKye,SAASC,UAAUwrB,QAAQC,OAAuBnqC,EAAKye,SAASC,UAAUwrB,QAAQE,UAG/FpqC,EAAKqqC,oBAAsB,WACnBpL,IAAAA,EAAKj/B,EAAK0J,UAAUwM,WAExB7G,OAAOgT,iBAAkB,SAAUriB,EAAKqW,WAAW,GACnDhH,OAAOi7B,oBAAsBtqC,EAAKuqC,2BAE9BC,WAAWC,WACdD,WAAWxgC,GAAG,SAAU,WACjBhK,EAAK0qC,KAAOF,WAAW5K,aACvB5/B,EAAKiK,UAAU,aAAcjK,EAAK0qC,MAEpC1qC,EAAK0qC,KAAM5jC,QAAQC,IAAI,kBAChBD,QAAQC,IAAI,qBAUzBk4B,EAAG5c,iBAAkB,YAAariB,EAAK2qC,mBAAmB,GAG1D1L,EAAG5c,iBAAiB,YAAa,SAAC+I,GACb,IAAbA,EAAEiG,QAAcrxB,EAAKiK,UAAU,kBAClB,IAAbmhB,EAAEiG,QAAcrxB,EAAKiK,UAAU,sBAGvCg1B,EAAG5c,iBAAkB,QAASriB,EAAK4qC,eAAe,GAGlD5qC,EAAK6qC,eAAgB,EACrBx7B,OAAOgT,iBAAiB,cAAe,SAAC+I,GACpCprB,EAAK6qC,eAAgB,EACrB7qC,EAAK+pC,uBAET16B,OAAOgT,iBAAiB,YAAa,SAAC+I,GAClCprB,EAAK6qC,eAAgB,IAEzBx7B,OAAOgT,iBAAiB,cAAe,SAAC+I,GAC/BprB,EAAK6qC,gBAEV7qC,EAAK2qC,kBAAkBvf,GACvBprB,EAAK8qC,oBAGTz7B,OAAOgT,iBAAiB,aAAc,SAAC+I,GACnCprB,EAAK6qC,eAAgB,EACrB7qC,EAAK+pC,uBAET16B,OAAOgT,iBAAiB,WAAY,SAAC+I,GACjCprB,EAAK6qC,eAAgB,IAEzBx7B,OAAOgT,iBAAiB,YAAa,SAAC+I,GAC7BprB,EAAK6qC,gBAEV7qC,EAAK2qC,kBAAkBvf,EAAE2f,QAAQ,IACjC/qC,EAAK8qC,oBAkBTE,OAAO/L,GAAIj1B,GAAG,YAAa,SAACohB,GACxBprB,EAAK6qC,eAAgB,EACrB7qC,EAAKiK,UAAU,YAAamhB,EAAE6f,YAIlCD,OAAO/L,GAAIj1B,GAAG,MAAO,SAACohB,GAcdprB,GAZJA,EAAK6qC,eAAgB,EAGrB7qC,EAAK+pC,qBAEL/pC,EAAK2qC,kBAAkBvf,EAAE6f,UACzBjrC,EAAK8qC,iBAEL9qC,EAAKiK,UAAU,MAAOmhB,EAAE6f,eAIAtrC,IAApBK,EAAKmqB,WAALnqB,CACAoqB,IAAAA,EAAIpqB,EAAKupB,UAAUvpB,EAAKmqB,YACxBC,GAAKA,EAAE9oB,UAAU8oB,EAAE9oB,cAG3BtB,EAAKgK,GAAG,YAAa,SAACohB,GAElBprB,EAAKkrC,iCAAiC9f,KAK1CprB,EAAK49B,YAAa,EAClB59B,EAAKy9B,WAAa,EAElBz9B,EAAKmhC,wBAAyB,EAE9B9xB,OAAOgT,iBAAiB,UAAW,SAAC+I,GAEhCprB,EAAK+pC,qBAES,UAAV3e,EAAEpN,MAAmBhe,EAAK49B,YAAa,GAC7B,YAAVxS,EAAEpN,MAAmBhe,EAAKy9B,WAAa,GAEtCz9B,EAAKmhC,wBAEVnhC,EAAKiK,UAAU,WAAYmhB,EAAEpN,OAE9B,GAEH3O,OAAOgT,iBAAiB,QAAS,SAAC+I,GAGhB,UAAVA,EAAEpN,MAAmBhe,EAAK49B,YAAa,GAC7B,YAAVxS,EAAEpN,MAAmBhe,EAAKy9B,WAAa,GAEtCz9B,EAAKmhC,wBAEVnhC,EAAKiK,UAAU,QAASmhB,EAAEpN,OAE3B,GAGHhe,EAAKgK,GAAG,WAAY,SAAClI,GAEbA,GAAI,MAAJA,EAAQ,CACJuB,IAAAA,EAAIrD,EAAKiG,IAAI03B,SAAW,EAC5B39B,EAAKiG,IAAI4V,OAAOxY,GAEhBvB,GAAI,MAAJA,EAAQ,CACJuB,IAAAA,EAAIrD,EAAKiG,IAAI03B,SAAW,EAC5B39B,EAAKiG,IAAI4V,OAAOxY,GAGhBvB,GAAI,WAAJA,EAAa,CACT0c,IAAAA,EAAIxe,EAAKsb,IAAImT,aAAa9oB,MAAMT,EAAI,IACxClF,EAAKsb,IAAIkH,kBAAkBhE,GAE3B1c,GAAI,aAAJA,EAAe,CACX0c,IAAAA,EAAIxe,EAAKsb,IAAImT,aAAa9oB,MAAMT,EAAI,IACxCsZ,EAAIvP,KAAKk8B,IAAI3sB,EAAG,KAChBxe,EAAKsb,IAAIkH,kBAAkBhE,OAiBvCxe,EAAKqW,UAAY,WACbrW,EAAKiG,IAAI0P,QAAQC,OAASvG,OAAOmS,WAAanS,OAAOoS,YACrDzhB,EAAKiG,IAAI0P,QAAQE,yBAEjB7V,EAAK0J,UAAUoM,QAASzG,OAAOmS,WAAYnS,OAAOoS,aAClD3a,QAAQC,IAAI,aAGhB/G,EAAK4qC,cAAgB,SAACxf,GAClBA,EAAEggB,iBAEFprC,EAAKiK,UAAU,aAAcmhB,EAAEigB,SAGnCrrC,EAAKwhC,cAAgB,WACjBxhC,EAAK0J,UAAUwM,WAAWo1B,SAI9BtrC,EAAKkrC,iCAAmC,SAAC9f,GAIjC,GAHJprB,EAAK2qC,kBAAkBvf,GACvBprB,EAAKurC,oBAEAvrC,EAAKiG,IAAIwZ,UAKV+rB,GAHWxrC,EAAKiG,IAAIm5B,iBAAmBp/B,EAAKiG,IAAIo5B,YAI5Cr/B,GAAAA,EAAKiG,IAAI2jB,iCAAiC,CACtC3iB,IAAAA,EAAIjH,EAAKygB,gBAAgBpc,EAGzBonC,GAFIzrC,EAAKygB,gBAAgBjI,EAEfxY,EAAKiG,IAAIma,OACnBsrB,EAAO,IAAIzsC,MAAMyE,QAAQuD,EAAE/B,EAAG+B,EAAE9B,EAAEnF,EAAK6pB,WAAY5iB,EAAE7B,GACrDumC,EAAO,IAAI1sC,MAAMyE,QACjBgoC,EAAKxmC,EAAIumC,EAAQvmC,EACjBwmC,EAAKvmC,EAAIsmC,EAAQtmC,EACjBumC,EAAKtmC,EAAIqmC,EAAQrmC,GAGjB2C,GAAM,IAAI/H,EAAK+H,KAAM4T,YAAY+vB,GAAM9vB,UAAU+vB,GAAM9vB,OAAO7b,EAAKiG,IAAI4Z,SAAS1X,KAEpFnI,EAAKiG,IAAI6e,WAAW/c,EAAK,SAf7ByjC,CAqBAI,IAAAA,EAAM5rC,EAAKmY,gBAAgBnY,EAAKkqB,iBAChClqB,EAAKsyB,eAAiBsZ,EACtB5rC,EAAKiG,IAAI4lC,iBAAkBD,EAAK,IAIhC5rC,EAAKygB,iBACLzgB,EAAKiG,IAAI6lC,gBAAgB9rC,EAAKygB,gBAAgBpc,OAA6B1E,EAAW,MAO9FK,EAAK4/B,aAAe,WACT5/B,OAAAA,EAAK0qC,MAWhB1qC,EAAKm+B,iBAAmB,WACpBqM,WAAWnM,UAYfr+B,EAAKyzB,QAAU,WACX3sB,QAAQC,IAAI,sBAEZ/G,EAAK0C,MAAM8rB,OACXxuB,EAAK0C,MAAMqpC,gBAKX/rC,EAAK6jB,OAAS,IAAI5kB,MAAM+sC,OAAM,GAE9BhsC,EAAK0qC,MAAO,EAWZ1qC,EAAK0J,UAAY,IAAIzK,MAAMgtC,cATb,CAEVC,WAAW,EACXtlB,OAAO,EACPulB,gBAAiB,qBAMrBnsC,EAAK0J,UAAUoM,QAASzG,OAAOmS,WAAYnS,OAAOoS,aAGlDzhB,EAAKkoB,QAAU,EACfloB,EAAK0J,UAAU03B,cAAephC,EAAKkoB,SAGnCloB,EAAKosC,KAAO,GACZpsC,EAAKmO,IAAO,IACZnO,EAAKqsC,aAAe,EACpBrsC,EAAKssC,aAAe,EACpBtsC,EAAKusC,QAAU,GAEfvsC,EAAK0J,UAAU8iC,eAAiBvtC,MAAMsK,aACtCvJ,EAAK0J,UAAU+iC,YAAcxtC,MAAMytC,kBACnC1sC,EAAK0J,UAAUijC,oBAAsB,EAIrC3sC,EAAK0J,UAAUkjC,iBAAkB5sC,EAAK6sC,UAGtC7sC,EAAK6S,eAAiB7S,EAAK0J,UAAUojC,aAAaC,mBAClDjmC,QAAQC,IAAI/G,EAAK0J,UAAUojC,cAE3B7tC,MAAM+tC,MAAMrsB,SAAU,EAEtB3gB,EAAK6pB,WAAa,IAElBnb,SAASI,KAAKC,YAAa/O,EAAK0J,UAAUwM,YAGtC+2B,IAAAA,EAASjtC,EAAK0J,UAAUwM,WAC5B+2B,EAAOr+B,MAAMs+B,QAAU,OACvBD,EAAOr+B,MAAMu+B,OAAU,OAOvBntC,EAAKiqC,eAAgB,EACrBjqC,EAAKotC,WAAa,EAElBptC,EAAK6J,SAAS2kB,OACdxuB,EAAK4K,OAAO4jB,OAGZxuB,EAAK0G,eAAiB,GACtB1G,EAAKqH,SAAW,IAAIpI,MAAMouC,WAC1BrtC,EAAKstC,aAAe,IAAIruC,MAAMsuC,YAC9BvtC,EAAKstC,aAAaE,eAAgBxtC,EAAKqpC,gBACvCrpC,EAAKqH,SAASomC,eAAgBztC,EAAKstC,cACnCttC,EAAK0tC,YAAc,EAKnB1tC,EAAKyD,KAAO,GACZzD,EAAK2tC,UAAW,EAChB3tC,EAAK4tC,WAAa,EAElB5tC,EAAK6tC,qBAAsB,EAE3B7tC,EAAK8tC,aAAe9tC,EAAKwpC,aACzBxpC,EAAK+tC,YAAe/tC,EAAKypC,YACzBzpC,EAAKguC,aAAehuC,EAAK0pC,aACzB1pC,EAAKiuC,YAAejuC,EAAK2pC,YAEzB3pC,EAAKkuC,aACLluC,EAAKoX,SAASoX,OAGdxuB,EAAKye,SAAS+P,OAGdxuB,EAAKiG,IAAIuoB,OAGTxuB,EAAKohB,GAAGoN,OAGRxuB,EAAKsb,IAAIkT,OAGTxuB,EAAKyK,UAAU+jB,OAGfxuB,EAAK8qB,SAAS0D,OAGdxuB,EAAK2d,WAAW6Q,OAGhBxuB,EAAKyoC,OAAOja,OAGZxuB,EAAK4lC,OAAOpX,OAGZxuB,EAAKygB,qBAAkB9gB,EACvBK,EAAKsyB,mBAAkB3yB,EACvBK,EAAKmuC,kBAAkBxuC,EAEvBK,EAAKkqB,qBAAkBvqB,EACvBK,EAAKmqB,gBAAkBxqB,EAEvBK,EAAKouC,qBAAsB,EAC3BpuC,EAAKquC,gBAAkB,EACvBruC,EAAKmyB,cAAkB,EAgBvBnyB,EAAK0iB,qBAAuB,IAAIzjB,MAAMgnC,QAAQ,EAAI,GAGlDjmC,EAAKsuC,SAAW,IAAIrvC,MAAMsvC,UAC1BvuC,EAAKsuC,SAASh8B,OAAO/M,IAAIvF,EAAKC,OAAOC,OACrCF,EAAKwuC,aAAe,IAAIvvC,MAAMsvC,UAC9BvuC,EAAKwuC,aAAal8B,OAAO/M,IAAIvF,EAAKC,OAAOO,KACzCR,EAAKyuC,MAAQ,IAAIxvC,MAAMsvC,UACvBvuC,EAAKyuC,MAAMn8B,OAAO/M,IAAIvF,EAAKC,OAAOU,IAIlCX,EAAKqqC,sBAEDrqC,EAAKoO,OAAOqB,UAAUzP,EAAKuqC,6BAE/BvqC,EAAK0uC,aAAU/uC,EAEfK,EAAKwhC,iBA6BTxhC,EAAK2uC,YAAc,WACf3uC,EAAK0J,UAAUkjC,sBAAkBjtC,IAMrCK,EAAK4uC,aAAe,WAChB5uC,EAAK0J,UAAUkjC,iBAAkB5sC,EAAK6sC,WAG1C7sC,EAAK6uC,kBAAoB,WACrB7uC,EAAK8uC,aAAe,IAAI7vC,MAAM8vC,eAC9B/uC,EAAK8uC,aAAaE,QAAU,SAAEzoC,EAAK0oC,EAAaC,GAC/CpoC,QAAQC,IAAK,yBAA2BR,EAAM,aAAe0oC,EAAc,OAASC,EAAa,WAC9FlvC,EAAKiK,UAAU,mBAAoB1D,IAGvCvG,EAAK8uC,aAAaK,OAAS,WAC1BroC,QAAQC,IAAK,qBACV/G,EAAKiK,UAAU,6BAGnBjK,EAAK8uC,aAAaM,WAAa,SAAE7oC,EAAK0oC,EAAaC,KAInDlvC,EAAK8uC,aAAaO,QAAU,SAAE9oC,GAC7BO,QAAQC,IAAK,8BAAgCR,KASlDvG,EAAKm9B,uBAAyB,SAACl5B,GAC3BjE,EAAKkoB,QAAUjkB,EACfjE,EAAK0J,UAAU03B,cAAen9B,QAGJtE,IAAtBK,EAAK0J,UAAUoG,KAEf9P,EAAKoO,OAAOqB,SAAUzP,EAAK0J,UAAUoG,GAAGmY,0BAA0BjoB,EAAKkoB,QAAUloB,EAAKohB,GAAG+G,kBACxFnoB,EAAK0J,UAAUoG,GAAGmY,0BAA0BjoB,EAAKkoB,WAM1DloB,EAAKshC,kBAAoB,WACrBthC,EAAK0J,UAAU03B,cAAephC,EAAKkoB,UAGvCloB,EAAKuqC,2BAA6B,WACO,KAAjCt7B,KAAKqgC,IAAIjgC,OAAOmX,cAChB1f,QAAQC,IAAI,kBACZ/G,EAAKiK,UAAU,yBAGfnD,QAAQC,IAAI,iBACZ/G,EAAKiK,UAAU,uBAGnBy3B,WAAY1hC,EAAKqW,UAAW,MAOhCrW,EAAKO,OAAW,GAChBP,EAAKU,SAAW,GAChBV,EAAKa,QAAW,GAShBb,EAAK0W,gBAAkB,SAACvX,GACb,OAAA,IAAIa,EAAKhB,KAAKG,EAAIa,EAAKC,OAAOC,QAQzCF,EAAKoY,aAAe,SAACjZ,GACbA,QAAOQ,IAAPR,EACGa,OAAAA,EAAKO,OAAOpB,IAQvBa,EAAKic,qBAAuB,SAAC9c,GACrByF,IAAAA,EAAI5E,EAAKoY,aAAajZ,GACtByF,YAAMjF,IAANiF,EAAwBA,EACrB5E,EAAK0W,gBAAgBvX,IAOhCa,EAAKslB,aAAe,WACTtlB,OAAAA,EAAKK,cAWhBL,EAAKud,mBAAqB,SAACpe,GAChB,OAAA,IAAIa,EAAKhB,KAAKG,EAAIa,EAAKC,OAAOO,MAQzCR,EAAKmY,gBAAkB,SAAChZ,GAChBA,QAAOQ,IAAPR,EACGa,OAAAA,EAAKU,SAASvB,IAQzBa,EAAKsd,wBAA0B,SAACne,GACxBuZ,IAAAA,EAAI1Y,EAAKmY,gBAAgBhZ,GACzBuZ,YAAM/Y,IAAN+Y,EAAwBA,EACrB1Y,EAAKud,mBAAmBpe,IAOnCa,EAAKuvC,iBAAmB,WACbvvC,OAAAA,EAAKS,UAWhBT,EAAKksB,aAAe,SAAC/sB,GACV,OAAA,IAAIa,EAAKhB,KAAKG,EAAIa,EAAKC,OAAOU,KAQzCX,EAAKupB,UAAY,SAACpqB,GACVA,QAAOQ,IAAPR,EACGa,OAAAA,EAAKa,QAAQ1B,IAOxBa,EAAKwvC,UAAY,WACNxvC,OAAAA,EAAKY,SAIhBZ,EAAKgH,aAAe,SAACT,GACjBvG,EAAK0tC,cACL1tC,EAAKiK,UAAU,mBAAoB1D,IAGvCvG,EAAK0H,kBAAoB,SAACnB,GACtBvG,EAAKiK,UAAU,uBAAwB1D,GACvCvG,EAAK0tC,cAED1tC,EAAK0tC,aAAe,GAAG1tC,EAAKyvC,uBAGpCzvC,EAAKyvC,oBAAsB,WAEnBxtC,IAAAA,EAAIjC,EAAKK,aAAa0kB,WAAW7S,OACjCsM,EAAIxe,EAAKK,aAAa0kB,WAAWF,OAEjC7kB,EAAK0J,UAAUgmC,UAAU/uB,UAEzB3gB,EAAKK,aAAahB,SAAS,SAACC,GACpBA,EAAEC,SACFD,EAAE4B,YAAa,EACf5B,EAAE6B,eAAgB,KAI1BnB,EAAK2vC,qCAED3vC,EAAK6tC,qBACL7tC,EAAK4vC,iBAAiB3tC,IAI1BjC,EAAK2tC,gBACgBhuC,IAAjBK,EAAKyD,KAAK,GAAkBzD,EAAK6vC,eAAe,IAAI7vC,EAAKwI,YAAamT,YAAY1Z,GAAG6tC,QAAQtxB,IAE7Fxe,EAAKyD,KAAK,GAAGkY,YAAY1Z,EAAEiD,EAAGjD,EAAEkD,EAAGlD,EAAEmD,GAAG0qC,QAAQtxB,GAEpD1X,QAAQC,IAAI,YAMZ9E,GAAKjC,EAAKkrB,YAAYlrB,EAAKkrB,WAAW7lB,SAASC,KAAKrD,GAExDjC,EAAKslB,eAAeyqB,+BAKpB/vC,EAAKiK,UAAU,4BAEfjK,EAAKgwC,wBAGLtO,WAAY,WAER1hC,EAAKiwC,qBACN,MAGPjwC,EAAKgwC,sBAAwB,SAACle,GAGrB,IAAA,IAAItZ,UAFC7Y,IAANmyB,IAAiBA,EAAI9xB,EAAKK,cAEhByxB,EAAE5vB,SAAS,CACjB0C,IAAAA,EAAIktB,EAAE5vB,SAASsW,GAEf5T,GAAKA,EAAEy5B,SACPr+B,EAAKgwC,sBAAsBprC,GAC3BA,EAAEy5B,OAAOz5B,EAAEnC,YAOvBzC,EAAKkuC,WAAa,WAEdluC,EAAKgW,UAAY,IAAI/W,MAAMixC,MAC3BlwC,EAAKgW,UAAUiV,WAAa,IAAIhsB,MAAMuM,MAAO,GAAI,GAAI,IAGrDxL,EAAK2J,mBAAqB,IAAI1K,MAAMC,MACpCc,EAAKgW,UAAUnR,IAAI7E,EAAK2J,oBAExB3J,EAAKK,aAAeL,EAAK0W,kBAAkBy5B,YAC3CnwC,EAAK2J,mBAAmB9E,IAAI7E,EAAKK,cAIjCL,EAAKS,SAAWT,EAAKud,qBAAqB4yB,YAC1CnwC,EAAKgW,UAAUnR,IAAI7E,EAAKS,UAGxBT,EAAKY,QAAUZ,EAAKksB,eAAeikB,YACnCnwC,EAAKgW,UAAUnR,IAAI7E,EAAKY,SAGxBZ,EAAKowC,SAAW,IAAInxC,MAAMoxC,aAAc,IAAIpxC,MAAMuM,MAAM,EAAE,EAAE,IAC5DxL,EAAK2J,mBAAmB9E,IAAI7E,EAAKowC,WAGrCpwC,EAAKswC,mBAAqB,SAACC,GACvBvwC,EAAKgW,UAAUiV,WAAaslB,GAMhCvwC,EAAKua,UAAY,SAAC7Y,GACd1B,EAAK2tC,SAAWjsC,GAGpB1B,EAAKwwC,uBAAyB,SAAClX,GAC3Bt5B,EAAKowC,SAAS5jC,MAAQ,IAAIvN,MAAMuM,MAAO8tB,EAAEA,EAAEA,IAO/Ct5B,EAAK6vC,cAAgB,SAACpwC,QACPE,IAAPF,IAEqB,IAArBO,EAAKyD,KAAKzB,QAAchC,EAAKwwC,uBAAuBxwC,EAAK4pC,OAE7D5pC,EAAKyD,KAAK6C,KAAK7G,QAGWE,IAAtBK,EAAKsb,IAAIuU,UACTW,EAAAA,QAAAA,UAAU/wB,KAMlBO,EAAKiwC,kBAAoB,WACjBjwC,GAAqB,IAArBA,EAAKyD,KAAKzB,OAAVhC,CAEC,IAAA,IAAIgE,KAAKhE,EAAKyD,KACfzD,EAAKyD,KAAKO,GAAGpE,SAebI,EAAKyD,KAAK,KACNzD,EAAKywC,QAAQzwC,EAAKgW,UAAUvR,OAAOzE,EAAKywC,QAE5CzwC,EAAKywC,OAASxxC,MAAMyxC,oBAAoBC,qBAAsB3wC,EAAK0J,UAAW1J,EAAKyD,KAAK,GAAGwF,eAC3FjJ,EAAKywC,OAAOz2B,UAAY,EAExBha,EAAKgW,UAAUnR,IAAK7E,EAAKywC,SAK7BzwC,EAAKK,aAAahB,SAAS,SAACC,GACpBG,IAAAA,EAAKH,EAAEI,SAASD,QACTE,IAAPF,GAAoBA,aAAcO,EAAKwI,aACvClJ,EAAEO,SAASC,OAASL,EAAGM,YACvBT,EAAEO,SAAS+wC,QAAU3xC,MAAM4xC,aAC3BvxC,EAAEO,SAASixC,gBAAkB9wC,EAAK4tC,cAI1C9mC,QAAQC,IAAI,kBAahB/G,EAAKyZ,gBAAkB,SAACwW,GAChB8gB,IAAAA,OAAQpxC,EAEZswB,EAAOjwB,EAAK0C,MAAM+D,qBAAqBwpB,GAiBnCjwB,EAAK0C,MAAMsuC,QAAQ/gB,SAEOtwB,IAAtBK,EAAKgqC,eACLhqC,EAAKgqC,aAAet7B,SAASC,cAAc,SAC3C3O,EAAKgqC,aAAa7qC,GAAK,cACvBa,EAAKgqC,aAAaiH,UAAY,gBAAgBhhB,EAAK,KACnDjwB,EAAKgqC,aAAakH,YAAc,YAChClxC,EAAKgqC,aAAanvB,MAAO,EACzB7a,EAAKgqC,aAAamH,aAAc,EAChCnxC,EAAKgqC,aAAap7B,MAAMwiC,QAAU,gBAElCpxC,EAAKgqC,aAAaqH,UAAW,EAE7BrxC,EAAKgqC,aAAasH,UAAY,WAC1BxqC,QAAQC,IAAI,qBACZ/G,EAAKiqC,eAAgB,KAI7B8G,EAAQ,IAAI9xC,MAAMsyC,aAAcvxC,EAAKgqC,eAC/B1gC,SAAWrK,MAAMsK,eAKvBwnC,GAAQ,IAAI9xC,MAAM2O,eAAgBtG,KAAK2oB,IACjC3mB,SAAWrK,MAAMsK,kBAGD5J,IAAtBK,EAAKwxC,cAOTxxC,EAAKyxC,WAAa,IAAIxyC,MAAMqP,qBAAsB,EAAK,GAAG,IAE1DtO,EAAKwxC,aAAe,IAAIvyC,MAAMkN,kBAAkB,CAC5CiB,IAAK2jC,EAILW,KAAK,EACLpkC,WAAW,EACXjB,YAAY,IAKhBrM,EAAKkrB,WAAa,IAAIjsB,MAAMoT,KAAKrS,EAAKyxC,WAAYzxC,EAAKwxC,cACvDxxC,EAAKkrB,WAAWymB,eAAgB,EAChC3xC,EAAK4xC,sBAAyC,GAAnB5xC,EAAKiG,IAAI8C,SAEpC/I,EAAKkrB,WAAW2mB,cAAgB,WAE5B7xC,EAAKkrB,WAAW7lB,SAASC,KAAKtF,EAAKiG,IAAI4Z,SAAS1b,MAGpDnE,EAAK2J,mBAAmB9E,IAAI7E,EAAKkrB,aA7B7BlrB,EAAKwxC,aAAapkC,IAAM2jC,GAiChC/wC,EAAK4xC,sBAAwB,SAACpzB,QACF7e,IAApBK,EAAKyxC,YACTzxC,EAAKyxC,WAAW9rC,OAAQ6Y,EAAEA,EAAEA,IAShCxe,EAAK0Z,wBAA0B,SAAC8E,QACJ7e,IAApBK,EAAKkrB,YACTlrB,EAAKkrB,WAAWnlB,SAASR,IAAK,EAAEiZ,EAAE,IAStCxe,EAAK8Z,sBAAwB,SAACvG,GAEtBtP,IAAAA,EAAIsP,EAAEnP,QACVH,EAAEsgB,YAEFtgB,EAAEiB,GAAwB,GAAnBlF,EAAKypC,YACZxlC,EAAEkB,GAAwB,GAAnBnF,EAAKypC,YACZxlC,EAAEmB,GAAwB,GAAnBpF,EAAKypC,iBAES9pC,IAAjBK,EAAK+Z,UACL/Z,EAAK+Z,QAAU,IAAI9a,MAAM6yC,iBAAkB,IAAI7yC,MAAMuM,MAAM,EAAE,EAAE,GAAI,GACnExL,EAAK+Z,QAAQ7Y,YAAa,EAE1BlB,EAAK+xC,WAAa,IAAI9yC,MAAM48B,SAC5B77B,EAAK2J,mBAAmB9E,IAAI7E,EAAK+xC,YACjC/xC,EAAK+Z,QAAQ/R,OAAShI,EAAK+xC,WAE3B/xC,EAAK2J,mBAAmB9E,IAAI7E,EAAK+Z,SACjC/Z,EAAKgyC,WAAa,IAAI/yC,MAAMyE,SAGhC1D,EAAKiyC,WAAahuC,EAElBjE,EAAK+Z,QAAQ1U,SAASE,KAAKtB,EAAEiB,GAAGjB,EAAEkB,GAAGlB,EAAEmB,GAEvCpF,EAAKma,iBAAgB,IAGzBna,EAAKkyC,sBAAwB,WACrBlyC,QAAoBL,IAApBK,EAAKiyC,WAALjyC,CAEAmyC,IAAAA,EAAKnyC,EAAKiyC,WAAW7tC,QAElB+tC,OADPA,EAAG5tB,YACI4tB,IAGXnyC,EAAKma,gBAAkB,SAACzY,QACC/B,IAAjBK,EAAK+Z,UACT/Z,EAAK+Z,QAAQtX,QAAUf,EAEnBA,GACA1B,EAAKwwC,uBAAuBxwC,EAAK4pC,OACjC5pC,EAAK4vC,oBAEJ5vC,EAAKwwC,uBAAuB,KAGrCxwC,EAAKoyC,mBAAqB,WAClBpyC,YAAiBL,IAAjBK,EAAK+Z,WACJ/Z,EAAK+Z,QAAQtX,SAKtBzC,EAAKya,YAAc,SAACxW,GAChBjE,EAAK0J,UAAUijC,oBAAsB1oC,GAEzCjE,EAAKqyC,YAAc,WACRryC,OAAAA,EAAK0J,UAAUijC,qBAK1B3sC,EAAK2vC,mCAAqC,WAClCnxB,IAAAA,EAAIxe,EAAKK,aAAa0kB,WAAWF,OAC7B7kB,EAAKK,aAAa0kB,WAAW7S,OAEjCsM,GAAK,GAAOA,GAAKxe,EAAK0pC,cACtB1pC,EAAK6tC,qBAAsB,EAC3B7tC,EAAKguC,aAAehuC,EAAK0pC,eAKzB1pC,EAAK6tC,qBAAsB,EAC3B7tC,EAAKguC,aAAmB,IAAJxvB,GAMpBxe,EAAK+Z,QAAQu4B,OAAOllC,MACpBpN,EAAK+Z,QAAQu4B,OAAOllC,IAAI5I,UACxBxE,EAAK+Z,QAAQu4B,OAAOllC,IAAM,MAK9BpN,EAAK+Z,QAAQu4B,OAAOC,OAAOC,MAAUxyC,EAAKguC,aAC1ChuC,EAAK+Z,QAAQu4B,OAAOC,OAAOE,MAASzyC,EAAKguC,aACzChuC,EAAK+Z,QAAQu4B,OAAOC,OAAOG,QAAU1yC,EAAKguC,aAC1ChuC,EAAK+Z,QAAQu4B,OAAOC,OAAOI,IAAS3yC,EAAKguC,aAEzChuC,EAAK+Z,QAAQu4B,OAAOM,QAAQ1lB,MAASltB,EAAKiuC,YAC1CjuC,EAAK+Z,QAAQu4B,OAAOM,QAAQzlB,OAASntB,EAAKiuC,YAC1CjuC,EAAK+Z,QAAQu4B,OAAOC,OAAO7pC,KAAU1I,EAAK8tC,aAC1C9tC,EAAK+Z,QAAQu4B,OAAOC,OAAO5pC,IAAU3I,EAAK+tC,YAI1C/tC,EAAK+Z,QAAQu4B,OAAOO,MAAQ,MAIhC7yC,EAAKka,cAAgB,SAACxY,GACd1B,QAAiBL,IAAjBK,EAAK+Z,QAELrY,GAAAA,EAAE,CAkBE1B,GAjBJA,EAAK+Z,QAAQ7Y,YAAa,EAC1BlB,EAAK0J,UAAUgmC,UAAU/uB,SAAU,EAInC3gB,EAAK0J,UAAUgmC,UAAUtwC,KAAUH,MAAM6zC,iBAGzC9yC,EAAKK,aAAahB,SAAS,SAACC,GACpBA,EAAEC,SACFD,EAAE4B,YAAa,EACf5B,EAAE6B,eAAgB,KAI1BnB,EAAK2vC,qCAED3vC,EAAK6tC,oBAAoB,CACrB5rC,IAAAA,EAAIjC,EAAKK,aAAa0kB,WAAW7S,OACrClS,EAAK4vC,iBAAiB3tC,QAErBjC,EAAK4vC,mBAEV9oC,QAAQC,IAAI,mBAGZ/G,EAAK+Z,QAAQ7Y,YAAa,EAC1BlB,EAAK0J,UAAUgmC,UAAU/uB,SAAU,EACnC7Z,QAAQC,IAAI,gBAIpB/G,EAAK4vC,iBAAmB,SAACvrC,QACG1E,IAApBK,EAAKiyC,kBAECtyC,IAAN0E,GACAA,EAAIrE,EAAKiG,IAAIqkB,wBAEbtqB,EAAKgyC,WAAW9sC,EAAIb,EAAEa,EAAKlF,EAAKiG,IAAIma,MAAMlb,EAAIlF,EAAKguC,aACnDhuC,EAAKgyC,WAAW7sC,EAAId,EAAEc,EAAKnF,EAAKiG,IAAIma,MAAMjb,EAAInF,EAAKguC,aACnDhuC,EAAKgyC,WAAW5sC,EAAIf,EAAEe,EAAKpF,EAAKiG,IAAIma,MAAMhb,EAAIpF,EAAKguC,eAGnDhuC,EAAKgyC,WAAW9sC,EAAIb,EAAEa,EACtBlF,EAAKgyC,WAAW7sC,EAAId,EAAEc,EACtBnF,EAAKgyC,WAAW5sC,EAAIf,EAAEe,GAG1BpF,EAAK+Z,QAAQ1U,SAASE,IAClBvF,EAAKgyC,WAAW9sC,EAAIlF,EAAKiyC,WAAW/sC,EACpClF,EAAKgyC,WAAW7sC,EAAInF,EAAKiyC,WAAW9sC,EACpCnF,EAAKgyC,WAAW5sC,EAAIpF,EAAKiyC,WAAW7sC,GAGxCpF,EAAK+xC,WAAW1sC,SAASC,KAAKtF,EAAKgyC,cAGvChyC,EAAK+yC,mBAAqB,WACjB/yC,EAAK0J,UAAUgmC,UAAU/uB,UAC1B3gB,EAAK6tC,qBAET7tC,EAAK4vC,qBAIT5vC,EAAK4a,eAAiB,SAACiE,EAAUm0B,QACZrzC,IAAbkf,SACUlf,IAAVqzC,IAAqBA,GAAQ,GAEjCn0B,EAAW7e,EAAK0C,MAAM+D,qBAAqBoY,QAEtBlf,IAAjBK,EAAKizC,SAA0C,OAAjBjzC,EAAKizC,QAAkBjzC,EAAKizC,QAAU,IAAIh0C,MAAM6f,MAAO9e,EAAKye,SAASC,WAC9F1e,EAAKizC,QAAQpa,WAAW74B,EAAKizC,QAAQna,OAE9C94B,EAAKye,SAAS1T,QAAQzD,KAAMuX,EAAU,SAAChK,GACnC7U,EAAKizC,QAAQl0B,UAAWlK,GACxB7U,EAAKizC,QAAQla,QAASia,GAGtBhzC,EAAKizC,QAAQj0B,WAOrBhf,EAAK6sC,SAAW,WAGRqG,IAAAA,EAAKlzC,EAAK6jB,OAAOsvB,WAErBnzC,EAAKosC,KAAO,EAAM8G,EAClBlzC,EAAKmO,IAAO+kC,EAOZlzC,EAAKiG,IAAIya,UAAU9gB,OAAOszC,GAE1BlzC,EAAK0J,UAAUqM,OAAQ/V,EAAKgW,UAAWhW,EAAKiG,IAAI0P,SAU5C3V,EAAKohB,GAAGgH,cAAcpoB,EAAKohB,GAAGxhB,SAGlCI,EAAK8qC,iBAGL9qC,EAAKiG,IAAIrG,SAGTI,EAAKyK,UAAU7K,SAGfI,EAAKsb,IAAI1b,SAGTI,EAAK4K,OAAOhL,SAGZI,EAAK+yC,qBAEL/yC,EAAKiK,UAAU,UAGnBjK,EAAK2qC,kBAAoB,SAACvf,GAGlBprB,GAFAorB,EAAEggB,gBAAgBhgB,EAAEggB,iBAEpBprC,EAAKiG,IAAIkZ,QAAUnf,EAAKiG,IAAIgb,YAG5B,OAFAjhB,EAAK0iB,qBAAqBxd,EAAI,OAC9BlF,EAAK0iB,qBAAqBvd,EAAI,GAIrCnF,EAAK0iB,qBAAqBxd,EAAMkmB,EAAEgoB,QAAU/jC,OAAOmS,WAAe,EAAI,EACtExhB,EAAK0iB,qBAAqBvd,GAAOimB,EAAEioB,QAAUhkC,OAAOoS,YAAgB,EAAI,GAQzEzhB,EAAKszC,aAAe,WAChBtzC,EAAKuzC,MAAQ,EACbvzC,EAAKwzC,YAAc,GAEnBxzC,EAAKwzC,YAAYltC,KAAMtG,EAAKurC,mBAC5BvrC,EAAKwzC,YAAYltC,KAAMtG,EAAKyzC,uBAC5BzzC,EAAKwzC,YAAYltC,KAAMtG,EAAK0zC,iBAGhC1zC,EAAK8qC,eAAiB,WACd9qC,EAAKmyB,cACLnyB,EAAKiG,IAAIyZ,eACT1f,EAAK0tC,YAAc,GACnB1tC,EAAKiG,IAAIud,oBAObxjB,EAAKurC,oBACLvrC,EAAKyzC,wBACLzzC,EAAK0zC,iBAEL1zC,EAAKiG,IAAI0tC,wBAIb3zC,EAAKurC,kBAAoB,WAejBqI,GAdA5zC,EAAKohB,GAAGC,eACRrhB,EAAKohB,GAAGyyB,cAAc7zC,EAAKsuC,UAG3BtuC,EAAKsuC,SAASwF,cAAe9zC,EAAK0iB,qBAAsB1iB,EAAKiG,IAAI0P,SAErE3V,EAAK+zC,WAAa,GAElB/zC,EAAKsuC,SAAS0F,iBAAkBh0C,EAAKgW,UAAU9T,UAAU,EAAMlC,EAAK+zC,YAKtD/zC,EAAK+zC,WAAW/xC,QACf,EACXhC,EAAKygB,qBAAkB9gB,MADvBi0C,CAKA9rC,IAAAA,EAAI9H,EAAK+zC,WAAW,GAExB/zC,EAAKygB,gBAAkB,GACvBzgB,EAAKygB,gBAAgBpc,EAAIyD,EAAEmd,MAC3BjlB,EAAKygB,gBAAgBxc,EAAI6D,EAAE0/B,SAC3BxnC,EAAKygB,gBAAgBnhB,EAAIwI,EAAEyJ,OAKtBvR,EAAKquC,gBACK,OAAXvmC,EAAEmsC,WACgBt0C,IAAlBmI,EAAEmsC,KAAK/uB,SAEXllB,EAAKygB,gBAAgB9O,aAAc,IAAI1S,MAAMi1C,SAAUC,gBAAiBrsC,EAAEyJ,OAAOI,aACjF3R,EAAKygB,gBAAgBjI,EAAI1Q,EAAEmsC,KAAK/uB,OAAO9gB,QAAQgwC,aAAcp0C,EAAKygB,gBAAgB9O,aAAc4S,eAUpGvkB,EAAKy5B,qBAAuB,WACpBz5B,QAAyBL,IAAzBK,EAAKygB,gBACFzgB,OAAAA,EAAKygB,gBAAgBpc,GAUhCrE,EAAKq0C,wBAA0B,WACvBr0C,QAAyBL,IAAzBK,EAAKygB,gBACFzgB,OAAAA,EAAKygB,gBAAgBxc,GAUhCjE,EAAKs0C,sBAAwB,WACrBt0C,QAAyBL,IAAzBK,EAAKygB,gBACFzgB,OAAAA,EAAKygB,gBAAgBjI,GAKhCxY,EAAKyzC,sBAAwB,WAYrBG,GAXA5zC,EAAKohB,GAAGC,eACRrhB,EAAKohB,GAAGyyB,cAAc7zC,EAAKwuC,cAG3BxuC,EAAKwuC,aAAasF,cAAe9zC,EAAK0iB,qBAAsB1iB,EAAKiG,IAAI0P,SAEzE3V,EAAKu0C,SAAW,GAChBv0C,EAAKwuC,aAAawF,iBAAkBh0C,EAAKgW,UAAU9T,UAAU,EAAMlC,EAAKu0C,UAG1Dv0C,EAAKu0C,SAASvyC,QACb,EAAX4xC,CAGI5zC,GAFJA,EAAKsyB,mBAAgB3yB,EAEjBK,EAAKkqB,gBAAgB,CACrBlqB,EAAKiK,UAAU,oBAAqBjK,EAAKkqB,iBACrCxR,IAAAA,EAAI1Y,EAAKmY,gBAAgBnY,EAAKkqB,iBAC9BxR,GAAKA,EAAErX,SAASqX,EAAErX,UAG1BrB,EAAKkqB,qBAAkBvqB,MATvBi0C,CAaA9rC,IAAAA,EAAI9H,EAAKu0C,SAAS,GAGlBv0C,GAAAA,EAAKouC,qBAAuBpuC,EAAKygB,iBAC7BzgB,EAAKygB,gBAAgBxc,EAAI6D,EAAE0/B,SAD/BxnC,CAKQA,GAFJA,EAAKsyB,mBAAgB3yB,EAEjBK,EAAKkqB,gBAAgB,CACrBlqB,EAAKiK,UAAU,oBAAqBjK,EAAKkqB,iBACrCxR,IAAAA,EAAI1Y,EAAKmY,gBAAgBnY,EAAKkqB,iBAC9BxR,GAAKA,EAAErX,SAASqX,EAAErX,UAG1BrB,EAAKkqB,qBAAkBvqB,MAX3BK,CAgBJA,EAAKsyB,cAAgB,GACrBtyB,EAAKsyB,cAAcjuB,EAAIyD,EAAEmd,MACzBjlB,EAAKsyB,cAAcruB,EAAI6D,EAAE0/B,SACzBxnC,EAAKsyB,cAAchzB,EAAIwI,EAAEyJ,OACzBvR,EAAKsyB,cAAchW,KAAO,GAKnBk4B,IAFH76B,IAAAA,EAAI3Z,EAAKsyB,cAAchW,KACvBk4B,EAAK1sC,EAAEyJ,OAAOjN,OACXkwC,GACCA,EAAGhzC,KAAOgzC,EAAGhzC,MAAQxB,EAAKuB,UAAUoY,EAAErT,KAAKkuC,EAAGhzC,KAClDgzC,EAAKA,EAAGlwC,OAGRsnC,IAAAA,EAAMjyB,EAAE,GACRiyB,GAAAA,GACI5rC,EAAKkqB,kBAAoB0hB,EAAI,CACzB5rC,GAAAA,EAAKkqB,gBAAgB,CACrBlqB,EAAKiK,UAAU,oBAAqBjK,EAAKkqB,iBACrCxR,IAAAA,EAAI1Y,EAAKmY,gBAAgBnY,EAAKkqB,iBAC9BxR,GAAKA,EAAErX,SAASqX,EAAErX,UAG1BrB,EAAKkqB,gBAAkB0hB,EACvB5rC,EAAKiK,UAAU,oBAAqB2hC,GAChClzB,IAAAA,EAAI1Y,EAAKmY,gBAAgByzB,GACzBlzB,GAAKA,EAAEtX,SAASsX,EAAEtX,cAOlCpB,EAAK0zC,eAAiB,WAYdE,GAXA5zC,EAAKohB,GAAGC,eACRrhB,EAAKohB,GAAGyyB,cAAc7zC,EAAKyuC,OAG3BzuC,EAAKyuC,MAAMqF,cAAe9zC,EAAK0iB,qBAAsB1iB,EAAKiG,IAAI0P,SAElE3V,EAAKy0C,QAAU,GACfz0C,EAAKyuC,MAAMuF,iBAAkBh0C,EAAKgW,UAAU9T,UAAU,EAAMlC,EAAKy0C,SAGnDz0C,EAAKy0C,QAAQzyC,QACZ,EAAX4xC,CAGI5zC,GAFJA,EAAKmuC,kBAAexuC,EAEhBK,EAAKmqB,WAAW,CAChBnqB,EAAKiK,UAAU,cAAejK,EAAKmqB,YAC/BzR,IAAAA,EAAI1Y,EAAKupB,UAAUvpB,EAAKmqB,YACxBzR,GAAKA,EAAErX,SAASqX,EAAErX,UAG1BrB,EAAKmqB,gBAAaxqB,MATlBi0C,CAaA9rC,IAAAA,EAAI9H,EAAKy0C,QAAQ,GAGjBz0C,GAAAA,EAAKygB,iBACDzgB,EAAKygB,gBAAgBxc,EAAI6D,EAAE0/B,SAD/BxnC,CAKQA,GAFJA,EAAKmuC,kBAAexuC,EAEhBK,EAAKmqB,WAAW,CAChBnqB,EAAKiK,UAAU,oBAAqBjK,EAAKmqB,YACrCzR,IAAAA,EAAI1Y,EAAKupB,UAAUvpB,EAAKmqB,YACxBzR,GAAKA,EAAErX,SAASqX,EAAErX,UAG1BrB,EAAKmqB,gBAAaxqB,MAXtBK,CAgBJA,EAAKmuC,aAAe,GACpBnuC,EAAKmuC,aAAa9pC,EAAIyD,EAAEmd,MACxBjlB,EAAKmuC,aAAalqC,EAAI6D,EAAE0/B,SACxBxnC,EAAKmuC,aAAa7uC,EAAIwI,EAAEyJ,OACxBvR,EAAKmuC,aAAa7xB,KAAO,GAKlBk4B,IAFH76B,IAAAA,EAAI3Z,EAAKmuC,aAAa7xB,KACtBk4B,EAAK1sC,EAAEyJ,OAAOjN,OACXkwC,GACCA,EAAGhzC,KAAOgzC,EAAGhzC,MAAQxB,EAAKuB,UAAUoY,EAAErT,KAAKkuC,EAAGhzC,KAClDgzC,EAAKA,EAAGlwC,OAGRowC,IAAAA,EAAM/6B,EAAE,GACR+6B,GAAAA,GACI10C,EAAKmqB,aAAeuqB,EAAI,CACpB10C,GAAAA,EAAKmqB,WAAW,CAChBnqB,EAAKiK,UAAU,cAAejK,EAAKmqB,YAC/BzR,IAAAA,EAAI1Y,EAAKupB,UAAUvpB,EAAKmqB,YACxBzR,GAAKA,EAAErX,SAASqX,EAAErX,UAG1BrB,EAAKmqB,WAAauqB,EAClB10C,EAAKiK,UAAU,cAAeyqC,GAC1Bh8B,IAAAA,EAAI1Y,EAAKupB,UAAUmrB,GACnBh8B,GAAKA,EAAEtX,SAASsX,EAAEtX,cAMnBpB,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n\r\n        //this.toggle(N.visible);\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n\r\n    //this.toggle(this._rootG.visible);\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model (local to collection or complete)\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    url = ATON.Utils.resolveCollectionURL(url);\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = undefined; //ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n/*\r\n    this._LP = new THREE.LightProbe();\r\n    this._LP.intensity = 10;\r\n    ATON._mainRoot.add( this._LP );\r\n*/\r\n    \r\n    //this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //this._LP.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBAFormat, //THREE.RGBEFormat,\r\n        //generateMipmaps: true,\r\n        //minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n    this._envtex = CCtarget.texture;\r\n\r\n    // new\r\n    //this._LP.copy( THREE.LightProbeGenerator.fromCubeRenderTarget(ATON._renderer, CCtarget) );\r\n    //this._envtex = this._LP;\r\n    \r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.2,0.2,1.0, 0.2) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n\r\n    MatHub.colors.defUI  = new THREE.Color(0,1,0.5);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,1,0.5);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n\r\n    // Default UI\r\n    MatHub.materials.defUI = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            color: { type:'vec3', value: MatHub.colors.defUI },\r\n            opacity: { type:'float', value: 0.8 }\r\n        },\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n            uniform vec3 color;\r\n            uniform float opacity;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.2, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(color.rgb, f * opacity);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n    \r\n    // Selector\r\n    MatHub.materials.selector = MatHub.materials.defUI.clone();\r\n\r\n/*\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n*/\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = MatHub.materials.defUI.clone();\r\n    MatHub.materials.controllerRay.uniforms.color.value = MatHub.colors.white;\r\n/*\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n*/\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                //float ff = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\r\n\r\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n                //gl_FragColor = vec4(tint.rgb, ff);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-sem.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n\r\n    MatHub.materials.lp = new THREE.ShaderMaterial({ \r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n\r\n    MatHub.lpIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-lp.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        depthWrite: false, \r\n        //depthTest: false\r\n    });\r\n\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n    MatHub.lpIcon.sizeAttenuation  = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.resolveCollectionURL = (url)=>{\r\n    if (url.startsWith(\"http\")) return url;\r\n    \r\n    return ATON.PATH_COLLECTION+url;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n};\r\n\r\nUtils.graphPostVisitor = (N)=>{\r\n    //if (N.type === undefined) return;\r\n\r\n    if (!N.visible){\r\n        Utils.setPicking(N, N.type, false);\r\n        return;\r\n    }\r\n\r\n    for (let c in N.children){\r\n        let C = N.children[c];\r\n        Utils.graphPostVisitor(C);\r\n    }\r\n\r\n    console.log(N);\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n        // perf.\r\n        // TODO: manually call object.updateMatrix()\r\n        //o.matrixAutoUpdate = false;\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n/*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n*/\r\n                }\r\n\r\n                // Fix mipmapping\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON.device.isMobile? 0 : ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // Soundscape\r\n    SceneHub._jsonParsers.soundscape = (soundscape)=>{\r\n        if (soundscape === undefined) return;\r\n\r\n        if (soundscape.global){\r\n            ATON.setGlobalAudio(soundscape.global.url, soundscape.global.loop);\r\n        }\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\nAudioHub.playOnceGlobally = (audioURL)=>{\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    let au = new THREE.Audio( ATON.AudioHub._listener );\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        au.setBuffer( buffer );\r\n        //au.setVolume( 2.0 );\r\n        //au.setPlaybackRate(0.9);\r\n        au.play();\r\n    });\r\n};\r\n\r\n/* TODO:\r\nAudioHub.addToSoundscape = (auid, audioURL, position, radius)=>{\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        A._auTalk.setBuffer( buffer );\r\n        A._auTalk.setLoop( false );\r\n        //A._auTalk.setVolume( 0.5 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        A._auTalk.play();\r\n    });\r\n};\r\n*/\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV().setFOV(ATON.Nav.STD_FOV); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 100.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n        ATON.XR._currPos.copy(ATON.XR._reqPos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    //let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    //T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = bs.center.x - (r * Nav._vDir.x);\r\n    E.y = bs.center.y - (r * Nav._vDir.y);\r\n    E.z = bs.center.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(bs.center);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nSet and request home viewpoint\r\n@param {POV} pov - the home POV\r\n@param {number} duration - transition duration\r\n*/\r\nNav.setAndRequestHomePOV = (pov, duration)=>{\r\n    Nav.setHomePOV(pov);\r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    // reparent current camera to the XR rig\r\n    XR.rig.add( ATON.Nav._camera );\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n    console.log(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\",\r\n                ///\"bounded-floor\",\r\n\r\n                //\"hand-tracking\",\r\n\r\n                //\"high-refresh-rate\",\r\n                //\"high-fixed-foveation-level\",\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            geometry.rotateX( -Math.PI / 2 );\r\n            geometry.translate(0,0,-(raylen*0.5));\r\n\r\n            var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( mesh.clone() );\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    //this.uiText.position.set(0,0,-0.01);\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\nsetBackgroundOpacity(f){\r\n    this.container.set({ backgroundOpacity: f });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    //SUI.enableSemIcons();\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        if (SUI.gSemIcons) SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        if (SUI.gSemIcons) SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n// note: before adding LPs\r\nSUI.enableLPIcons = ()=>{\r\n    SUI.gLPIcons = ATON.createUINode();\r\n    SUI.gLPIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gLPIcons);\r\n};\r\n\r\n\r\nSUI.enableSemIcons = ()=>{\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n/**\r\nSet selector color\r\n@param {THREE.Color} color - color\r\n@param {number} opacity - (optional) opacity \r\n*/\r\nSUI.setSelectorColor = (color, opacity)=>{\r\n    ATON.MatHub.materials.selector.uniforms.color.value = color;\r\n    if (opacity !== undefined) ATON.MatHub.materials.selector.uniforms.opacity.value = opacity;\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    if (SUI.gSemIcons === undefined) return;\r\n\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.addLPIcon = (LP)=>{\r\n    if (SUI.gLPIcons === undefined) return;\r\n\r\n    let rn = LP._near;\r\n    let isize = 0.1; //rn * 0.3;\r\n\r\n    let lpicon = new THREE.Sprite( ATON.MatHub.lpIcon );\r\n    lpicon.position.copy(LP.pos);\r\n    lpicon.scale.set(isize,isize,isize);\r\n\r\n    let s = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.materials.lp );\r\n    s.scale.set(rn,rn,rn);\r\n    s.position.copy(LP.pos);\r\n\r\n    SUI.gLPIcons.add( lpicon );\r\n    SUI.gLPIcons.add( s );\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {array} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n    let marginf = 1.1;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num * marginf) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE * marginf;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        if (button){\r\n            button.position.set((i*SUI.STD_BTN_SIZE*marginf)-m, 0.0, 0.005);\r\n            cont.add(button);\r\n        }\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (SUI.gSemIcons){\r\n        if (ATON.Nav._bInteracting){\r\n            SUI.gSemIcons.hide();\r\n        }\r\n        else {\r\n            if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n        }\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n\r\n    //this._auTalk = undefined;\r\n\r\n    // Positional audio (talk)\r\n    this._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n    this._auTalk.setRefDistance(30.0);\r\n    this.add(this._auTalk); // move with avatar\r\n\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\nsetTalkDistance(r){\r\n    if (r > 0.0) this._auTalk.setRefDistance(r);\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = ATON.MatHub.materials.defUI.clone();\r\n    mat.uniforms.color.value = VRoadcast.ucolors[0];\r\n/*\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n*/\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        //M.color = VRoadcast.ucolors[c];\r\n        M.uniforms.color.value = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket']; \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n        //opts.transports = ['websocket'];\r\n        //opts.upgrade = false;\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n/*\r\n        if (A._auTalk === undefined || A._auTalk === null){\r\n            A._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n            A._auTalk.setRefDistance(50.0);\r\n            A.add(A._auTalk);\r\n        }\r\n        else A._auTalk.stop();\r\n*/\r\n        if (A._auTalk.isPlaying) A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    if (ATON.SUI.gSemIcons === undefined) return true;\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\nFE._handleHomeReq = ()=>{\r\n    if (FE._bReqHome) return;\r\n\r\n    FE._bReqHome = true;\r\n\r\n    if (ATON.Nav.homePOV === undefined){\r\n        ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        return;\r\n    }\r\n    \r\n    ATON.Nav.requestHome(0.5);\r\n    //console.log(ATON.Nav.homePOV);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(0.2);\r\n    });\r\n\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        \r\n        FE.computeSelectorRanges();\r\n        if (ATON.Nav.isOrbit()) ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        FE._handleHomeReq();\r\n    });\r\n\r\n    ATON.on(\"frame\", FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    $(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:secure_url]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:type]\").attr(\"content\", \"image/png\");\r\n    $(\"meta[property=og\\\\:image\\\\:width]\").attr(\"content\", \"200\");\r\n    $(\"meta[property=og\\\\:image\\\\:height]\").attr(\"content\", \"200\");\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n        ATON.SUI.setSelectorColor(ATON.VRoadcast.ucolors[uid%6]);\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n        ATON.SUI.setSelectorColor(ATON.MatHub.colors.defUI);\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    //console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    //htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n    htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMfp'></div>\";\r\n    htmlcontent +=\"<div style='text-align:left'>Switch between first-person and orbit navigation mode</div>\";\r\n    htmlcontent += \"</div>\";\r\n\r\n    if (ATON.Utils.isConnectionSecure()){\r\n        htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n        htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMvr'></div>\";\r\n        htmlcontent +=\"<div style='text-align:left'>Immersive VR mode</div>\";\r\n        htmlcontent += \"</div>\";\r\n\r\n        if (ATON.Utils.isMobile()){\r\n            htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n            htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div>\";\r\n            htmlcontent +=\"<div style='text-align:left'>Enable or disable device-orientation mode</div>\";\r\n            htmlcontent += \"</div>\";\r\n        }\r\n    }\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNMfp\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNMdevori\");\r\n    FE.uiAddButtonVR(\"idNMvr\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n//import AppData from \"./ATON.appdata.js\";\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid   = $(\"meta[name='aton\\\\:appid']\").attr(\"content\");\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (id, patch, mode)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n        if (id.length < 3){\r\n            reject(\"Storage ID too short\");\r\n            return;\r\n        }\r\n        if (patch === undefined){\r\n            reject(\"No storage patch\");\r\n            return;\r\n        }\r\n        if (AppHub._appid === undefined){\r\n            reject(\"No app-ID\");\r\n            return;\r\n        }\r\n\r\n        if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n        let O = {};\r\n        O.wappid = AppHub._appid;\r\n        O.fid    = id;\r\n        O.data   = patch;\r\n        O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n        let jstr = JSON.stringify(O);\r\n        //console.log(jstr);\r\n\r\n        $.ajax({\r\n            url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n            type:\"POST\",\r\n            data: jstr,\r\n            contentType:\"application/json; charset=utf-8\",\r\n            dataType:\"json\",\r\n\r\n            success: (r)=>{\r\n                if (r === undefined){\r\n                    reject(\"Error writing on server\");\r\n                    return;\r\n                }\r\n\r\n                AppHub._appdata[id] = r;\r\n                resolve(r);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.addToStorage(\"myStorage\", {score: 20}).then(...)\r\n*/\r\nAppHub.addToStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.deleteFromStorage(\"myStorage\", {score: {}}).then(...)\r\n*/\r\nAppHub.deleteFromStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {object} id - server-side storage ID\r\n@example\r\nATON.AppHub.getStorage(\"myStorage\").then((s)=>{ console.log(s); })\r\n*/\r\nAppHub.getStorage = (id)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (AppHub._appid === undefined){\r\n            reject();\r\n            return;\r\n        }\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n\r\n        $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data/\"+id+\".json\", (data)=>{\r\n            console.log(data);\r\n            AppHub._appdata[id] = data;\r\n            resolve(data);\r\n        });\r\n    });\r\n\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n// For resuming suspended audio/video streams\r\nATON._onUserInteraction = ()=>{\r\n    if (ATON._elPanoVideo && !ATON._vpanoPlaying) ATON._elPanoVideo.play();\r\n    if (ATON.AudioHub._listener.context.state === 'suspended') ATON.AudioHub._listener.context.resume();\r\n};\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        //if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n        ATON._onUserInteraction();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        ATON._onUserInteraction();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        powerPreference: \"high-performance\",\r\n        //pecision: \"lowp\", //\"mediump\"\r\n        //preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    // Multimedia\r\n    ATON._vpanoPlaying = false;\r\n    ATON._bUserInts = 0;\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    ATON._envMapInt = 1.0;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\n\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0) ATON._onAllReqsCompleted();\r\n};\r\n\r\nATON._onAllReqsCompleted = ()=>{\r\n    // Bounds\r\n    let c = ATON._rootVisible.getBound().center;\r\n    let r = ATON._rootVisible.getBound().radius;\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            ATON.updateDirShadows(c);\r\n        }\r\n    }\r\n\r\n    if (ATON._bAutoLP){\r\n        if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n        else {\r\n            ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n        }\r\n        console.log(\"Auto LP\");\r\n    }\r\n\r\n    //ATON.Utils.graphPostVisitor(ATON._rootVisible);\r\n\r\n    // re-center main pano\r\n    if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n\r\n    ATON.getRootScene().assignLightProbesByProximity();\r\n    //ATON.updateLightProbes();\r\n\r\n    //ATON._bDirtyLP = true;\r\n\r\n    ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n    ATON._postAllReqsCompleted();\r\n\r\n    // FIXME: dirty\r\n    setTimeout( ()=>{\r\n        //if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n        ATON.updateLightProbes();\r\n    }, 1000);\r\n};\r\n\r\nATON._postAllReqsCompleted = (R)=>{\r\n    if (R === undefined) R = ATON._rootVisible;\r\n\r\n    for (let n in R.children){\r\n        let N = R.children[n];\r\n\r\n        if (N && N.toggle){\r\n            ATON._postAllReqsCompleted(N);\r\n            N.toggle(N.visible);\r\n            //if (N.bPickable !== undefined) N.setPickable(N.bPickable);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n\r\n    // SUI\r\n    if (ATON.SUI.gLPIcons === undefined) return;\r\n    SUI.addLPIcon(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps){\r\n        ATON._lps[i].update();\r\n/*\r\n        if (ATON._indLPs === undefined) ATON._indLPs = [];\r\n        if (ATON._indLPs[i]) ATON._mainRoot.remove(ATON._indLPs[i]);\r\n\r\n        ATON._indLPs[i] = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[i]._prevCCtarget );\r\n        ATON._indLPs[i].intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLPs[i] );\r\n\r\n        console.log(ATON._mainRoot);\r\n*/\r\n    }\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._indLP.intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            o.material.combine = THREE.AddOperation;\r\n            o.material.envMapIntensity = ATON._envMapInt;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    path = ATON.Utils.resolveCollectionURL(path);\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n\r\n            ATON._elPanoVideo.onplaying = ()=>{\r\n                console.log(\"VideoPano playing\");\r\n                ATON._vpanoPlaying = true;\r\n            };\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n        //ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n        //ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n\r\n        //console.log(ATON._shadowsNear,ATON._shadowsFar);\r\n    }\r\n\r\n    // must dispose when changing shadow params\r\n    if (ATON._dMainL.shadow.map){\r\n        ATON._dMainL.shadow.map.dispose();\r\n        ATON._dMainL.shadow.map = null;\r\n    }\r\n\r\n    //console.log(ATON._dMainL.shadow.camera);\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n    //ATON._dMainL.shadow.camera.updateProjectionMatrix();\r\n\r\n    ATON._dMainL.shadow.bias = -0.0005;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n// main audio\r\nATON.setGlobalAudio = (audioURL, bLoop)=>{\r\n    if (audioURL === undefined) return;\r\n    if (bLoop === undefined) bLoop = true;\r\n\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    if (ATON._auMain === undefined || ATON._auMain === null) ATON._auMain = new THREE.Audio( ATON.AudioHub._listener );\r\n    else if (ATON._auMain.isPlaying) ATON._auMain.stop();\r\n\r\n    ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n        ATON._auMain.setBuffer( buffer );\r\n        ATON._auMain.setLoop( bLoop );\r\n        //ATON._auMain.setVolume( 2.0 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        ATON._auMain.play();\r\n    });\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    //ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Mat\r\n    ATON.MatHub.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}