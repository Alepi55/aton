{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","_aniMixers","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","_renderer","shadowMap","enabled","_dMainL","shadow","needsUpdate","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","resolveCollectionURL","endsWith","loadTileSet","_assetsManager","then","modelVisitor","t","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","registerAniMixers","ccExtract","_assetReqComplete","_bqScene","_bqSem","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","CCtarget","WebGLCubeRenderTarget","format","RGBEFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","defUI","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","ShaderMaterial","uniforms","color","vertexShader","getDefVertexShader","fragmentShader","selector","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","lp","lpIcon","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","string","urls","match","forEach","replace","PATH_COLLECTION","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","tsurl","ts","TILES","TilesRenderer","setCamera","_camera","setResolutionFromRenderer","onLoadModel","onDisposeModel","_tsets","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","magFilter","LinearFilter","bAnimations","animations","mixer","AnimationMixer","clip","clipAction","play","asset","extras","cc","_ccModels","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","setMainPanoramaRotation","bgcolor","setBackgroundColor","L","mainlight","direction","setMainLightDirection","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","soundscape","global","setGlobalAudio","loop","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","audioURL","Audio","setBuffer","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","STD_FOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","getSelectorRadius","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","_cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_reqPos","_fromPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","_pointerLineGeom","_pointerLineMesh","gpad0","gpad1","_urlHand","HAND_R","_stdActivation","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","bXRconfig","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","H","getControllerGrip","prev","lengthSq","Button","uiid","ratio","fsize","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","trw","STD_BTN_SIZE","trh","_trigger","PlaneGeometry","text","Label","init","mainSelector","_mSelectorSphere","getMaterial","renderOrder","fpTeleport","gTeleport","mTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","gSemIcons","_sync","enableLPIcons","gLPIcons","enableSemIcons","_selectorRad","setSelectorModel","path","bUseStdMat","setSelectorColor","addSemIcon","meshape","semicon","Sprite","addLPIcon","rn","lpicon","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","_hoveredSemNode","isOrbit","_queryDataUI","_queryDataSem","ls","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","PositionalAudio","setRefDistance","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","slerp","handleStateTransition","handleFocusTransition","avol","shift","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","requestSceneState","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","isPlaying","stop","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","FE","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_cLightDir","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","_bVRCsetup","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeAndRequestDefaultHome","getDescription","computeSelectorRanges","_handleHomeReq","addUpdateRoutine","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","attr","PATH_SCENES","sin","uiAddButton","toggleFullScreen","isConnectionSecure","toggle","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","slice","elid","el","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","getVRCclassFromID","checkAuth","sstate","popupVRC","_setupVRCevents","popupUser","uiFunction","idbutton","inputid","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","wappid","fid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_onUserInteraction","_elPanoVideo","_vpanoPlaying","context","state","resume","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","_hoveredUI","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_SUIactivation","U","teleportOnQueriedPoint","playAudioFromSemanticNode","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","_handleQueryScene","profileDevice","Clock","WebGLRenderer","antialias","powerPreference","_fps","_dtAccum","_avgFPScount","_avgFPSaccum","_avgFPS","_bDynamicDensity","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","_bUserInts","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_updRoutines","_bAutoLP","_envMapInt","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_bQuerySemOcclusion","_bQueryNormals","_tgiDur","_tHover","_rcScene","Raycaster","_rcSemantics","_rcUI","_registerRCS","_wappID","setTimedGazeDuration","dt","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","_onAllReqsCompleted","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","_postAllReqsCompleted","updateLightProbes","autoUpdate","Scene","setAsRoot","ambLight","AmbientLight","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","combine","AddOperation","envMapIntensity","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","onplaying","VideoTexture","_matMainPano","_gMainPano","SphereBufferGeometry","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","camera","left","right","bottom","top","mapSize","bias","PCFShadowMap","PCFSoftShadowMap","_updateEnvironment","bLoop","_auMain","_markFPS","fps","getPixelRatio","getDelta","_updateAniMixers","_updateRoutines","_updateTSets","deleteAllUpdateRoutines","nts","clientX","clientY","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Animation mixers\r\n    this._aniMixers = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._dMainL.shadow.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._dMainL.shadow.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n\r\n        //this.toggle(N.visible);\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n\r\n    //this.toggle(this._rootG.visible);\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model (local to collection or complete)\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    url = ATON.Utils.resolveCollectionURL(url);\r\n\r\n    let N = this;\r\n\r\n    if (url.endsWith(\"tileset.json\")){\r\n        ATON.Utils.loadTileSet(url, N);\r\n        return N;\r\n    }\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            // animations\r\n            //ATON.Utils.registerAniMixers(N, data);\r\n\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            // animations\r\n            ATON.Utils.registerAniMixers(N, data);\r\n\r\n            // CC manager\r\n            ATON.Utils.ccExtract(data);\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._bqScene = true;\r\n            if (N.type === ATON.NTYPES.SEM)   ATON._bqSem = true;\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            //console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = undefined; //ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n/*\r\n    this._LP = new THREE.LightProbe();\r\n    this._LP.intensity = 10;\r\n    ATON._mainRoot.add( this._LP );\r\n*/\r\n    \r\n    //this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //this._LP.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBEFormat, //THREE.RGBEFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n    //CC.layers.set(ATON.NTYPES.SCENE);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal/*ATON._mainRoot*/ );\r\n    this._envtex = CCtarget.texture;\r\n\r\n    // new\r\n    //this._LP.copy( THREE.LightProbeGenerator.fromCubeRenderTarget(ATON._renderer, CCtarget) );\r\n    //this._envtex = this._LP;\r\n    \r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        const handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        const evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    const ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.2,0.2,1.0, 0.2) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n\r\n    MatHub.colors.defUI  = new THREE.Color(0,1,0.5);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,1,0.5);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n\r\n    // Default UI\r\n    MatHub.materials.defUI = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            color: { type:'vec3', value: MatHub.colors.defUI },\r\n            opacity: { type:'float', value: 0.8 }\r\n        },\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n            uniform vec3 color;\r\n            uniform float opacity;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.2, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(color.rgb, f * opacity);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n    }); \r\n    \r\n    // Selector\r\n    MatHub.materials.selector = MatHub.materials.defUI.clone();\r\n\r\n/*\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n*/\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = MatHub.materials.defUI.clone();\r\n    MatHub.materials.controllerRay.uniforms.color.value = MatHub.colors.white;\r\n/*\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n*/\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                //float ff = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\r\n\r\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n                //gl_FragColor = vec4(tint.rgb, ff);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        //flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-sem.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n\r\n    MatHub.materials.lp = new THREE.ShaderMaterial({ \r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        //flatShading: false\r\n    }); \r\n\r\n    MatHub.lpIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-lp.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        depthWrite: false, \r\n        //depthTest: false\r\n    });\r\n\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n    MatHub.lpIcon.sizeAttenuation  = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    //Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n    Utils.geomUnitSphere = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.URLify =(string)=>{\r\n    const urls = string.match(/(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)/g);\r\n    if (urls){\r\n        urls.forEach(function(url){\r\n            string = string.replace(url, '<a target=\"_blank\" href=\"' + url + '\">' + url + \"</a>\");\r\n        });\r\n    }\r\n\r\n    return string;\r\n};\r\n\r\nUtils.resolveCollectionURL = (url)=>{\r\n    if (url.startsWith(\"http\")) return url;\r\n    \r\n    return ATON.PATH_COLLECTION+url;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n/*\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.graphPostVisitor = (N)=>{\r\n    //if (N.type === undefined) return;\r\n\r\n    if (!N.visible){\r\n        Utils.setPicking(N, N.type, false);\r\n        return;\r\n    }\r\n/*\r\n    for (let c in N.children){\r\n        let C = N.children[c];\r\n        Utils.graphPostVisitor(C);\r\n    }\r\n*/\r\n    console.log(N);\r\n};\r\n\r\nUtils.loadTileSet = (tsurl, N)=>{\r\n\r\n    let ts = new TILES.TilesRenderer(tsurl);\r\n    if (!ts) return;\r\n\r\n    //ATON._assetReqNew(tsurl);\r\n\r\n    ts.setCamera( ATON.Nav._camera );\r\n    ts.setResolutionFromRenderer( ATON.Nav._camera, ATON._renderer );\r\n\r\n    //ts.errorTarget = ;\r\n\r\n    let bFirst = false;\r\n\r\n    ts.onLoadModel = ( scene )=>{\r\n        Utils.modelVisitor( N, scene );\r\n/*\r\n        if (!bFirst){\r\n            //ATON._assetReqComplete(tsurl);\r\n            ATON._onAllReqsCompleted();\r\n            bFirst = true;\r\n        }\r\n\r\n        scene.traverse( c => {\r\n            if (c.isMesh){\r\n                c.castShadow    = true; //N.castShadow;\r\n                c.receiveShadow = true; //N.receiveShadow;\r\n            }\r\n\r\n            if ( c.material ) {\r\n                //c.originalMaterial = c.material;\r\n                //c.material = wireMat;\r\n                if (N.userData.cMat) c.material = N.userData.cMat;\r\n\r\n                if (c.material.map){\r\n                    c.material.map.minFilter = THREE.LinearMipmapLinearFilter;\r\n                    c.material.map.magFilter = THREE.LinearFilter;\r\n                }\r\n            }\r\n        });\r\n*/\r\n\r\n    };\r\n\r\n    ts.onDisposeModel = (scene)=>{\r\n        scene.traverse( c => {\r\n            if ( c.isMesh ) {\r\n                c.material.dispose();\r\n            }\r\n        });\r\n    };\r\n\r\n    N.add(ts.group);\r\n\r\n    //console.log(ts);\r\n\r\n    ATON._tsets.push(ts);\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n        // perf.\r\n        // TODO: manually call object.updateMatrix()\r\n        //o.matrixAutoUpdate = false;\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n/*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n*/\r\n                }\r\n\r\n                // Fix mipmapping\r\n\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    o.material.map.generateMipmaps = true;\r\n                    o.material.map.anisotropy = ATON.device.isMobile? 0 : ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.registerAniMixers = (N, data)=>{\r\n    let model = data.scene || data.scene[0];\r\n    let bAnimations = false;\r\n\r\n    if (data.animations === undefined) return;\r\n\r\n    let mixer = new THREE.AnimationMixer( model );\r\n    data.animations.forEach((clip)=>{\r\n        mixer.clipAction( clip ).play();\r\n        //console.log(mixer.clipAction( clip ));\r\n        //console.log(N);\r\n        bAnimations = true;\r\n    });\r\n\r\n    if (!bAnimations) return;\r\n\r\n    ATON._aniMixers.push(mixer);\r\n\r\n    if (N._aniMixers === undefined) N._aniMixers = [];\r\n    N._aniMixers.push(mixer);\r\n};\r\n\r\nUtils.ccExtract = (data)=>{\r\n    if (data === undefined) return;\r\n    if (data.asset === undefined) return;\r\n    if (data.asset.extras === undefined) return;\r\n\r\n    let cc = data.asset.extras;\r\n\r\n    ATON._ccModels.push(cc);\r\n    console.log(cc);\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        if (env.bgcolor){\r\n            ATON.setBackgroundColor( new THREE.Color(env.bgcolor[0],env.bgcolor[1],env.bgcolor[2]) );\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // Soundscape\r\n    SceneHub._jsonParsers.soundscape = (soundscape)=>{\r\n        if (soundscape === undefined) return;\r\n\r\n        if (soundscape.global){\r\n            ATON.setGlobalAudio(soundscape.global.url, soundscape.global.loop);\r\n        }\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\nAudioHub.playOnceGlobally = (audioURL)=>{\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    let au = new THREE.Audio( ATON.AudioHub._listener );\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        au.setBuffer( buffer );\r\n        //au.setVolume( 2.0 );\r\n        //au.setPlaybackRate(0.9);\r\n        au.play();\r\n    });\r\n};\r\n\r\n/* TODO:\r\nAudioHub.addToSoundscape = (auid, audioURL, position, radius)=>{\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        A._auTalk.setBuffer( buffer );\r\n        A._auTalk.setLoop( false );\r\n        //A._auTalk.setVolume( 0.5 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        A._auTalk.play();\r\n    });\r\n};\r\n*/\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.01; //0.05;\r\nNav.STD_FAR  = 800.0; // 1000\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV().setFOV(ATON.Nav.STD_FOV); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 100.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // we (re)set selector radius to 50cm\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.01;\r\n        C.maxDistance = 0.01;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        ATON.XR._cam = ATON._renderer.xr.getCamera(Nav._camera);\r\n        //console.log(ATON.XR._cam);\r\n\r\n        ATON.XR._cam.getWorldPosition( Nav._currPOV.pos );\r\n        ATON.XR._cam.getWorldQuaternion( Nav._qOri );\r\n        ATON.XR._cam.getWorldDirection( Nav._vDir );\r\n\r\n\r\n        //Nav._currPOV.pos.copy(ATON.XR._cam.position);\r\n        //Nav._qOri.copy(ATON.XR._cam.quaternion);\r\n\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    const ctrl  = Nav._controls;\r\n    const cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    //Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\n// Not used for now\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n        ATON.XR._currPos.copy(ATON.XR._reqPos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n/*\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n*/\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    //let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    //T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = bs.center.x - (r * Nav._vDir.x);\r\n    E.y = bs.center.y - (r * Nav._vDir.y);\r\n    E.z = bs.center.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(bs.center);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nSet and request home viewpoint\r\n@param {POV} pov - the home POV\r\n@param {number} duration - transition duration\r\n*/\r\nNav.setAndRequestHomePOV = (pov, duration)=>{\r\n    Nav.setHomePOV(pov);\r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._cam = undefined;\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR._pointerLineGeom = undefined;\r\n    XR._pointerLineMesh = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) ATON._stdActivation(); //XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    const P = ATON._queryDataScene.p;\r\n    //const N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\n/* Deprecated\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n*/\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n    if (XR.currSession) return; // Already running\r\n\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    // Promised\r\n\tATON._renderer.xr.setSession( session ).then(()=>{\r\n        XR.currSession = session;\r\n        console.log(XR.currSession);\r\n\r\n        // Disable panorama on AR sessions\r\n        if (XR._sessionType === \"immersive-ar\"){\r\n            ATON._mainRoot.background = null;\r\n            if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n        }\r\n\r\n        // get xrRefSpace\r\n        /*\r\n        session.requestReferenceSpace('local').then((refSpace) => {\r\n            xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n        });\r\n        */\r\n\r\n        for (let c = 0; c < 2; c++){\r\n            const C = ATON._renderer.xr.getController(c);\r\n\r\n            if (C !== undefined && !C.userData.bXRconfig){\r\n                //console.log(C);\r\n\r\n                C.visible = false;\r\n                C.userData.bXRconfig = true;\r\n\r\n                C.addEventListener( 'connected', (e) => {\r\n                    //console.log( e.data.handedness );\r\n                    let hand = e.data.handedness;\r\n                    \r\n                    //console.log(e.data);\r\n                    console.log(\"Hand \"+hand);\r\n\r\n                    if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                    else {\r\n                        if (hand === \"right\") XR._setupControllerR(C, true);\r\n                        else { // FIXME:\r\n\r\n                            //XR._setupControllerR(C, false);\r\n                            \r\n                            C.addEventListener('selectstart', ()=>{\r\n                                //if (XR._handleUISelection()) return;\r\n                                ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                                \r\n                                console.log(\"Head-aligned select\");\r\n                            });\r\n                            C.addEventListener('selectend', ()=>{ \r\n                                ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                            });\r\n\r\n                            ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    /*\r\n        let C0 = ATON._renderer.xr.getController(0);\r\n        let C1 = ATON._renderer.xr.getController(1);\r\n\r\n        console.log(C0);\r\n        //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n        // Controller 0\r\n        if (C0){\r\n            C0.visible = false;\r\n\r\n            C0.addEventListener( 'connected', (e) => {\r\n\r\n                //console.log( e.data.handedness );\r\n\r\n                if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n                else XR._setupControllerR(C0);\r\n\r\n                //C0.gamepad = e.data.gamepad;\r\n                //console.log(XR.controller0.gamepad);\r\n\r\n                //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n                //let gp = C0.gamepad;\r\n                //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n            });\r\n        }\r\n\r\n        // Controller 1\r\n        if (C1){\r\n            C1.visible = false;\r\n\r\n            C1.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n\r\n                if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n                else XR._setupControllerR(C1);\r\n\r\n                //C1.gamepad = e.data.gamepad;\r\n                \r\n                //let gp = C1.gamepad;\r\n                //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n            });\r\n        }\r\n    */\r\n\r\n        // reparent current camera to the XR rig\r\n        XR.rig.add( ATON.Nav._camera );\r\n\r\n        XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n        console.log(ATON.Nav._currPOV.pos);\r\n\r\n        XR._bPresenting = true;\r\n        console.log(\"XR now presenting\");\r\n\r\n        //XR.setupControllersUI();\r\n\r\n        ATON.fireEvent(\"XRmode\", true);\r\n\r\n        //console.log(session);\r\n\r\n    });\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            optionalFeatures: [\r\n                //\"local\",\r\n                //\"local-floor\",\r\n                ///\"bounded-floor\",\r\n\r\n                //\"hand-tracking\",\r\n\r\n                //\"high-refresh-rate\",\r\n                //\"high-fixed-foveation-level\",\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 1.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            XR._pointerLineGeom = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            //XR._pointerLineGeom = new THREE.CylinderGeometry( raytick,raytick, raylen, 4 );\r\n\r\n            XR._pointerLineGeom.rotateX( -Math.PI / 2 );\r\n            XR._pointerLineGeom.translate(0,0,-(raylen*0.5));\r\n\r\n            XR._pointerLineMesh = new THREE.Mesh( XR._pointerLineGeom, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( /*mesh.clone()*/ XR._pointerLineMesh );\r\n            XR._pointerLineMesh.visible = false;\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        //XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        //XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid, ratio=1.0, fsize=1.0){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1*ratio,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"\",\r\n        fontSize: 0.02*fsize,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    //this.uiText.position.set(0,0,-0.01);\r\n    this.container.add(this.uiText);\r\n\r\n    // Trigger geom\r\n    let trw = ATON.SUI.STD_BTN_SIZE * 0.9 * ratio;\r\n    let trh = ATON.SUI.STD_BTN_SIZE * 0.9;\r\n    this._trigger = new THREE.Mesh(\r\n        new THREE.PlaneGeometry( trw, trh, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\nsetBackgroundOpacity(f){\r\n    this.container.set({ backgroundOpacity: f });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI._mSelectorSphere = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") );\r\n    SUI._mSelectorSphere.renderOrder = 100;\r\n    SUI.mainSelector.add( SUI._mSelectorSphere );\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    \r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.9, 32,1, true);\r\n    //let gTeleport = new THREE.CylinderGeometry(0.4,0.4, 0.9, 32,1, true);\r\n\r\n    let mTeleport = new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") );\r\n    mTeleport.renderOrder = 100;\r\n    SUI.fpTeleport.add( mTeleport );\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    //SUI.enableSemIcons();\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    // InfoNode scale\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 50.0 : 60.0; //note: inverse. Orginally 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        if (SUI.gSemIcons) SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        if (SUI.gSemIcons) SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    SUI._sync = 0;\r\n};\r\n\r\n// note: before adding LPs\r\nSUI.enableLPIcons = ()=>{\r\n    SUI.gLPIcons = ATON.createUINode();\r\n    SUI.gLPIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gLPIcons);\r\n};\r\n\r\n\r\nSUI.enableSemIcons = ()=>{\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n/**\r\nSet selector color\r\n@param {THREE.Color} color - color\r\n@param {number} opacity - (optional) opacity \r\n*/\r\nSUI.setSelectorColor = (color, opacity)=>{\r\n    ATON.MatHub.materials.selector.uniforms.color.value = color;\r\n    if (opacity !== undefined) ATON.MatHub.materials.selector.uniforms.opacity.value = opacity;\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    if (SUI.gSemIcons === undefined) return;\r\n\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.addLPIcon = (LP)=>{\r\n    if (SUI.gLPIcons === undefined) return;\r\n\r\n    let rn = LP._near;\r\n    let isize = 0.1; //rn * 0.3;\r\n\r\n    let lpicon = new THREE.Sprite( ATON.MatHub.lpIcon );\r\n    lpicon.position.copy(LP.pos);\r\n    lpicon.scale.set(isize,isize,isize);\r\n\r\n    let s = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.materials.lp );\r\n    s.scale.set(rn,rn,rn);\r\n    s.position.copy(LP.pos);\r\n\r\n    SUI.gLPIcons.add( lpicon );\r\n    SUI.gLPIcons.add( s );\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n\r\n    //ThreeMeshUI.update();\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    \r\n    ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {array} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n    let marginf = 1.1;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num * marginf) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE * marginf;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        if (button){\r\n            button.position.set((i*SUI.STD_BTN_SIZE*marginf)-m, 0.0, 0.005);\r\n            cont.add(button);\r\n        }\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n/*\r\n    SUI._sync = (SUI._sync+1) % 10;\r\n    if (SUI._sync===0){\r\n        ThreeMeshUI.update();\r\n        //console.log(\"sync\");\r\n    } \r\n*/\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (SUI.gSemIcons){\r\n        if (ATON.Nav._bInteracting){\r\n            SUI.gSemIcons.hide();\r\n        }\r\n        else {\r\n            if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n        }\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Pointer-line\r\n    if (ATON.XR._pointerLineMesh){\r\n\r\n        let d = 0.0;\r\n        if (ATON._queryDataScene) d = ATON._queryDataScene.d;\r\n        if (ATON._queryDataUI && (d <= 0.0 || ATON._queryDataUI.d<d)){\r\n            d = ATON._queryDataUI.d;\r\n            SUI.mainSelector.visible = false;\r\n            SUI.fpTeleport.visible   = false;\r\n        }\r\n\r\n        if (d>0.0){\r\n            ATON.XR._pointerLineMesh.visible = true;\r\n            ATON.XR._pointerLineMesh.scale.set(1,1,d);\r\n        }\r\n        else ATON.XR._pointerLineMesh.visible = false;\r\n    }\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        // Immersive Session\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.x -= (ATON.XR.controller0dir.x * 0.1);\r\n                SUI.infoNode.position.y -= (ATON.XR.controller0dir.y * 0.1); // + 0.1;\r\n                SUI.infoNode.position.z -= (ATON.XR.controller0dir.z * 0.1);\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        // Default session\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            const ls = ATON._queryDataSem.d * (ATON.Nav._currPOV.fov / SUI._labelScale);\r\n            SUI.infoNode.setScale(ls);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n\r\n    //this._auTalk = undefined;\r\n\r\n    // Positional audio (talk)\r\n    this._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n    this._auTalk.setRefDistance(30.0);\r\n    this.add(this._auTalk); // move with avatar\r\n\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\nsetTalkDistance(r){\r\n    if (r > 0.0) this._auTalk.setRefDistance(r);\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = ATON.MatHub.materials.defUI.clone();\r\n    mat.uniforms.color.value = VRoadcast.ucolors[0];\r\n/*\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n*/\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        //M.color = VRoadcast.ucolors[c];\r\n        M.uniforms.color.value = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket']; \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n        //opts.transports = ['websocket'];\r\n        //opts.upgrade = false;\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n/*\r\n        if (A._auTalk === undefined || A._auTalk === null){\r\n            A._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n            A._auTalk.setRefDistance(50.0);\r\n            A.add(A._auTalk);\r\n        }\r\n        else A._auTalk.stop();\r\n*/\r\n        if (A._auTalk.isPlaying) A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n    if (!VRoadcast._connected) return;\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n    ATON._bqSem = true;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n    ATON._bqSem = true;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n    ATON._bqSem = true;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    if (ATON.SUI.gSemIcons === undefined) return true;\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n    FE._cLightDir = new THREE.Vector3();\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n    FE._bVRCsetup = false;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\nFE._handleHomeReq = ()=>{\r\n    if (FE._bReqHome) return;\r\n\r\n    FE._bReqHome = true;\r\n\r\n    if (ATON.Nav.homePOV === undefined){\r\n        ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        return;\r\n    }\r\n    \r\n    ATON.Nav.requestHome(1.0);\r\n    //console.log(ATON.Nav.homePOV);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(1.0);\r\n    });\r\n\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        if (ATON._ccModels.length>0) $(\"#btn-cc\").show();\r\n        \r\n        FE.computeSelectorRanges();\r\n        if (ATON.Nav.isOrbit()) ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        FE._handleHomeReq();\r\n    });\r\n\r\n    //ATON.on(\"frame\", FE._update);\r\n    ATON.addUpdateRoutine(FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    $(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:secure_url]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:type]\").attr(\"content\", \"image/png\");\r\n    $(\"meta[property=og\\\\:image\\\\:width]\").attr(\"content\", \"200\");\r\n    $(\"meta[property=og\\\\:image\\\\:height]\").attr(\"content\", \"200\");\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    //if (ATON.XR._bPresenting) return;\r\n\r\n    if (FE._bControlLight){\r\n        // Normalized\r\n        const sx = ATON._screenPointerCoords.x;\r\n        const sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        FE._cLightDir.x = -Math.cos(sx * Math.PI);\r\n        FE._cLightDir.y = -sy * 2.0;\r\n        FE._cLightDir.z = -Math.sin(sx * Math.PI);\r\n\r\n        //FE._cLightDir.x = ATON.Nav._vDir.x + (sx);\r\n\r\n        FE._cLightDir.normalize();\r\n\r\n        ATON.setMainLightDirection(FE._cLightDir);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //const sx = ATON._screenPointerCoords.x;\r\n        const f = ATON._screenPointerCoords.y;\r\n\r\n        const r = ATON.SUI.mainSelector.scale.x + f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n// Setup VRC events\r\nFE._setupVRCevents = ()=>{\r\n    if (FE._bVRCsetup) return;\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n        ATON.SUI.setSelectorColor(ATON.VRoadcast.ucolors[uid%6]);\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n        ATON.SUI.setSelectorColor(ATON.MatHub.colors.defUI);\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    FE._bVRCsetup = true;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n    FE._setupVRCevents();\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    //console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    //htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n    htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMfp'></div>\";\r\n    htmlcontent +=\"<div style='text-align:left'>Switch between first-person and orbit navigation mode</div>\";\r\n    htmlcontent += \"</div>\";\r\n\r\n    if (ATON.Utils.isConnectionSecure()){\r\n        htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n        htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMvr'></div>\";\r\n        htmlcontent +=\"<div style='text-align:left'>Immersive VR mode</div>\";\r\n        htmlcontent += \"</div>\";\r\n\r\n        if (ATON.Utils.isMobile()){\r\n            htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n            htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div>\";\r\n            htmlcontent +=\"<div style='text-align:left'>Enable or disable device-orientation mode</div>\";\r\n            htmlcontent += \"</div>\";\r\n        }\r\n    }\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNMfp\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNMdevori\");\r\n    FE.uiAddButtonVR(\"idNMvr\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n//import AppData from \"./ATON.appdata.js\";\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid   = $(\"meta[name='aton\\\\:appid']\").attr(\"content\");\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (id, patch, mode)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n        if (id.length < 3){\r\n            reject(\"Storage ID too short\");\r\n            return;\r\n        }\r\n        if (patch === undefined){\r\n            reject(\"No storage patch\");\r\n            return;\r\n        }\r\n        if (AppHub._appid === undefined){\r\n            reject(\"No app-ID\");\r\n            return;\r\n        }\r\n\r\n        if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n        let O = {};\r\n        O.wappid = AppHub._appid;\r\n        O.fid    = id;\r\n        O.data   = patch;\r\n        O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n        let jstr = JSON.stringify(O);\r\n        //console.log(jstr);\r\n\r\n        $.ajax({\r\n            url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n            type:\"POST\",\r\n            data: jstr,\r\n            contentType:\"application/json; charset=utf-8\",\r\n            dataType:\"json\",\r\n\r\n            success: (r)=>{\r\n                if (r === undefined){\r\n                    reject(\"Error writing on server\");\r\n                    return;\r\n                }\r\n\r\n                AppHub._appdata[id] = r;\r\n                resolve(r);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.addToStorage(\"myStorage\", {score: 20}).then(...)\r\n*/\r\nAppHub.addToStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.deleteFromStorage(\"myStorage\", {score: {}}).then(...)\r\n*/\r\nAppHub.deleteFromStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {object} id - server-side storage ID\r\n@example\r\nATON.AppHub.getStorage(\"myStorage\").then((s)=>{ console.log(s); })\r\n*/\r\nAppHub.getStorage = (id)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (AppHub._appid === undefined){\r\n            reject();\r\n            return;\r\n        }\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n\r\n        $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data/\"+id+\".json\", (data)=>{\r\n            console.log(data);\r\n            AppHub._appdata[id] = data;\r\n            resolve(data);\r\n        });\r\n    });\r\n\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n// For resuming suspended audio/video streams\r\nATON._onUserInteraction = ()=>{\r\n    if (ATON._elPanoVideo && !ATON._vpanoPlaying) ATON._elPanoVideo.play();\r\n    if (ATON.AudioHub._listener.context.state === 'suspended') ATON.AudioHub._listener.context.resume();\r\n};\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        ATON._onUserInteraction();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        ATON._onUserInteraction();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Base/default routine on generic user activation\r\n// E.g. double-tap, VR controller trigger, etc.\r\nATON._SUIactivation = ()=>{\r\n    const U = ATON.getUINode(ATON._hoveredUI);\r\n    \r\n    if (U === undefined) return false;\r\n    if (U.onSelect === undefined) return false;\r\n\r\n    U.onSelect();\r\n    return true;\r\n};\r\n\r\n\r\nATON._stdActivation = ()=>{\r\n    //if (!ATON.Nav._bControl) return;\r\n\r\n    // Handle SUI nodes\r\n    if (ATON._SUIactivation()) return;\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    // Handle active immersive AR/VR session\r\n    if (ATON.XR._bPresenting){\r\n        if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n        ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n        return;\r\n    }\r\n\r\n    // Non-immersive sessions\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            //let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    ATON._stdActivation();\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    const wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n\r\n        powerPreference: \"high-performance\",\r\n        ///pecision: \"lowp\", //\"mediump\"\r\n        //preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._dtAccum     = 0.0;\r\n    ATON._avgFPScount = 0.0;\r\n    ATON._avgFPSaccum = 0.0;\r\n    ATON._avgFPS = 60.0;\r\n\r\n    ATON._bDynamicDensity = false;\r\n\r\n    ATON._aniMixers = [];\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    // Multimedia\r\n    ATON._vpanoPlaying = false;\r\n    ATON._bUserInts = 0;\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // CC Manager\r\n    ATON._ccModels = [];\r\n\r\n    // Update routines\r\n    ATON._updRoutines = [];\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    ATON._envMapInt = 1.0;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // TileSets (3D Tiles)\r\n    ATON._tsets = [];\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n    \r\n    ATON._bqScene = false;\r\n    ATON._bqSem   = false;\r\n\r\n    // Timed Gaze Input\r\n    ATON._tgiDur = undefined; // set to seconds (e.g. 2.0 to enable)\r\n    ATON._tHover  = undefined;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nATON.setTimedGazeDuration = (dt)=>{\r\n    ATON._tgiDur = dt;\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\n\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0) ATON._onAllReqsCompleted();\r\n};\r\n\r\nATON._onAllReqsCompleted = ()=>{\r\n    // Bounds\r\n    let c = ATON._rootVisible.getBound().center;\r\n    let r = ATON._rootVisible.getBound().radius;\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            ATON.updateDirShadows(c);\r\n        }\r\n    }\r\n\r\n    if (ATON._bAutoLP){\r\n        if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n        else {\r\n            ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n        }\r\n        console.log(\"Auto LP\");\r\n    }\r\n\r\n    //ATON.Utils.graphPostVisitor(ATON._rootVisible);\r\n\r\n    // re-center main pano\r\n    if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n\r\n    ATON.getRootScene().assignLightProbesByProximity();\r\n    //ATON.updateLightProbes();\r\n\r\n    //ATON._bDirtyLP = true;\r\n\r\n    ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n    ATON._postAllReqsCompleted();\r\n\r\n    // FIXME: dirty\r\n    setTimeout( ()=>{\r\n        //if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n        ATON.updateLightProbes();\r\n\r\n        // Lazy shadows updates (performances)\r\n        if (ATON._renderer.shadowMap.enabled && ATON._bShadowsFixedBound && ATON._aniMixers.length === 0){\r\n            ATON._dMainL.shadow.autoUpdate = false;\r\n            console.log(\"Lazy shadows\");\r\n        }\r\n    }, 1000);\r\n};\r\n\r\nATON._postAllReqsCompleted = (R)=>{\r\n    if (R === undefined) R = ATON._rootVisible;\r\n\r\n    for (let n in R.children){\r\n        let N = R.children[n];\r\n\r\n        if (N && N.toggle){\r\n            ATON._postAllReqsCompleted(N);\r\n            N.toggle(N.visible);\r\n            //if (N.bPickable !== undefined) N.setPickable(N.bPickable);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n    //ATON._mainRoot.fog = new THREE.Fog(new THREE.Color( 0.7,0.7,0.7 ), 5, 200);\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    //ATON._rootUI.renderOrder = 10;\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n    //ATON._mainRoot.fog = new THREE.Fog(bg, 5, 200);\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n\r\n    // SUI\r\n    if (ATON.SUI.gLPIcons === undefined) return;\r\n    SUI.addLPIcon(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps){\r\n        ATON._lps[i].update();\r\n/*\r\n        if (ATON._indLPs === undefined) ATON._indLPs = [];\r\n        if (ATON._indLPs[i]) ATON._mainRoot.remove(ATON._indLPs[i]);\r\n\r\n        ATON._indLPs[i] = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[i]._prevCCtarget );\r\n        ATON._indLPs[i].intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLPs[i] );\r\n\r\n        console.log(ATON._mainRoot);\r\n*/\r\n    }\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._indLP.intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            o.material.combine = THREE.AddOperation;\r\n            o.material.envMapIntensity = ATON._envMapInt;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    path = ATON.Utils.resolveCollectionURL(path);\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n\r\n            ATON._elPanoVideo.onplaying = ()=>{\r\n                console.log(\"VideoPano playing\");\r\n                ATON._vpanoPlaying = true;\r\n            };\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //tpano.minFilter = THREE.NearestFilter;\r\n\t\t//tpano.generateMipmaps = false;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //tpano.minFilter = THREE.NearestFilter;\r\n\t\ttpano.generateMipmaps = true;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( /*ATON.Nav.STD_FAR * 0.8*/1.0, 60,60 );\r\n    //ATON._gMainPano = new THREE.SphereGeometry( ATON.Nav.STD_FAR * 0.8, 60,60 );\r\n    \r\n    ATON._gMainPano.castShadow = false;\r\n    ATON._gMainPano.receiveShadow = false;\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano,\r\n        ///emissive: tpano,\r\n        //fog: false,\r\n        \r\n        depthTest: false,\r\n        depthWrite: false,\r\n        \r\n        ///depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.BackSide, // THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON._mMainPano.renderOrder = -100;\r\n    \r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.8);\r\n    ///ATON.setMainPanoramaRadius(100.0);\r\n\r\n    // FIXME: dirty, find another way\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        if (ATON.Nav._currPOV) ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    if (ATON._renderer.shadowMap.enabled) ATON._dMainL.shadow.needsUpdate = true;\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n        //ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n        //ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n\r\n        //console.log(ATON._shadowsNear,ATON._shadowsFar);\r\n    }\r\n\r\n    // must dispose when changing shadow params\r\n    if (ATON._dMainL.shadow.map){\r\n        ATON._dMainL.shadow.map.dispose();\r\n        ATON._dMainL.shadow.map = null;\r\n    }\r\n\r\n    //console.log(ATON._dMainL.shadow.camera);\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n    //ATON._dMainL.shadow.camera.updateProjectionMatrix();\r\n\r\n    ATON._dMainL.shadow.bias = -0.0005;\r\n    //ATON._dMainL.shadow.normalBias = 0.05;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        if (ATON.device.isMobile) ATON._renderer.shadowMap.type = THREE.PCFShadowMap;\r\n        else ATON._renderer.shadowMap.type = THREE.PCFSoftShadowMap; // THREE.VSMShadowMap; \r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        ATON._dMainL.shadow.needsUpdate = true;\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n// main audio\r\nATON.setGlobalAudio = (audioURL, bLoop)=>{\r\n    if (audioURL === undefined) return;\r\n    if (bLoop === undefined) bLoop = true;\r\n\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    if (ATON._auMain === undefined || ATON._auMain === null) ATON._auMain = new THREE.Audio( ATON.AudioHub._listener );\r\n    else if (ATON._auMain.isPlaying) ATON._auMain.stop();\r\n\r\n    ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n        ATON._auMain.setBuffer( buffer );\r\n        ATON._auMain.setLoop( bLoop );\r\n        //ATON._auMain.setVolume( 2.0 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        ATON._auMain.play();\r\n    });\r\n};\r\n\r\n// FPS monitoring\r\nATON._markFPS = ()=>{\r\n    if (ATON._numReqLoad > 0) return;\r\n\r\n    const fps = (1.0 / ATON._dt);\r\n\r\n    ATON._avgFPScount += 1.0;\r\n    ATON._dtAccum += ATON._dt;\r\n    ATON._avgFPSaccum += fps;\r\n\r\n    if (ATON._dtAccum < 1.0) return;\r\n\r\n    ATON._fps = ATON._avgFPSaccum / ATON._avgFPScount;\r\n    //console.log(ATON._fps);\r\n\r\n    ATON._avgFPSaccum = 0.0;\r\n    ATON._avgFPScount = 0.0;\r\n    ATON._dtAccum = 0.0;\r\n\r\n    // Dynamic density\r\n    if (!ATON._bDynamicDensity) return;\r\n    let d = ATON._renderer.getPixelRatio();\r\n\r\n    if (ATON._fps < 30.0){\r\n        d *= 0.75;\r\n        if (d >= 0.1){\r\n            ATON._renderer.setPixelRatio( d );\r\n            console.log(d);\r\n        }\r\n    } \r\n    if (ATON._fps > 50.0){\r\n        d *= 1.33;\r\n        if (d <= ATON._stdpxd){\r\n            ATON._renderer.setPixelRatio( d );\r\n            console.log(d);\r\n        }\r\n    }\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    ATON._dt = ATON._clock.getDelta();\r\n    //ATON._fps = (1.0 / ATON._dt);\r\n    \r\n    ATON._markFPS();\r\n\r\n    //ATON.fireEvent(\"preframe\");\r\n\r\n    // Render\r\n    //ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n    else ATON.Nav._controls.update(ATON._dt);\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries(); // k\r\n\r\n    // Navigation system\r\n    ATON.Nav.update(); // k\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // SUI\r\n    ATON.SUI.update(); // k\r\n\r\n    // Mat\r\n    ATON.MatHub.update(); // k\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    // 3D models animations\r\n    ATON._updateAniMixers();\r\n\r\n    //ATON.fireEvent(\"frame\");\r\n    ATON._updateRoutines();\r\n\r\n    // TileSets\r\n    ATON._updateTSets();\r\n\r\n    // Render\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n};\r\n\r\nATON.addUpdateRoutine = (U)=>{\r\n    if (U === undefined) return;\r\n    ATON._updRoutines.push(U);\r\n};\r\n\r\nATON.deleteAllUpdateRoutines = ()=>{\r\n    ATON._updRoutines = [];\r\n};\r\n\r\nATON._updateRoutines = ()=>{\r\n    let n = ATON._updRoutines.length;\r\n    if (n <= 0) return;\r\n\r\n    for (let u=0; u<n; u++) ATON._updRoutines[u]();\r\n};\r\n\r\n//================================================\r\nATON._updateTSets = ()=>{\r\n    const nts = ATON._tsets.length;\r\n    if (nts <= 0) return;\r\n\r\n    ATON.Nav._camera.updateMatrixWorld();\r\n\r\n    for (let ts=0; ts<nts; ts++){\r\n        const TS = ATON._tsets[ts];   \r\n        TS.update();\r\n    }\r\n};\r\n\r\n\r\nATON._updateAniMixers = ()=>{\r\n    let num = ATON._aniMixers.length;\r\n    if (num < 1) return;\r\n\r\n    for (let m=0; m<num; m++){\r\n        let M = ATON._aniMixers[m];\r\n        M.update( ATON._dt );\r\n        //console.log(M);\r\n    }\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // interleaving mode\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n    //ATON._rcRR = (ATON._rcRR+1) % 3;\r\n\r\n    ATON._handleQueryUI();\r\n\r\n    if (ATON._bqScene) ATON._handleQueryScene();\r\n    if (ATON._bqSem)   ATON._handleQuerySemantics();\r\n    \r\n    //ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n\r\n    // Timed gaze input\r\n    if (ATON._tgiDur === undefined) return;\r\n    if (ATON._tHover === undefined) return;\r\n    //console.log(ATON._tHover);\r\n\r\n    const d = ATON._clock.elapsedTime - ATON._tHover;\r\n    if (d >= ATON._tgiDur){\r\n        ATON._stdActivation();\r\n\r\n        ATON._tHover = undefined;\r\n    }\r\n\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    const hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    const h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    const hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        ATON._tHover = undefined;\r\n        return;\r\n    }\r\n\r\n    const h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            ATON._tHover = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    const L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    const hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n                \r\n                ATON._tHover = undefined;\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n\r\n            ATON._tHover = ATON._clock.elapsedTime;\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    const hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            const S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        ATON._tHover = undefined;\r\n        return;\r\n    }\r\n\r\n    const h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                const S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            ATON._tHover = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    const L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    const hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                const S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n                \r\n                ATON._tHover = undefined;\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            const S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n\r\n            ATON._tHover = ATON._clock.elapsedTime;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}