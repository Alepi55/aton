{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","_aniMixers","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","_renderer","shadowMap","enabled","needsUpdate","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","resolveCollectionURL","_assetsManager","then","modelVisitor","t","registerAniMixers","data","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","model","scene","_assetReqComplete","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","CCtarget","WebGLCubeRenderTarget","format","RGBAFormat","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","defUI","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","ShaderMaterial","uniforms","color","vertexShader","getDefVertexShader","fragmentShader","flatShading","selector","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","lp","lpIcon","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","PATH_COLLECTION","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","graphPostVisitor","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","minFilter","LinearMipmapLinearFilter","magFilter","LinearFilter","mixer","AnimationMixer","animations","forEach","clip","clipAction","play","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","replace","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","soundscape","global","setGlobalAudio","loop","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","urls","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","audioURL","Audio","setBuffer","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","STD_FOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","getSelectorRadius","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","handleMotion","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_reqPos","_fromPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","_pointerLineGeom","_pointerLineMesh","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","fpTeleport","gTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","gSemIcons","enableLPIcons","gLPIcons","enableSemIcons","_selectorRad","setSelectorModel","path","bUseStdMat","setSelectorColor","addSemIcon","meshape","semicon","Sprite","addLPIcon","rn","lpicon","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","isOrbit","_queryDataUI","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","PositionalAudio","setRefDistance","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","requestSceneState","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","isPlaying","stop","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeAndRequestDefaultHome","getDescription","computeSelectorRanges","_handleHomeReq","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","attr","PATH_SCENES","sin","uiAddButton","toggleFullScreen","isConnectionSecure","toggle","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","elid","el","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","popupVRC","getVRCclassFromID","checkAuth","sstate","popupUser","uiFunction","idbutton","inputid","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","wappid","fid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_onUserInteraction","_elPanoVideo","_vpanoPlaying","context","state","resume","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","powerPreference","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","_bUserInts","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_envMapInt","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","_onAllReqsCompleted","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","_postAllReqsCompleted","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","combine","AddOperation","envMapIntensity","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","onplaying","VideoTexture","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","bias","PCFSoftShadowMap","_updateEnvironment","bLoop","_auMain","dt","getDelta","_updateAniMixers","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Animation mixers\r\n    this._aniMixers = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._renderer.shadowMap.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._renderer.shadowMap.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n\r\n        //this.toggle(N.visible);\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n\r\n    //this.toggle(this._rootG.visible);\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model (local to collection or complete)\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    url = ATON.Utils.resolveCollectionURL(url);\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            // animations\r\n            ATON.Utils.registerAniMixers(N, data);\r\n\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            // animations\r\n            ATON.Utils.registerAniMixers(N, data);\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = undefined; //ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n/*\r\n    this._LP = new THREE.LightProbe();\r\n    this._LP.intensity = 10;\r\n    ATON._mainRoot.add( this._LP );\r\n*/\r\n    \r\n    //this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //this._LP.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBAFormat, //THREE.RGBEFormat,\r\n        //generateMipmaps: true,\r\n        //minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n    this._envtex = CCtarget.texture;\r\n\r\n    // new\r\n    //this._LP.copy( THREE.LightProbeGenerator.fromCubeRenderTarget(ATON._renderer, CCtarget) );\r\n    //this._envtex = this._LP;\r\n    \r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.2,0.2,1.0, 0.2) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n\r\n    MatHub.colors.defUI  = new THREE.Color(0,1,0.5);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,1,0.5);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n\r\n    // Default UI\r\n    MatHub.materials.defUI = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            color: { type:'vec3', value: MatHub.colors.defUI },\r\n            opacity: { type:'float', value: 0.8 }\r\n        },\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n            uniform vec3 color;\r\n            uniform float opacity;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.2, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(color.rgb, f * opacity);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n    \r\n    // Selector\r\n    MatHub.materials.selector = MatHub.materials.defUI.clone();\r\n\r\n/*\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n*/\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = MatHub.materials.defUI.clone();\r\n    MatHub.materials.controllerRay.uniforms.color.value = MatHub.colors.white;\r\n/*\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n*/\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                //float ff = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\r\n\r\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n                //gl_FragColor = vec4(tint.rgb, ff);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-sem.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n\r\n    MatHub.materials.lp = new THREE.ShaderMaterial({ \r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n\r\n    MatHub.lpIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-lp.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        depthWrite: false, \r\n        //depthTest: false\r\n    });\r\n\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n    MatHub.lpIcon.sizeAttenuation  = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.resolveCollectionURL = (url)=>{\r\n    if (url.startsWith(\"http\")) return url;\r\n    \r\n    return ATON.PATH_COLLECTION+url;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n};\r\n\r\nUtils.graphPostVisitor = (N)=>{\r\n    //if (N.type === undefined) return;\r\n\r\n    if (!N.visible){\r\n        Utils.setPicking(N, N.type, false);\r\n        return;\r\n    }\r\n\r\n    for (let c in N.children){\r\n        let C = N.children[c];\r\n        Utils.graphPostVisitor(C);\r\n    }\r\n\r\n    console.log(N);\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n        // perf.\r\n        // TODO: manually call object.updateMatrix()\r\n        //o.matrixAutoUpdate = false;\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n/*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n*/\r\n                }\r\n\r\n                // Fix mipmapping\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON.device.isMobile? 0 : ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.registerAniMixers = (N, data)=>{\r\n    let model = data.scene || data.scene[0];\r\n\r\n    let mixer = new THREE.AnimationMixer( model );\r\n    data.animations.forEach((clip)=>{\r\n        mixer.clipAction( clip ).play();\r\n        //console.log(mixer.clipAction( clip ));\r\n        console.log(N);\r\n    });\r\n    ATON._aniMixers.push(mixer);\r\n\r\n    if (N._aniMixers === undefined) N._aniMixers = [];\r\n    N._aniMixers.push(mixer);\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // Soundscape\r\n    SceneHub._jsonParsers.soundscape = (soundscape)=>{\r\n        if (soundscape === undefined) return;\r\n\r\n        if (soundscape.global){\r\n            ATON.setGlobalAudio(soundscape.global.url, soundscape.global.loop);\r\n        }\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\nAudioHub.playOnceGlobally = (audioURL)=>{\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    let au = new THREE.Audio( ATON.AudioHub._listener );\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        au.setBuffer( buffer );\r\n        //au.setVolume( 2.0 );\r\n        //au.setPlaybackRate(0.9);\r\n        au.play();\r\n    });\r\n};\r\n\r\n/* TODO:\r\nAudioHub.addToSoundscape = (auid, audioURL, position, radius)=>{\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        A._auTalk.setBuffer( buffer );\r\n        A._auTalk.setLoop( false );\r\n        //A._auTalk.setVolume( 0.5 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        A._auTalk.play();\r\n    });\r\n};\r\n*/\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV().setFOV(ATON.Nav.STD_FOV); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 100.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n        ATON.XR._currPos.copy(ATON.XR._reqPos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    //let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    //T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = bs.center.x - (r * Nav._vDir.x);\r\n    E.y = bs.center.y - (r * Nav._vDir.y);\r\n    E.z = bs.center.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(bs.center);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nSet and request home viewpoint\r\n@param {POV} pov - the home POV\r\n@param {number} duration - transition duration\r\n*/\r\nNav.setAndRequestHomePOV = (pov, duration)=>{\r\n    Nav.setHomePOV(pov);\r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR._pointerLineGeom = undefined;\r\n    XR._pointerLineMesh = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    // reparent current camera to the XR rig\r\n    XR.rig.add( ATON.Nav._camera );\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n    console.log(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\",\r\n                ///\"bounded-floor\",\r\n\r\n                //\"hand-tracking\",\r\n\r\n                //\"high-refresh-rate\",\r\n                //\"high-fixed-foveation-level\",\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 1.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            XR._pointerLineGeom = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            XR._pointerLineGeom.rotateX( -Math.PI / 2 );\r\n            XR._pointerLineGeom.translate(0,0,-(raylen*0.5));\r\n\r\n            XR._pointerLineMesh = new THREE.Mesh( XR._pointerLineGeom, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( /*mesh.clone()*/ XR._pointerLineMesh );\r\n            XR._pointerLineMesh.visible = false;\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    //this.uiText.position.set(0,0,-0.01);\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\nsetBackgroundOpacity(f){\r\n    this.container.set({ backgroundOpacity: f });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    //SUI.enableSemIcons();\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        if (SUI.gSemIcons) SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        if (SUI.gSemIcons) SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n// note: before adding LPs\r\nSUI.enableLPIcons = ()=>{\r\n    SUI.gLPIcons = ATON.createUINode();\r\n    SUI.gLPIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gLPIcons);\r\n};\r\n\r\n\r\nSUI.enableSemIcons = ()=>{\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n/**\r\nSet selector color\r\n@param {THREE.Color} color - color\r\n@param {number} opacity - (optional) opacity \r\n*/\r\nSUI.setSelectorColor = (color, opacity)=>{\r\n    ATON.MatHub.materials.selector.uniforms.color.value = color;\r\n    if (opacity !== undefined) ATON.MatHub.materials.selector.uniforms.opacity.value = opacity;\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    if (SUI.gSemIcons === undefined) return;\r\n\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.addLPIcon = (LP)=>{\r\n    if (SUI.gLPIcons === undefined) return;\r\n\r\n    let rn = LP._near;\r\n    let isize = 0.1; //rn * 0.3;\r\n\r\n    let lpicon = new THREE.Sprite( ATON.MatHub.lpIcon );\r\n    lpicon.position.copy(LP.pos);\r\n    lpicon.scale.set(isize,isize,isize);\r\n\r\n    let s = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.materials.lp );\r\n    s.scale.set(rn,rn,rn);\r\n    s.position.copy(LP.pos);\r\n\r\n    SUI.gLPIcons.add( lpicon );\r\n    SUI.gLPIcons.add( s );\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {array} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n    let marginf = 1.1;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num * marginf) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE * marginf;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        if (button){\r\n            button.position.set((i*SUI.STD_BTN_SIZE*marginf)-m, 0.0, 0.005);\r\n            cont.add(button);\r\n        }\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (SUI.gSemIcons){\r\n        if (ATON.Nav._bInteracting){\r\n            SUI.gSemIcons.hide();\r\n        }\r\n        else {\r\n            if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n        }\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Pointer-line\r\n    if (ATON.XR._pointerLineMesh){\r\n        let d = 0.0;\r\n        if (ATON._queryDataScene) d = ATON._queryDataScene.d;\r\n        if (ATON._queryDataUI && (d <= 0.0 || ATON._queryDataUI.d<d)){\r\n            d = ATON._queryDataUI.d;\r\n            SUI.mainSelector.visible = false;\r\n            SUI.fpTeleport.visible   = false;\r\n        }\r\n\r\n        if (d>0.0){\r\n            ATON.XR._pointerLineMesh.visible = true;\r\n            ATON.XR._pointerLineMesh.scale.set(1,1,d);\r\n        }\r\n        else ATON.XR._pointerLineMesh.visible = false;\r\n    }\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n\r\n    //this._auTalk = undefined;\r\n\r\n    // Positional audio (talk)\r\n    this._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n    this._auTalk.setRefDistance(30.0);\r\n    this.add(this._auTalk); // move with avatar\r\n\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\nsetTalkDistance(r){\r\n    if (r > 0.0) this._auTalk.setRefDistance(r);\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = ATON.MatHub.materials.defUI.clone();\r\n    mat.uniforms.color.value = VRoadcast.ucolors[0];\r\n/*\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n*/\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        //M.color = VRoadcast.ucolors[c];\r\n        M.uniforms.color.value = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket']; \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n        //opts.transports = ['websocket'];\r\n        //opts.upgrade = false;\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n/*\r\n        if (A._auTalk === undefined || A._auTalk === null){\r\n            A._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n            A._auTalk.setRefDistance(50.0);\r\n            A.add(A._auTalk);\r\n        }\r\n        else A._auTalk.stop();\r\n*/\r\n        if (A._auTalk.isPlaying) A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    if (ATON.SUI.gSemIcons === undefined) return true;\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\nFE._handleHomeReq = ()=>{\r\n    if (FE._bReqHome) return;\r\n\r\n    FE._bReqHome = true;\r\n\r\n    if (ATON.Nav.homePOV === undefined){\r\n        ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        return;\r\n    }\r\n    \r\n    ATON.Nav.requestHome(1.0);\r\n    //console.log(ATON.Nav.homePOV);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(1.0);\r\n    });\r\n\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        \r\n        FE.computeSelectorRanges();\r\n        if (ATON.Nav.isOrbit()) ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        FE._handleHomeReq();\r\n    });\r\n\r\n    ATON.on(\"frame\", FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    $(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:secure_url]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:type]\").attr(\"content\", \"image/png\");\r\n    $(\"meta[property=og\\\\:image\\\\:width]\").attr(\"content\", \"200\");\r\n    $(\"meta[property=og\\\\:image\\\\:height]\").attr(\"content\", \"200\");\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n        ATON.SUI.setSelectorColor(ATON.VRoadcast.ucolors[uid%6]);\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n        ATON.SUI.setSelectorColor(ATON.MatHub.colors.defUI);\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    //console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    //htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n    htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMfp'></div>\";\r\n    htmlcontent +=\"<div style='text-align:left'>Switch between first-person and orbit navigation mode</div>\";\r\n    htmlcontent += \"</div>\";\r\n\r\n    if (ATON.Utils.isConnectionSecure()){\r\n        htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n        htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMvr'></div>\";\r\n        htmlcontent +=\"<div style='text-align:left'>Immersive VR mode</div>\";\r\n        htmlcontent += \"</div>\";\r\n\r\n        if (ATON.Utils.isMobile()){\r\n            htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n            htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div>\";\r\n            htmlcontent +=\"<div style='text-align:left'>Enable or disable device-orientation mode</div>\";\r\n            htmlcontent += \"</div>\";\r\n        }\r\n    }\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNMfp\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNMdevori\");\r\n    FE.uiAddButtonVR(\"idNMvr\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n//import AppData from \"./ATON.appdata.js\";\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid   = $(\"meta[name='aton\\\\:appid']\").attr(\"content\");\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (id, patch, mode)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n        if (id.length < 3){\r\n            reject(\"Storage ID too short\");\r\n            return;\r\n        }\r\n        if (patch === undefined){\r\n            reject(\"No storage patch\");\r\n            return;\r\n        }\r\n        if (AppHub._appid === undefined){\r\n            reject(\"No app-ID\");\r\n            return;\r\n        }\r\n\r\n        if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n        let O = {};\r\n        O.wappid = AppHub._appid;\r\n        O.fid    = id;\r\n        O.data   = patch;\r\n        O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n        let jstr = JSON.stringify(O);\r\n        //console.log(jstr);\r\n\r\n        $.ajax({\r\n            url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n            type:\"POST\",\r\n            data: jstr,\r\n            contentType:\"application/json; charset=utf-8\",\r\n            dataType:\"json\",\r\n\r\n            success: (r)=>{\r\n                if (r === undefined){\r\n                    reject(\"Error writing on server\");\r\n                    return;\r\n                }\r\n\r\n                AppHub._appdata[id] = r;\r\n                resolve(r);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.addToStorage(\"myStorage\", {score: 20}).then(...)\r\n*/\r\nAppHub.addToStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.deleteFromStorage(\"myStorage\", {score: {}}).then(...)\r\n*/\r\nAppHub.deleteFromStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {object} id - server-side storage ID\r\n@example\r\nATON.AppHub.getStorage(\"myStorage\").then((s)=>{ console.log(s); })\r\n*/\r\nAppHub.getStorage = (id)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (AppHub._appid === undefined){\r\n            reject();\r\n            return;\r\n        }\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n\r\n        $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data/\"+id+\".json\", (data)=>{\r\n            console.log(data);\r\n            AppHub._appdata[id] = data;\r\n            resolve(data);\r\n        });\r\n    });\r\n\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n// For resuming suspended audio/video streams\r\nATON._onUserInteraction = ()=>{\r\n    if (ATON._elPanoVideo && !ATON._vpanoPlaying) ATON._elPanoVideo.play();\r\n    if (ATON.AudioHub._listener.context.state === 'suspended') ATON.AudioHub._listener.context.resume();\r\n};\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        //if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n        ATON._onUserInteraction();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        ATON._onUserInteraction();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        powerPreference: \"high-performance\",\r\n        //pecision: \"lowp\", //\"mediump\"\r\n        //preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n\r\n    ATON._aniMixers = [];\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    // Multimedia\r\n    ATON._vpanoPlaying = false;\r\n    ATON._bUserInts = 0;\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    ATON._envMapInt = 1.0;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\n\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0) ATON._onAllReqsCompleted();\r\n};\r\n\r\nATON._onAllReqsCompleted = ()=>{\r\n    // Bounds\r\n    let c = ATON._rootVisible.getBound().center;\r\n    let r = ATON._rootVisible.getBound().radius;\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            ATON.updateDirShadows(c);\r\n        }\r\n    }\r\n\r\n    if (ATON._bAutoLP){\r\n        if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n        else {\r\n            ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n        }\r\n        console.log(\"Auto LP\");\r\n    }\r\n\r\n    //ATON.Utils.graphPostVisitor(ATON._rootVisible);\r\n\r\n    // re-center main pano\r\n    if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n\r\n    ATON.getRootScene().assignLightProbesByProximity();\r\n    //ATON.updateLightProbes();\r\n\r\n    //ATON._bDirtyLP = true;\r\n\r\n    ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n    ATON._postAllReqsCompleted();\r\n\r\n    // FIXME: dirty\r\n    setTimeout( ()=>{\r\n        //if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n        ATON.updateLightProbes();\r\n        //if (ATON._renderer.shadowMap.enabled && ATON._bShadowsFixedBound) ATON._dMainL.shadow.autoUpdate = false;\r\n    }, 1000);\r\n};\r\n\r\nATON._postAllReqsCompleted = (R)=>{\r\n    if (R === undefined) R = ATON._rootVisible;\r\n\r\n    for (let n in R.children){\r\n        let N = R.children[n];\r\n\r\n        if (N && N.toggle){\r\n            ATON._postAllReqsCompleted(N);\r\n            N.toggle(N.visible);\r\n            //if (N.bPickable !== undefined) N.setPickable(N.bPickable);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    //ATON._rootUI.renderOrder = 10;\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n\r\n    // SUI\r\n    if (ATON.SUI.gLPIcons === undefined) return;\r\n    SUI.addLPIcon(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps){\r\n        ATON._lps[i].update();\r\n/*\r\n        if (ATON._indLPs === undefined) ATON._indLPs = [];\r\n        if (ATON._indLPs[i]) ATON._mainRoot.remove(ATON._indLPs[i]);\r\n\r\n        ATON._indLPs[i] = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[i]._prevCCtarget );\r\n        ATON._indLPs[i].intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLPs[i] );\r\n\r\n        console.log(ATON._mainRoot);\r\n*/\r\n    }\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._indLP.intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            o.material.combine = THREE.AddOperation;\r\n            o.material.envMapIntensity = ATON._envMapInt;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    path = ATON.Utils.resolveCollectionURL(path);\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n\r\n            ATON._elPanoVideo.onplaying = ()=>{\r\n                console.log(\"VideoPano playing\");\r\n                ATON._vpanoPlaying = true;\r\n            };\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n        //ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n        //ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n\r\n        //console.log(ATON._shadowsNear,ATON._shadowsFar);\r\n    }\r\n\r\n    // must dispose when changing shadow params\r\n    if (ATON._dMainL.shadow.map){\r\n        ATON._dMainL.shadow.map.dispose();\r\n        ATON._dMainL.shadow.map = null;\r\n    }\r\n\r\n    //console.log(ATON._dMainL.shadow.camera);\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n    //ATON._dMainL.shadow.camera.updateProjectionMatrix();\r\n\r\n    ATON._dMainL.shadow.bias = -0.0005;\r\n    //ATON._dMainL.shadow.normalBias = 0.05;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n// main audio\r\nATON.setGlobalAudio = (audioURL, bLoop)=>{\r\n    if (audioURL === undefined) return;\r\n    if (bLoop === undefined) bLoop = true;\r\n\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    if (ATON._auMain === undefined || ATON._auMain === null) ATON._auMain = new THREE.Audio( ATON.AudioHub._listener );\r\n    else if (ATON._auMain.isPlaying) ATON._auMain.stop();\r\n\r\n    ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n        ATON._auMain.setBuffer( buffer );\r\n        ATON._auMain.setLoop( bLoop );\r\n        //ATON._auMain.setVolume( 2.0 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        ATON._auMain.play();\r\n    });\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    //ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Mat\r\n    ATON.MatHub.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    // 3D models animations\r\n    ATON._updateAniMixers();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateAniMixers = ()=>{\r\n    let num = ATON._aniMixers.length;\r\n    //if (num < 1) return;\r\n\r\n    for (let m=0; m<num; m++){\r\n        let M = ATON._aniMixers[m];\r\n        M.update( ATON._dt );\r\n        //console.log(M);\r\n    }\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}