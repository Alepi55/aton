{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","_aniMixers","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","_renderer","shadowMap","enabled","needsUpdate","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","resolveCollectionURL","_assetsManager","then","modelVisitor","t","registerAniMixers","data","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","model","scene","ccExtract","_assetReqComplete","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","CCtarget","WebGLCubeRenderTarget","format","RGBAFormat","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","defUI","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","ShaderMaterial","uniforms","color","vertexShader","getDefVertexShader","fragmentShader","flatShading","selector","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","lp","lpIcon","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","string","urls","match","forEach","replace","PATH_COLLECTION","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","graphPostVisitor","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","minFilter","LinearMipmapLinearFilter","magFilter","LinearFilter","mixer","AnimationMixer","animations","clip","clipAction","play","asset","extras","cc","_ccModels","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","soundscape","global","setGlobalAudio","loop","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","audioURL","Audio","setBuffer","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","STD_FOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","getSelectorRadius","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","handleMotion","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_reqPos","_fromPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","_pointerLineGeom","_pointerLineMesh","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","fpTeleport","gTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","gSemIcons","enableLPIcons","gLPIcons","enableSemIcons","_selectorRad","setSelectorModel","path","bUseStdMat","setSelectorColor","addSemIcon","meshape","semicon","Sprite","addLPIcon","rn","lpicon","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","isOrbit","_queryDataUI","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","PositionalAudio","setRefDistance","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","requestSceneState","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","isPlaying","stop","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeAndRequestDefaultHome","getDescription","computeSelectorRanges","_handleHomeReq","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","attr","PATH_SCENES","sin","uiAddButton","toggleFullScreen","isConnectionSecure","toggle","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","elid","el","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","popupVRC","getVRCclassFromID","checkAuth","sstate","popupUser","uiFunction","idbutton","inputid","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","wappid","fid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_onUserInteraction","_elPanoVideo","_vpanoPlaying","context","state","resume","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","powerPreference","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","_bUserInts","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_envMapInt","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","_onAllReqsCompleted","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","_postAllReqsCompleted","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","combine","AddOperation","envMapIntensity","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","onplaying","VideoTexture","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","bias","PCFShadowMap","PCFSoftShadowMap","_updateEnvironment","bLoop","_auMain","dt","getDelta","_updateAniMixers","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Animation mixers\r\n    this._aniMixers = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._renderer.shadowMap.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._renderer.shadowMap.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n\r\n        //this.toggle(N.visible);\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n\r\n    //this.toggle(this._rootG.visible);\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model (local to collection or complete)\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    url = ATON.Utils.resolveCollectionURL(url);\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            // animations\r\n            ATON.Utils.registerAniMixers(N, data);\r\n\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            // animations\r\n            ATON.Utils.registerAniMixers(N, data);\r\n\r\n            // CC manager\r\n            ATON.Utils.ccExtract(data);\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = undefined; //ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n/*\r\n    this._LP = new THREE.LightProbe();\r\n    this._LP.intensity = 10;\r\n    ATON._mainRoot.add( this._LP );\r\n*/\r\n    \r\n    //this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //this._LP.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBAFormat, //THREE.RGBEFormat,\r\n        //generateMipmaps: true,\r\n        //minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n    this._envtex = CCtarget.texture;\r\n\r\n    // new\r\n    //this._LP.copy( THREE.LightProbeGenerator.fromCubeRenderTarget(ATON._renderer, CCtarget) );\r\n    //this._envtex = this._LP;\r\n    \r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.2,0.2,1.0, 0.2) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n\r\n    MatHub.colors.defUI  = new THREE.Color(0,1,0.5);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,1,0.5);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n\r\n    // Default UI\r\n    MatHub.materials.defUI = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            color: { type:'vec3', value: MatHub.colors.defUI },\r\n            opacity: { type:'float', value: 0.8 }\r\n        },\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n            uniform vec3 color;\r\n            uniform float opacity;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.2, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(color.rgb, f * opacity);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n    \r\n    // Selector\r\n    MatHub.materials.selector = MatHub.materials.defUI.clone();\r\n\r\n/*\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n*/\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = MatHub.materials.defUI.clone();\r\n    MatHub.materials.controllerRay.uniforms.color.value = MatHub.colors.white;\r\n/*\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n*/\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                //float ff = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\r\n\r\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n                //gl_FragColor = vec4(tint.rgb, ff);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-sem.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n\r\n    MatHub.materials.lp = new THREE.ShaderMaterial({ \r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n\r\n    MatHub.lpIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-lp.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        depthWrite: false, \r\n        //depthTest: false\r\n    });\r\n\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n    MatHub.lpIcon.sizeAttenuation  = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.URLify =(string)=>{\r\n    const urls = string.match(/(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)/g);\r\n    if (urls){\r\n        urls.forEach(function(url){\r\n            string = string.replace(url, '<a target=\"_blank\" href=\"' + url + '\">' + url + \"</a>\");\r\n        });\r\n    }\r\n\r\n    return string;\r\n};\r\n\r\nUtils.resolveCollectionURL = (url)=>{\r\n    if (url.startsWith(\"http\")) return url;\r\n    \r\n    return ATON.PATH_COLLECTION+url;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n};\r\n\r\nUtils.graphPostVisitor = (N)=>{\r\n    //if (N.type === undefined) return;\r\n\r\n    if (!N.visible){\r\n        Utils.setPicking(N, N.type, false);\r\n        return;\r\n    }\r\n\r\n    for (let c in N.children){\r\n        let C = N.children[c];\r\n        Utils.graphPostVisitor(C);\r\n    }\r\n\r\n    console.log(N);\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n        // perf.\r\n        // TODO: manually call object.updateMatrix()\r\n        //o.matrixAutoUpdate = false;\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n/*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n*/\r\n                }\r\n\r\n                // Fix mipmapping\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON.device.isMobile? 0 : ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.registerAniMixers = (N, data)=>{\r\n    let model = data.scene || data.scene[0];\r\n\r\n    let mixer = new THREE.AnimationMixer( model );\r\n    data.animations.forEach((clip)=>{\r\n        mixer.clipAction( clip ).play();\r\n        //console.log(mixer.clipAction( clip ));\r\n        //console.log(N);\r\n    });\r\n    ATON._aniMixers.push(mixer);\r\n\r\n    if (N._aniMixers === undefined) N._aniMixers = [];\r\n    N._aniMixers.push(mixer);\r\n};\r\n\r\nUtils.ccExtract = (data)=>{\r\n    if (data === undefined) return;\r\n    if (data.asset === undefined) return;\r\n    if (data.asset.extras === undefined) return;\r\n\r\n    let cc = data.asset.extras;\r\n\r\n    ATON._ccModels.push(cc);\r\n    console.log(cc);\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // Soundscape\r\n    SceneHub._jsonParsers.soundscape = (soundscape)=>{\r\n        if (soundscape === undefined) return;\r\n\r\n        if (soundscape.global){\r\n            ATON.setGlobalAudio(soundscape.global.url, soundscape.global.loop);\r\n        }\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\nAudioHub.playOnceGlobally = (audioURL)=>{\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    let au = new THREE.Audio( ATON.AudioHub._listener );\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        au.setBuffer( buffer );\r\n        //au.setVolume( 2.0 );\r\n        //au.setPlaybackRate(0.9);\r\n        au.play();\r\n    });\r\n};\r\n\r\n/* TODO:\r\nAudioHub.addToSoundscape = (auid, audioURL, position, radius)=>{\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        A._auTalk.setBuffer( buffer );\r\n        A._auTalk.setLoop( false );\r\n        //A._auTalk.setVolume( 0.5 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        A._auTalk.play();\r\n    });\r\n};\r\n*/\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV().setFOV(ATON.Nav.STD_FOV); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 100.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n        ATON.XR._currPos.copy(ATON.XR._reqPos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    //let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    //T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = bs.center.x - (r * Nav._vDir.x);\r\n    E.y = bs.center.y - (r * Nav._vDir.y);\r\n    E.z = bs.center.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(bs.center);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nSet and request home viewpoint\r\n@param {POV} pov - the home POV\r\n@param {number} duration - transition duration\r\n*/\r\nNav.setAndRequestHomePOV = (pov, duration)=>{\r\n    Nav.setHomePOV(pov);\r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR._pointerLineGeom = undefined;\r\n    XR._pointerLineMesh = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    // reparent current camera to the XR rig\r\n    XR.rig.add( ATON.Nav._camera );\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n    console.log(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\",\r\n                ///\"bounded-floor\",\r\n\r\n                //\"hand-tracking\",\r\n\r\n                //\"high-refresh-rate\",\r\n                //\"high-fixed-foveation-level\",\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 1.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            XR._pointerLineGeom = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            XR._pointerLineGeom.rotateX( -Math.PI / 2 );\r\n            XR._pointerLineGeom.translate(0,0,-(raylen*0.5));\r\n\r\n            XR._pointerLineMesh = new THREE.Mesh( XR._pointerLineGeom, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( /*mesh.clone()*/ XR._pointerLineMesh );\r\n            XR._pointerLineMesh.visible = false;\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    //this.uiText.position.set(0,0,-0.01);\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\nsetBackgroundOpacity(f){\r\n    this.container.set({ backgroundOpacity: f });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    //SUI.enableSemIcons();\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        if (SUI.gSemIcons) SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        if (SUI.gSemIcons) SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n// note: before adding LPs\r\nSUI.enableLPIcons = ()=>{\r\n    SUI.gLPIcons = ATON.createUINode();\r\n    SUI.gLPIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gLPIcons);\r\n};\r\n\r\n\r\nSUI.enableSemIcons = ()=>{\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n/**\r\nSet selector color\r\n@param {THREE.Color} color - color\r\n@param {number} opacity - (optional) opacity \r\n*/\r\nSUI.setSelectorColor = (color, opacity)=>{\r\n    ATON.MatHub.materials.selector.uniforms.color.value = color;\r\n    if (opacity !== undefined) ATON.MatHub.materials.selector.uniforms.opacity.value = opacity;\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    if (SUI.gSemIcons === undefined) return;\r\n\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.addLPIcon = (LP)=>{\r\n    if (SUI.gLPIcons === undefined) return;\r\n\r\n    let rn = LP._near;\r\n    let isize = 0.1; //rn * 0.3;\r\n\r\n    let lpicon = new THREE.Sprite( ATON.MatHub.lpIcon );\r\n    lpicon.position.copy(LP.pos);\r\n    lpicon.scale.set(isize,isize,isize);\r\n\r\n    let s = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.materials.lp );\r\n    s.scale.set(rn,rn,rn);\r\n    s.position.copy(LP.pos);\r\n\r\n    SUI.gLPIcons.add( lpicon );\r\n    SUI.gLPIcons.add( s );\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {array} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n    let marginf = 1.1;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num * marginf) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE * marginf;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        if (button){\r\n            button.position.set((i*SUI.STD_BTN_SIZE*marginf)-m, 0.0, 0.005);\r\n            cont.add(button);\r\n        }\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (SUI.gSemIcons){\r\n        if (ATON.Nav._bInteracting){\r\n            SUI.gSemIcons.hide();\r\n        }\r\n        else {\r\n            if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n        }\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Pointer-line\r\n    if (ATON.XR._pointerLineMesh){\r\n        let d = 0.0;\r\n        if (ATON._queryDataScene) d = ATON._queryDataScene.d;\r\n        if (ATON._queryDataUI && (d <= 0.0 || ATON._queryDataUI.d<d)){\r\n            d = ATON._queryDataUI.d;\r\n            SUI.mainSelector.visible = false;\r\n            SUI.fpTeleport.visible   = false;\r\n        }\r\n\r\n        if (d>0.0){\r\n            ATON.XR._pointerLineMesh.visible = true;\r\n            ATON.XR._pointerLineMesh.scale.set(1,1,d);\r\n        }\r\n        else ATON.XR._pointerLineMesh.visible = false;\r\n    }\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n\r\n    //this._auTalk = undefined;\r\n\r\n    // Positional audio (talk)\r\n    this._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n    this._auTalk.setRefDistance(30.0);\r\n    this.add(this._auTalk); // move with avatar\r\n\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\nsetTalkDistance(r){\r\n    if (r > 0.0) this._auTalk.setRefDistance(r);\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = ATON.MatHub.materials.defUI.clone();\r\n    mat.uniforms.color.value = VRoadcast.ucolors[0];\r\n/*\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n*/\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        //M.color = VRoadcast.ucolors[c];\r\n        M.uniforms.color.value = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket']; \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n        //opts.transports = ['websocket'];\r\n        //opts.upgrade = false;\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n/*\r\n        if (A._auTalk === undefined || A._auTalk === null){\r\n            A._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n            A._auTalk.setRefDistance(50.0);\r\n            A.add(A._auTalk);\r\n        }\r\n        else A._auTalk.stop();\r\n*/\r\n        if (A._auTalk.isPlaying) A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    if (ATON.SUI.gSemIcons === undefined) return true;\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\nFE._handleHomeReq = ()=>{\r\n    if (FE._bReqHome) return;\r\n\r\n    FE._bReqHome = true;\r\n\r\n    if (ATON.Nav.homePOV === undefined){\r\n        ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        return;\r\n    }\r\n    \r\n    ATON.Nav.requestHome(1.0);\r\n    //console.log(ATON.Nav.homePOV);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(1.0);\r\n    });\r\n\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        if (ATON._ccModels.length>0) $(\"#btn-cc\").show();\r\n        \r\n        FE.computeSelectorRanges();\r\n        if (ATON.Nav.isOrbit()) ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        FE._handleHomeReq();\r\n    });\r\n\r\n    ATON.on(\"frame\", FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    $(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:secure_url]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:type]\").attr(\"content\", \"image/png\");\r\n    $(\"meta[property=og\\\\:image\\\\:width]\").attr(\"content\", \"200\");\r\n    $(\"meta[property=og\\\\:image\\\\:height]\").attr(\"content\", \"200\");\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n        ATON.SUI.setSelectorColor(ATON.VRoadcast.ucolors[uid%6]);\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n        ATON.SUI.setSelectorColor(ATON.MatHub.colors.defUI);\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    //console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    //htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n    htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMfp'></div>\";\r\n    htmlcontent +=\"<div style='text-align:left'>Switch between first-person and orbit navigation mode</div>\";\r\n    htmlcontent += \"</div>\";\r\n\r\n    if (ATON.Utils.isConnectionSecure()){\r\n        htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n        htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMvr'></div>\";\r\n        htmlcontent +=\"<div style='text-align:left'>Immersive VR mode</div>\";\r\n        htmlcontent += \"</div>\";\r\n\r\n        if (ATON.Utils.isMobile()){\r\n            htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n            htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div>\";\r\n            htmlcontent +=\"<div style='text-align:left'>Enable or disable device-orientation mode</div>\";\r\n            htmlcontent += \"</div>\";\r\n        }\r\n    }\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNMfp\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNMdevori\");\r\n    FE.uiAddButtonVR(\"idNMvr\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n//import AppData from \"./ATON.appdata.js\";\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid   = $(\"meta[name='aton\\\\:appid']\").attr(\"content\");\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (id, patch, mode)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n        if (id.length < 3){\r\n            reject(\"Storage ID too short\");\r\n            return;\r\n        }\r\n        if (patch === undefined){\r\n            reject(\"No storage patch\");\r\n            return;\r\n        }\r\n        if (AppHub._appid === undefined){\r\n            reject(\"No app-ID\");\r\n            return;\r\n        }\r\n\r\n        if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n        let O = {};\r\n        O.wappid = AppHub._appid;\r\n        O.fid    = id;\r\n        O.data   = patch;\r\n        O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n        let jstr = JSON.stringify(O);\r\n        //console.log(jstr);\r\n\r\n        $.ajax({\r\n            url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n            type:\"POST\",\r\n            data: jstr,\r\n            contentType:\"application/json; charset=utf-8\",\r\n            dataType:\"json\",\r\n\r\n            success: (r)=>{\r\n                if (r === undefined){\r\n                    reject(\"Error writing on server\");\r\n                    return;\r\n                }\r\n\r\n                AppHub._appdata[id] = r;\r\n                resolve(r);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.addToStorage(\"myStorage\", {score: 20}).then(...)\r\n*/\r\nAppHub.addToStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.deleteFromStorage(\"myStorage\", {score: {}}).then(...)\r\n*/\r\nAppHub.deleteFromStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {object} id - server-side storage ID\r\n@example\r\nATON.AppHub.getStorage(\"myStorage\").then((s)=>{ console.log(s); })\r\n*/\r\nAppHub.getStorage = (id)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (AppHub._appid === undefined){\r\n            reject();\r\n            return;\r\n        }\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n\r\n        $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data/\"+id+\".json\", (data)=>{\r\n            console.log(data);\r\n            AppHub._appdata[id] = data;\r\n            resolve(data);\r\n        });\r\n    });\r\n\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n// For resuming suspended audio/video streams\r\nATON._onUserInteraction = ()=>{\r\n    if (ATON._elPanoVideo && !ATON._vpanoPlaying) ATON._elPanoVideo.play();\r\n    if (ATON.AudioHub._listener.context.state === 'suspended') ATON.AudioHub._listener.context.resume();\r\n};\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        //if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n        ATON._onUserInteraction();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        ATON._onUserInteraction();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        powerPreference: \"high-performance\",\r\n        //pecision: \"lowp\", //\"mediump\"\r\n        //preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n\r\n    ATON._aniMixers = [];\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    // Multimedia\r\n    ATON._vpanoPlaying = false;\r\n    ATON._bUserInts = 0;\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // CC Manager\r\n    ATON._ccModels = [];\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    ATON._envMapInt = 1.0;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\n\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0) ATON._onAllReqsCompleted();\r\n};\r\n\r\nATON._onAllReqsCompleted = ()=>{\r\n    // Bounds\r\n    let c = ATON._rootVisible.getBound().center;\r\n    let r = ATON._rootVisible.getBound().radius;\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            ATON.updateDirShadows(c);\r\n        }\r\n    }\r\n\r\n    if (ATON._bAutoLP){\r\n        if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n        else {\r\n            ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n        }\r\n        console.log(\"Auto LP\");\r\n    }\r\n\r\n    //ATON.Utils.graphPostVisitor(ATON._rootVisible);\r\n\r\n    // re-center main pano\r\n    if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n\r\n    ATON.getRootScene().assignLightProbesByProximity();\r\n    //ATON.updateLightProbes();\r\n\r\n    //ATON._bDirtyLP = true;\r\n\r\n    ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n    ATON._postAllReqsCompleted();\r\n\r\n    // FIXME: dirty\r\n    setTimeout( ()=>{\r\n        //if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n        ATON.updateLightProbes();\r\n        //if (ATON._renderer.shadowMap.enabled && ATON._bShadowsFixedBound) ATON._dMainL.shadow.autoUpdate = false;\r\n    }, 1000);\r\n};\r\n\r\nATON._postAllReqsCompleted = (R)=>{\r\n    if (R === undefined) R = ATON._rootVisible;\r\n\r\n    for (let n in R.children){\r\n        let N = R.children[n];\r\n\r\n        if (N && N.toggle){\r\n            ATON._postAllReqsCompleted(N);\r\n            N.toggle(N.visible);\r\n            //if (N.bPickable !== undefined) N.setPickable(N.bPickable);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    //ATON._rootUI.renderOrder = 10;\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n\r\n    // SUI\r\n    if (ATON.SUI.gLPIcons === undefined) return;\r\n    SUI.addLPIcon(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps){\r\n        ATON._lps[i].update();\r\n/*\r\n        if (ATON._indLPs === undefined) ATON._indLPs = [];\r\n        if (ATON._indLPs[i]) ATON._mainRoot.remove(ATON._indLPs[i]);\r\n\r\n        ATON._indLPs[i] = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[i]._prevCCtarget );\r\n        ATON._indLPs[i].intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLPs[i] );\r\n\r\n        console.log(ATON._mainRoot);\r\n*/\r\n    }\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._indLP.intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            o.material.combine = THREE.AddOperation;\r\n            o.material.envMapIntensity = ATON._envMapInt;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    path = ATON.Utils.resolveCollectionURL(path);\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n\r\n            ATON._elPanoVideo.onplaying = ()=>{\r\n                console.log(\"VideoPano playing\");\r\n                ATON._vpanoPlaying = true;\r\n            };\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n        //ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n        //ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n\r\n        //console.log(ATON._shadowsNear,ATON._shadowsFar);\r\n    }\r\n\r\n    // must dispose when changing shadow params\r\n    if (ATON._dMainL.shadow.map){\r\n        ATON._dMainL.shadow.map.dispose();\r\n        ATON._dMainL.shadow.map = null;\r\n    }\r\n\r\n    //console.log(ATON._dMainL.shadow.camera);\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n    //ATON._dMainL.shadow.camera.updateProjectionMatrix();\r\n\r\n    ATON._dMainL.shadow.bias = -0.0005;\r\n    //ATON._dMainL.shadow.normalBias = 0.05;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        if (ATON.device.isMobile) ATON._renderer.shadowMap.type = THREE.PCFShadowMap;\r\n        else ATON._renderer.shadowMap.type = THREE.PCFSoftShadowMap; // THREE.VSMShadowMap; \r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n// main audio\r\nATON.setGlobalAudio = (audioURL, bLoop)=>{\r\n    if (audioURL === undefined) return;\r\n    if (bLoop === undefined) bLoop = true;\r\n\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    if (ATON._auMain === undefined || ATON._auMain === null) ATON._auMain = new THREE.Audio( ATON.AudioHub._listener );\r\n    else if (ATON._auMain.isPlaying) ATON._auMain.stop();\r\n\r\n    ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n        ATON._auMain.setBuffer( buffer );\r\n        ATON._auMain.setLoop( bLoop );\r\n        //ATON._auMain.setVolume( 2.0 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        ATON._auMain.play();\r\n    });\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    //ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Mat\r\n    ATON.MatHub.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    // 3D models animations\r\n    ATON._updateAniMixers();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateAniMixers = ()=>{\r\n    let num = ATON._aniMixers.length;\r\n    //if (num < 1) return;\r\n\r\n    for (let m=0; m<num; m++){\r\n        let M = ATON._aniMixers[m];\r\n        M.update( ATON._dt );\r\n        //console.log(M);\r\n    }\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}