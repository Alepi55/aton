{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","resolveCollectionURL","_assetsManager","then","modelVisitor","t","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","_assetReqComplete","setPickable","toggle","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","STD_FOV","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","_pmremGenerator","PMREMGenerator","_renderer","CCtarget","WebGLCubeRenderTarget","format","RGBEFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","defUI","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","ShaderMaterial","uniforms","color","vertexShader","getDefVertexShader","fragmentShader","flatShading","selector","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","lp","lpIcon","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","PATH_COLLECTION","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","magFilter","LinearFilter","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","replace","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","soundscape","global","setGlobalAudio","loop","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","urls","forEach","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","enabled","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","getSelectorRadius","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","handleMotion","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_reqPos","_fromPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","fpTeleport","gTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","gSemIcons","enableLPIcons","gLPIcons","enableSemIcons","_selectorRad","setSelectorModel","path","bUseStdMat","setSelectorColor","addSemIcon","meshape","semicon","Sprite","addLPIcon","rn","lpicon","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","needsUpdate","isOrbit","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","PositionalAudio","setRefDistance","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","Audio","play","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","requestSceneState","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","audioURL","isPlaying","stop","setBuffer","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeSelectorRanges","computeAndRequestDefaultHome","getDescription","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","attr","PATH_SCENES","sin","uiAddButton","toggleFullScreen","isConnectionSecure","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","elid","el","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","popupVRC","getVRCclassFromID","checkAuth","sstate","popupUser","uiFunction","idbutton","inputid","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","wappid","fid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_onUserInteraction","_elPanoVideo","context","state","resume","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_envMapInt","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_queryDataUI","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","shadowMap","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","combine","AddOperation","envMapIntensity","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","VideoTexture","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","bias","PCFSoftShadowMap","_updateEnvironment","bLoop","_auMain","dt","getDelta","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    //this.bPickable = true;\r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model (local to collection or complete)\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    url = ATON.Utils.resolveCollectionURL(url);\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            N.setPickable(N.bPickable);\r\n            N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n\r\n    this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //if (this._LP0) this._LP0.position.copy(this.pos);\r\n    //if (this._LP1) this._LP1.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBEFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n\r\n    this._envtex = CCtarget.texture;\r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.0,0.0,1.0, 0.2) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n\r\n    MatHub.colors.defUI  = new THREE.Color(0,1,0.5);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,0,1);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n\r\n    // Default UI\r\n    MatHub.materials.defUI = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            color: { type:'vec3', value: MatHub.colors.defUI },\r\n            opacity: { type:'float', value: 0.8 }\r\n        },\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n            uniform vec3 color;\r\n            uniform float opacity;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.2, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(color.rgb, f * opacity);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n    \r\n    // Selector\r\n    MatHub.materials.selector = MatHub.materials.defUI.clone();\r\n\r\n/*\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n*/\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = MatHub.materials.defUI.clone();\r\n    MatHub.materials.controllerRay.uniforms.color.value = MatHub.colors.white;\r\n/*\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n*/\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                //float ff = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\r\n\r\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n                //gl_FragColor = vec4(tint.rgb, ff);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-sem.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n\r\n    MatHub.materials.lp = new THREE.ShaderMaterial({ \r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n\r\n    MatHub.lpIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-lp.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        depthWrite: false, \r\n        //depthTest: false\r\n    });\r\n\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n    MatHub.lpIcon.sizeAttenuation  = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.resolveCollectionURL = (url)=>{\r\n    if (url.startsWith(\"http\")) return url;\r\n    \r\n    return ATON.PATH_COLLECTION+url;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n                    /*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n                    */\r\n                }\r\n\r\n                // Ensure mipmapping is correct\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    SceneHub._jsonParsers.soundscape = (soundscape)=>{\r\n        if (soundscape === undefined) return;\r\n\r\n        if (soundscape.global){\r\n            ATON.setGlobalAudio(soundscape.global.url, soundscape.global.loop);\r\n        }\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\n/* TODO:\r\nAudioHub.addToSoundscape = (auid, audioURL, position, radius)=>{\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        A._auTalk.setBuffer( buffer );\r\n        A._auTalk.setLoop( false );\r\n        //A._auTalk.setVolume( 0.5 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        A._auTalk.play();\r\n    });\r\n};\r\n*/\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV(); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 100.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n        ATON.XR._currPos.copy(ATON.XR._reqPos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    //let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    //T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = bs.center.x - (r * Nav._vDir.x);\r\n    E.y = bs.center.y - (r * Nav._vDir.y);\r\n    E.z = bs.center.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(bs.center);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nSet and request home viewpoint\r\n@param {POV} pov - the home POV\r\n@param {number} duration - transition duration\r\n*/\r\nNav.setAndRequestHomePOV = (pov, duration)=>{\r\n    Nav.setHomePOV(pov);\r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\",\r\n                ///\"bounded-floor\",\r\n\r\n                //\"hand-tracking\",\r\n\r\n                //\"high-refresh-rate\",\r\n                //\"high-fixed-foveation-level\",\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            geometry.rotateX( -Math.PI / 2 );\r\n            geometry.translate(0,0,-(raylen*0.5));\r\n\r\n            var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( mesh.clone() );\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"button\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    //SUI.enableSemIcons();\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        if (SUI.gSemIcons) SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        if (SUI.gSemIcons) SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n// note: before adding LPs\r\nSUI.enableLPIcons = ()=>{\r\n    SUI.gLPIcons = ATON.createUINode();\r\n    SUI.gLPIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gLPIcons);\r\n};\r\n\r\n\r\nSUI.enableSemIcons = ()=>{\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n/**\r\nSet selector color\r\n@param {THREE.Color} color - color\r\n@param {number} opacity - (optional) opacity \r\n*/\r\nSUI.setSelectorColor = (color, opacity)=>{\r\n    ATON.MatHub.materials.selector.uniforms.color.value = color;\r\n    if (opacity !== undefined) ATON.MatHub.materials.selector.uniforms.opacity.value = opacity;\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    if (SUI.gSemIcons === undefined) return;\r\n\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.addLPIcon = (LP)=>{\r\n    if (SUI.gLPIcons === undefined) return;\r\n\r\n    let rn = LP._near;\r\n    let isize = 0.1; //rn * 0.3;\r\n\r\n    let lpicon = new THREE.Sprite( ATON.MatHub.lpIcon );\r\n    lpicon.position.copy(LP.pos);\r\n    lpicon.scale.set(isize,isize,isize);\r\n\r\n    let s = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.materials.lp );\r\n    s.scale.set(rn,rn,rn);\r\n    s.position.copy(LP.pos);\r\n\r\n    SUI.gLPIcons.add( lpicon );\r\n    SUI.gLPIcons.add( s );\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {string} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        button.position.set((i*SUI.STD_BTN_SIZE)-m, 0.0, 0.01);\r\n        cont.add(button);\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (SUI.gSemIcons){\r\n        if (ATON.Nav._bInteracting){\r\n            SUI.gSemIcons.hide();\r\n        }\r\n        else {\r\n            if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n        }\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n\r\n    //this._auTalk = undefined;\r\n\r\n    // Positional audio (talk)\r\n    this._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n    this._auTalk.setRefDistance(30.0);\r\n    this.add(this._auTalk); // move with avatar\r\n\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\nsetTalkDistance(r){\r\n    if (r > 0.0) this._auTalk.setRefDistance(r);\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = ATON.MatHub.materials.defUI.clone();\r\n    mat.uniforms.color.value = VRoadcast.ucolors[0];\r\n/*\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n*/\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        //M.color = VRoadcast.ucolors[c];\r\n        M.uniforms.color.value = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket']; \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n        //opts.transports = ['websocket'];\r\n        //opts.upgrade = false;\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n/*\r\n        if (A._auTalk === undefined || A._auTalk === null){\r\n            A._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n            A._auTalk.setRefDistance(50.0);\r\n            A.add(A._auTalk);\r\n        }\r\n        else A._auTalk.stop();\r\n*/\r\n        if (A._auTalk.isPlaying) A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    if (ATON.SUI.gSemIcons === undefined) return true;\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        \r\n        FE.computeSelectorRanges();\r\n        ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        if (FE._bReqHome) return;\r\n\r\n        if (ATON.Nav.homePOV === undefined){\r\n            ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        }\r\n        \r\n        FE._bReqHome = true;\r\n    });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(0.5);\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n    });\r\n\r\n    ATON.on(\"frame\", FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    $(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:secure_url]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:type]\").attr(\"content\", \"image/png\");\r\n    $(\"meta[property=og\\\\:image\\\\:width]\").attr(\"content\", \"200\");\r\n    $(\"meta[property=og\\\\:image\\\\:height]\").attr(\"content\", \"200\");\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n        ATON.SUI.setSelectorColor(ATON.VRoadcast.ucolors[uid%6]);\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n        ATON.SUI.setSelectorColor(ATON.MatHub.colors.defUI);\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    //console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    //htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n    htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMfp'></div>\";\r\n    htmlcontent +=\"<div style='text-align:left'>Switch between first-person and orbit navigation mode</div>\";\r\n    htmlcontent += \"</div>\";\r\n\r\n    if (ATON.Utils.isConnectionSecure()){\r\n        htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n        htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMvr'></div>\";\r\n        htmlcontent +=\"<div style='text-align:left'>Immersive VR mode</div>\";\r\n        htmlcontent += \"</div>\";\r\n\r\n        if (ATON.Utils.isMobile()){\r\n            htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n            htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div>\";\r\n            htmlcontent +=\"<div style='text-align:left'>Enable or disable device-orientation mode</div>\";\r\n            htmlcontent += \"</div>\";\r\n        }\r\n    }\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNMfp\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNMdevori\");\r\n    FE.uiAddButtonVR(\"idNMvr\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n//import AppData from \"./ATON.appdata.js\";\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid   = $(\"meta[name='aton\\\\:appid']\").attr(\"content\");\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (id, patch, mode)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n        if (id.length < 3){\r\n            reject(\"Storage ID too short\");\r\n            return;\r\n        }\r\n        if (patch === undefined){\r\n            reject(\"No storage patch\");\r\n            return;\r\n        }\r\n        if (AppHub._appid === undefined){\r\n            reject(\"No app-ID\");\r\n            return;\r\n        }\r\n\r\n        if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n        let O = {};\r\n        O.wappid = AppHub._appid;\r\n        O.fid    = id;\r\n        O.data   = patch;\r\n        O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n        let jstr = JSON.stringify(O);\r\n        //console.log(jstr);\r\n\r\n        $.ajax({\r\n            url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n            type:\"POST\",\r\n            data: jstr,\r\n            contentType:\"application/json; charset=utf-8\",\r\n            dataType:\"json\",\r\n\r\n            success: (r)=>{\r\n                if (r === undefined){\r\n                    reject(\"Error writing on server\");\r\n                    return;\r\n                }\r\n\r\n                AppHub._appdata[id] = r;\r\n                resolve(r);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.addToStorage(\"myStorage\", {score: 20}).then(...)\r\n*/\r\nAppHub.addToStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.deleteFromStorage(\"myStorage\", {score: {}}).then(...)\r\n*/\r\nAppHub.deleteFromStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {object} id - server-side storage ID\r\n@example\r\nATON.AppHub.getStorage(\"myStorage\").then((s)=>{ console.log(s); })\r\n*/\r\nAppHub.getStorage = (id)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (AppHub._appid === undefined){\r\n            reject();\r\n            return;\r\n        }\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n\r\n        $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data/\"+id+\".json\", (data)=>{\r\n            console.log(data);\r\n            AppHub._appdata[id] = data;\r\n            resolve(data);\r\n        });\r\n    });\r\n\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n// For resuming suspended audio/video streams\r\nATON._onUserInteraction = ()=>{\r\n    if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n    if (ATON.AudioHub._listener.context.state === 'suspended') ATON.AudioHub._listener.context.resume();\r\n};\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        //pecision: \"mediump\"\r\n        //preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    ATON._envMapInt = 1.0;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0){\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n        // Bounds\r\n        let c = ATON._rootVisible.getBound().center;\r\n        let r = ATON._rootVisible.getBound().radius;\r\n\r\n        if (ATON._renderer.shadowMap.enabled){\r\n\r\n            ATON._rootVisible.traverse((o) => {\r\n                if (o.isMesh){\r\n                    o.castShadow = true;\r\n                    o.receiveShadow = true;\r\n                }\r\n            });\r\n\r\n            ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n            if (ATON._bShadowsFixedBound){\r\n                ATON.updateDirShadows(c);\r\n            }\r\n        }\r\n\r\n        if (ATON._bAutoLP){\r\n            if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n            else {\r\n                ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n            }\r\n            console.log(\"Auto LP\");\r\n        }\r\n\r\n        // re-center main pano\r\n        if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n\r\n        ATON.getRootScene().assignLightProbesByProximity();\r\n        //ATON.updateLightProbes();\r\n\r\n        //ATON._bDirtyLP = true;\r\n\r\n        // FIXME: dirty\r\n        setTimeout( ()=>{\r\n            //if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n            ATON.updateLightProbes();\r\n        }, 1000);\r\n\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n\r\n    // SUI\r\n    if (ATON.SUI.gLPIcons === undefined) return;\r\n    SUI.addLPIcon(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps){\r\n        ATON._lps[i].update();\r\n/*\r\n        if (ATON._indLPs === undefined) ATON._indLPs = [];\r\n        if (ATON._indLPs[i]) ATON._mainRoot.remove(ATON._indLPs[i]);\r\n\r\n        ATON._indLPs[i] = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[i]._prevCCtarget );\r\n        ATON._indLPs[i].intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLPs[i] );\r\n\r\n        console.log(ATON._mainRoot);\r\n*/\r\n    }\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._indLP.intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            o.material.combine = THREE.AddOperation;\r\n            o.material.envMapIntensity = ATON._envMapInt;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    path = ATON.Utils.resolveCollectionURL(path);\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n        //ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n        //ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n\r\n        //console.log(ATON._shadowsNear,ATON._shadowsFar);\r\n    }\r\n\r\n    // must dispose when changing shadow params\r\n    if (ATON._dMainL.shadow.map){\r\n        ATON._dMainL.shadow.map.dispose();\r\n        ATON._dMainL.shadow.map = null;\r\n    }\r\n\r\n    //console.log(ATON._dMainL.shadow.camera);\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n    //ATON._dMainL.shadow.camera.updateProjectionMatrix();\r\n\r\n    ATON._dMainL.shadow.bias = -0.0005;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n// main audio\r\nATON.setGlobalAudio = (audioURL, bLoop)=>{\r\n    if (audioURL === undefined) return;\r\n    if (bLoop === undefined) bLoop = true;\r\n\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    if (ATON._auMain === undefined || ATON._auMain === null) ATON._auMain = new THREE.Audio( ATON.AudioHub._listener );\r\n    else if (ATON._auMain.isPlaying) ATON._auMain.stop();\r\n\r\n    ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n        ATON._auMain.setBuffer( buffer );\r\n        ATON._auMain.setLoop( bLoop );\r\n        //ATON._auMain.setVolume( 2.0 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        ATON._auMain.play();\r\n    });\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    //ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Mat\r\n    ATON.MatHub.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}