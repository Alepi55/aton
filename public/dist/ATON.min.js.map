{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","_assetsManager","then","modelVisitor","t","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","_assetReqComplete","setPickable","toggle","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","STD_FOV","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","_pmremGenerator","PMREMGenerator","_renderer","CCtarget","WebGLCubeRenderTarget","format","RGBEFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","selector","color","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","ShaderMaterial","uniforms","vertexShader","getDefVertexShader","fragmentShader","flatShading","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","magFilter","LinearFilter","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","replace","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","PATH_COLLECTION","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","urls","forEach","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","enabled","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","handleMotion","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_fromPos","_reqPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","fpTeleport","gTeleport","gSemIcons","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","_selectorRad","getSelectorRadius","setSelectorModel","path","bUseStdMat","addSemIcon","meshape","semicon","Sprite","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","needsUpdate","isOrbit","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","Audio","play","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","requestSceneState","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","audioURL","stop","setBuffer","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","useSemIcons","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeSelectorRanges","computeAndRequestDefaultHome","getDescription","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","sin","uiAddButton","toggleFullScreen","isConnectionSecure","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","elid","el","attr","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","popupVRC","getVRCclassFromID","checkAuth","sstate","popupUser","uiFunction","idbutton","inputid","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","loop","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","appid","wappid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_SCENES","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_elPanoVideo","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","preserveDrawingBuffer","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_queryDataUI","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","shadowMap","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","VideoTexture","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","PCFSoftShadowMap","_updateEnvironment","dt","getDelta","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    //this.bPickable = true;\r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            N.setPickable(N.bPickable);\r\n            N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n\r\n    this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //if (this._LP0) this._LP0.position.copy(this.pos);\r\n    //if (this._LP1) this._LP1.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBEFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n\r\n    this._envtex = CCtarget.texture;\r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.0,0.0,1.0, 0.1) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ) );\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,0,1);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n    \r\n    // Selector\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                //f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n                f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"semicon.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n                    /*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n                    */\r\n                }\r\n\r\n                // Ensure mipmapping is correct\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(ATON.PATH_COLLECTION+pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position)\r\n                .setTarget(pov.target)\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(ATON.PATH_COLLECTION+u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(ATON.PATH_COLLECTION+urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(ATON.PATH_COLLECTION+u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(ATON.PATH_COLLECTION+urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\n\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV(); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 1000.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    ATON.SUI.setSelectorRadius(0.5); // for first-person we (re)set selector radius to 0.5m\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = T.x - (r * Nav._vDir.x);\r\n    E.y = T.y - (r * Nav._vDir.y);\r\n    E.z = T.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(T);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            //optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking' ]\r\n\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\" \r\n                ///\"bounded-floor\"\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            geometry.rotateX( -Math.PI / 2 );\r\n            geometry.translate(0,0,-(raylen*0.5));\r\n\r\n            var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( mesh.clone() );\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"button\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {string} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        button.position.set((i*SUI.STD_BTN_SIZE)-m, 0.0, 0.01);\r\n        cont.add(button);\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (ATON.Nav._bInteracting){\r\n        SUI.gSemIcons.hide();\r\n    }\r\n    else {\r\n        if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n    this._auTalk = undefined;\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        M.color = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket'], \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n        if (A._auTalk === undefined || A._auTalk === null) A._auTalk = new THREE.Audio( ATON.AudioHub._listener );\r\n        else A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\nSemFactory.useSemIcons = false;\r\n\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    if (SemFactory.useSemIcons) ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    if (SemFactory.useSemIcons) ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    if (SemFactory.useSemIcons) ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        \r\n        FE.computeSelectorRanges();\r\n        ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        if (FE._bReqHome) return;\r\n\r\n        if (ATON.Nav.homePOV === undefined){\r\n            ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        }\r\n        \r\n        FE._bReqHome = true;\r\n    });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(0.5);\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n    });\r\n\r\n    ATON.on(\"frame\", FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    //$(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNavModes\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNavModes\");\r\n    FE.uiAddButtonVR(\"idNavModes\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid = undefined;\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (patch, mode, onComplete)=>{\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n    // First time\r\n    if (AppHub._appid === undefined){\r\n        let appid = $(\"meta[name='title']\").attr(\"content\");\r\n        if (appid === undefined || appid === null || appid.length < 2) return;\r\n        AppHub._appid = appid;\r\n    }\r\n\r\n    let O = {};\r\n    O.wappid = AppHub._appid;\r\n    O.data   = patch;\r\n    O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (r)=>{\r\n            if (r === undefined) return;\r\n\r\n            AppHub._appdata = r;\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} patch - a javascript object patch\r\n@param {function} onComplete - on data stored\r\n@example\r\nATON.AppHub.addToStorage({score: 20)\r\n*/\r\nAppHub.addToStorage = (patch, onComplete)=>{\r\n    AppHub._sendDataPatch(patch, ATON.PATCH_ADD, onComplete);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} patch - a javascript object patch\r\n@param {function} onComplete - on data stored\r\n@example\r\nATON.AppHub.deleteFromStorage({score: {}})\r\n*/\r\nAppHub.deleteFromStorage = (patch, onComplete)=>{\r\n    AppHub._sendDataPatch(patch, ATON.PATCH_DEL, onComplete);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {function} onComplete - on data received\r\n@example\r\nATON.AppHub.getStorage((data)=>{ console.log(data); })\r\n*/\r\nAppHub.getStorage = (onComplete)=>{\r\n    if (AppHub._appid === undefined) return;\r\n\r\n    return $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data.json\", ( data )=>{\r\n        AppHub._appdata = data;\r\n        if (onComplete) onComplete(data);\r\n    });\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        //pecision: \"mediump\"\r\n        preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0){\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n        // Bounds\r\n        let c = ATON._rootVisible.getBound().center;\r\n        let r = ATON._rootVisible.getBound().radius;\r\n\r\n        if (ATON._renderer.shadowMap.enabled){\r\n            ATON._rootVisible.traverse((o) => {\r\n                if (o.isMesh){\r\n                    o.castShadow = true;\r\n                    o.receiveShadow = true;\r\n                }\r\n            });\r\n\r\n            ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n            if (ATON._bShadowsFixedBound){\r\n                ATON.updateDirShadows(c);\r\n            }\r\n        }\r\n\r\n        if (ATON._bAutoLP){\r\n            if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n            else {\r\n                ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n            }\r\n            console.log(\"Auto LP\");\r\n        }\r\n\r\n        ATON.getRootScene().assignLightProbesByProximity();\r\n\r\n        //ATON._bDirtyLP = true;\r\n\r\n        // FIXME: dirty\r\n        setTimeout( ()=>{\r\n            if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n            ATON.updateLightProbes();\r\n        }, 1000);\r\n\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            //o.material.combine = THREE.AddOperation;\r\n            //o.material.envMapIntensity = 5.0;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n        //console.log(ATON._shadowsSize);\r\n        //console.log(c);\r\n    }\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        //ATON._dMainL.shadow.bias        = 0.0001;\r\n/*\r\n        ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n        ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n        ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n        ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n        ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n        ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n*/\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    //ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Mat\r\n    ATON.MatHub.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}