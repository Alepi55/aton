{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","b","kw","K","split","k","trim","length","c","children","C","addKeywords","s","description","au","audio","visible","Utils","setPicking","_renderer","shadowMap","enabled","needsUpdate","bPickable","hide","show","disablePicking","M","cMat","setMaterial","matSTD","matHL","f","opacity","envtex","assignLightProbeToMesh","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","clone","p","parent","removeChild","dispose","remove","num","node","N","add","bb","bs","Sphere","getBoundingSphere","x","y","z","position","copy","set","sx","sy","sz","scale","rx","ry","rz","rotation","quaternion","Nav","_qOri","T","TT","parseTransformString","push","url","onComplete","resolveCollectionURL","_assetsManager","then","modelVisitor","t","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","load","data","model","scene","_assetReqComplete","err","filename","exportNode","h","POV","target","up","STD_UPVECTOR","fov","nextPOV","prevPOV","povlist","pov","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","CCtarget","WebGLCubeRenderTarget","format","RGBAFormat","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","defUI","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","ShaderMaterial","uniforms","color","vertexShader","getDefVertexShader","fragmentShader","flatShading","selector","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","lp","lpIcon","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereBufferGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","ext","getFileExtension","index","substring","startsWith","PATH_COLLECTION","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","graphPostVisitor","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","minFilter","LinearMipmapLinearFilter","magFilter","LinearFilter","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","replace","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","_camera","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","oncomplete","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","setDescription","environment","env","pano","mainpano","setMainPanorama","setMainPanoramaRotation","L","mainlight","direction","setMainLightDirection","_dMainL","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","soundscape","global","setGlobalAudio","loop","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","setPosition","setTarget","setFOV","scenegraph","sg","G","getOrCreateSceneNode","removeChildren","transform","setRotation","setScale","list","Array","isArray","urls","forEach","u","attachTo","shadowcast","setShadowCast","shadowreceive","toYup","setYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","setAudio","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","mode","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","audioURL","Audio","setBuffer","play","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","STD_FOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","syncCurrCamera","getSelectorRadius","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","handleMotion","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_reqPos","_fromPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","getBound","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","zee","euler","q0","q1","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","Euler","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","_pointerLineGeom","_pointerLineMesh","gpad0","gpad1","_urlHand","HAND_R","defaultSelectHandler","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","teleportOnQueriedPoint","FE","playAudioFromSemanticNode","_hoveredSemNode","_hoveredUI","H","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","_handleUISelection","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","requestHome","requestSession","optionalFeatures","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","getControllerGrip","prev","lengthSq","_deltaMotionController","Button","uiid","baseColor","switchColor","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","_trigger","PlaneGeometry","STD_BTN_SIZE","text","Label","init","mainSelector","getMaterial","fpTeleport","gTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","gSemIcons","enableLPIcons","gLPIcons","enableSemIcons","_selectorRad","setSelectorModel","path","bUseStdMat","setSelectorColor","addSemIcon","meshape","semicon","Sprite","addLPIcon","rn","lpicon","setSemIconsOpacity","infoNode","attachToRoot","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","cont","button","mlArr","attributes","array","gLine","setBaseColor","setTextColor","setText","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","orientToCamera","_bPauseQuery","isOrbit","_queryDataUI","_queryDataSem","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","PositionalAudio","setRefDistance","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","avaMats","SphereGeometry","usermaterial","getAvatarMaterialByUID","smesh","usermeshnode","setCloneOnLoadHit","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","msg","vol","fp","_tgtFocusRad","D","USER_STATE_FREQ","cs","ts","slerp","handleStateTransition","handleFocusTransition","avol","shift","onended","setTalkVolume","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","setInterval","sendState","_lastStateSent","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","requestSceneEnter","sceneid","requestSceneState","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","setUsername","append","setMessage","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","requestStateTransition","requestFocus","uname","getUsername","isPlaying","stop","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","loadRepresentation","destroyAvatar","destroy","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","setDefaultAndHighlightMaterials","offset","addConvexPoint","Object3D","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeAndRequestDefaultHome","getDescription","computeSelectorRanges","_handleHomeReq","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","attr","PATH_SCENES","sin","uiAddButton","toggleFullScreen","isConnectionSecure","toggle","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","endsWith","slice","elid","el","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","popupVRC","getVRCclassFromID","checkAuth","sstate","popupUser","uiFunction","idbutton","inputid","val","regReplace","RegExp","htmlcontent","chk","auLib","switch","getAudio","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","setTimeout","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","keypress","keycode","keyCode","which","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","wappid","fid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_THREE","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_onUserInteraction","_elPanoVideo","_vpanoPlaying","context","state","resume","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_handleQueryScene","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","profileDevice","Clock","WebGLRenderer","antialias","powerPreference","_fps","_avgFPScount","_avgFPSaccum","_avgFPS","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","_bUserInts","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_bAutoLP","_envMapInt","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_bQuerySemOcclusion","_bQueryNormals","_rcScene","Raycaster","_rcSemantics","_rcUI","_wappID","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","_onAllReqsCompleted","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","setNear","assignLightProbesByProximity","_postAllReqsCompleted","updateLightProbes","Scene","setAsRoot","ambLight","AmbientLight","setBackgroundColor","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","combine","AddOperation","envMapIntensity","tpano","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","onplaying","VideoTexture","_matMainPano","_gMainPano","fog","frustumCulled","setMainPanoramaRadius","onAfterRender","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","shadow","camera","left","right","bottom","top","mapSize","normalBias","PCFSoftShadowMap","_updateEnvironment","bLoop","_auMain","dt","getDelta","clientX","clientY","_registerRCS","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._renderer.shadowMap.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._renderer.shadowMap.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n\r\n        //this.toggle(N.visible);\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n\r\n    //this.toggle(this._rootG.visible);\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model (local to collection or complete)\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    url = ATON.Utils.resolveCollectionURL(url);\r\n\r\n    let N = this;\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    if (N.type === ATON.NTYPES.SCENE) ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            console.log(err);\r\n            //reject(model);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = undefined; //ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n/*\r\n    this._LP = new THREE.LightProbe();\r\n    this._LP.intensity = 10;\r\n    ATON._mainRoot.add( this._LP );\r\n*/\r\n    \r\n    //this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //this._LP.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBAFormat, //THREE.RGBEFormat,\r\n        //generateMipmaps: true,\r\n        //minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal );\r\n    this._envtex = CCtarget.texture;\r\n\r\n    // new\r\n    //this._LP.copy( THREE.LightProbeGenerator.fromCubeRenderTarget(ATON._renderer, CCtarget) );\r\n    //this._envtex = this._LP;\r\n    \r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        let handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        let evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    let ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.2,0.2,1.0, 0.2) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n\r\n    MatHub.colors.defUI  = new THREE.Color(0,1,0.5);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,1,0.5);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n\r\n    // Default UI\r\n    MatHub.materials.defUI = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            color: { type:'vec3', value: MatHub.colors.defUI },\r\n            opacity: { type:'float', value: 0.8 }\r\n        },\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n            uniform vec3 color;\r\n            uniform float opacity;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.2, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(color.rgb, f * opacity);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n    \r\n    // Selector\r\n    MatHub.materials.selector = MatHub.materials.defUI.clone();\r\n\r\n/*\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n*/\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = MatHub.materials.defUI.clone();\r\n    MatHub.materials.controllerRay.uniforms.color.value = MatHub.colors.white;\r\n/*\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n*/\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                //float ff = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\r\n\r\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n                //gl_FragColor = vec4(tint.rgb, ff);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-sem.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n\r\n    MatHub.materials.lp = new THREE.ShaderMaterial({ \r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        flatShading: false\r\n    }); \r\n\r\n    MatHub.lpIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-lp.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        depthWrite: false, \r\n        //depthTest: false\r\n    });\r\n\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n    MatHub.lpIcon.sizeAttenuation  = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.resolveCollectionURL = (url)=>{\r\n    if (url.startsWith(\"http\")) return url;\r\n    \r\n    return ATON.PATH_COLLECTION+url;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n};\r\n\r\nUtils.graphPostVisitor = (N)=>{\r\n    //if (N.type === undefined) return;\r\n\r\n    if (!N.visible){\r\n        Utils.setPicking(N, N.type, false);\r\n        return;\r\n    }\r\n\r\n    for (let c in N.children){\r\n        let C = N.children[c];\r\n        Utils.graphPostVisitor(C);\r\n    }\r\n\r\n    console.log(N);\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n        // perf.\r\n        // TODO: manually call object.updateMatrix()\r\n        //o.matrixAutoUpdate = false;\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize bounds\r\n/*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n*/\r\n                }\r\n\r\n                // Fix mipmapping\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    //o.material.map.generateMipmaps = false;\r\n                    o.material.map.anisotropy = ATON.device.isMobile? 0 : ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} oncomplete - Function to be called on complete\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, oncomplete)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (oncomplete) oncomplete();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // Soundscape\r\n    SceneHub._jsonParsers.soundscape = (soundscape)=>{\r\n        if (soundscape === undefined) return;\r\n\r\n        if (soundscape.global){\r\n            ATON.setGlobalAudio(soundscape.global.url, soundscape.global.loop);\r\n        }\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\nAudioHub.playOnceGlobally = (audioURL)=>{\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    let au = new THREE.Audio( ATON.AudioHub._listener );\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        au.setBuffer( buffer );\r\n        //au.setVolume( 2.0 );\r\n        //au.setPlaybackRate(0.9);\r\n        au.play();\r\n    });\r\n};\r\n\r\n/* TODO:\r\nAudioHub.addToSoundscape = (auid, audioURL, position, radius)=>{\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        A._auTalk.setBuffer( buffer );\r\n        A._auTalk.setLoop( false );\r\n        //A._auTalk.setVolume( 0.5 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        A._auTalk.play();\r\n    });\r\n};\r\n*/\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.05;\r\nNav.STD_FAR  = 1000.0;\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV().setFOV(ATON.Nav.STD_FOV); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 100.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.05;\r\n        C.maxDistance = 0.05;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        let C = ATON._renderer.xr.getCamera(Nav._camera);\r\n        C.getWorldPosition( Nav._currPOV.pos );\r\n        C.getWorldQuaternion( Nav._qOri );\r\n        C.getWorldDirection( Nav._vDir );\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n        ATON.XR._currPos.copy(ATON.XR._reqPos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    //let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    //T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = bs.center.x - (r * Nav._vDir.x);\r\n    E.y = bs.center.y - (r * Nav._vDir.y);\r\n    E.z = bs.center.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(bs.center);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nSet and request home viewpoint\r\n@param {POV} pov - the home POV\r\n@param {number} duration - transition duration\r\n*/\r\nNav.setAndRequestHomePOV = (pov, duration)=>{\r\n    Nav.setHomePOV(pov);\r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR._pointerLineGeom = undefined;\r\n    XR._pointerLineMesh = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // for immersive sessions we (re)set selector radius to 50cm\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n\tATON._renderer.xr.setSession( session );\r\n\tXR.currSession = session;\r\n\r\n    // Disable panorama on AR sessions\r\n    if (XR._sessionType === \"immersive-ar\"){\r\n        ATON._mainRoot.background = null;\r\n        if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n    }\r\n\r\n    // get xrRefSpace\r\n    /*\r\n    session.requestReferenceSpace('local').then((refSpace) => {\r\n        xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n    });\r\n    */\r\n\r\n    for (let c = 0; c < 2; c++){\r\n        const C = ATON._renderer.xr.getController(c);\r\n\r\n        if (C !== undefined){\r\n            //console.log(C);\r\n\r\n            C.visible = false;\r\n\r\n            C.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n                let hand = e.data.handedness;\r\n                \r\n                //console.log(e.data);\r\n                console.log(\"Hand \"+hand);\r\n\r\n                if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                else {\r\n                    if (hand === \"right\") XR._setupControllerR(C, true);\r\n                    else { // FIXME:\r\n\r\n                        //XR._setupControllerR(C, false);\r\n                        \r\n                        C.addEventListener('selectstart', ()=>{\r\n                            if (XR._handleUISelection()) return;\r\n                            ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                            \r\n                            console.log(\"Head-aligned select\");\r\n                        });\r\n                        C.addEventListener('selectend', ()=>{ \r\n                            ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                        });\r\n\r\n                        ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n/*\r\n    let C0 = ATON._renderer.xr.getController(0);\r\n    let C1 = ATON._renderer.xr.getController(1);\r\n\r\n    console.log(C0);\r\n    //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n    // Controller 0\r\n    if (C0){\r\n        C0.visible = false;\r\n\r\n        C0.addEventListener( 'connected', (e) => {\r\n\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n            else XR._setupControllerR(C0);\r\n\r\n            //C0.gamepad = e.data.gamepad;\r\n            //console.log(XR.controller0.gamepad);\r\n\r\n            //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n            //let gp = C0.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n        });\r\n    }\r\n\r\n    // Controller 1\r\n    if (C1){\r\n        C1.visible = false;\r\n\r\n        C1.addEventListener( 'connected', (e) => {\r\n            //console.log( e.data.handedness );\r\n\r\n            if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n            else XR._setupControllerR(C1);\r\n\r\n            //C1.gamepad = e.data.gamepad;\r\n            \r\n            //let gp = C1.gamepad;\r\n            //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n        });\r\n    }\r\n*/\r\n\r\n    // reparent current camera to the XR rig\r\n    XR.rig.add( ATON.Nav._camera );\r\n\r\n    XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n    console.log(ATON.Nav._currPOV.pos);\r\n\r\n    XR._bPresenting = true;\r\n    console.log(\"XR now presenting\");\r\n\r\n    //XR.setupControllersUI();\r\n\r\n    ATON.fireEvent(\"XRmode\", true);\r\n\r\n    //console.log(session);\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            optionalFeatures: [\r\n                \"local\",\r\n                //\"local-floor\",\r\n                ///\"bounded-floor\",\r\n\r\n                //\"hand-tracking\",\r\n\r\n                //\"high-refresh-rate\",\r\n                //\"high-fixed-foveation-level\",\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 1.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            XR._pointerLineGeom = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            XR._pointerLineGeom.rotateX( -Math.PI / 2 );\r\n            XR._pointerLineGeom.translate(0,0,-(raylen*0.5));\r\n\r\n            XR._pointerLineMesh = new THREE.Mesh( XR._pointerLineGeom, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( /*mesh.clone()*/ XR._pointerLineMesh );\r\n            XR._pointerLineMesh.visible = false;\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    //this.uiText.position.set(0,0,-0.01);\r\n    this.container.add(this.uiText);\r\n\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\nsetBackgroundOpacity(f){\r\n    this.container.set({ backgroundOpacity: f });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI.mainSelector.add( new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") ));\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.3, 32,1, true);\r\n    SUI.fpTeleport.add( new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") ));\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    //SUI.enableSemIcons();\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        if (SUI.gSemIcons) SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        if (SUI.gSemIcons) SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    //SUI._sync = 0;\r\n};\r\n\r\n// note: before adding LPs\r\nSUI.enableLPIcons = ()=>{\r\n    SUI.gLPIcons = ATON.createUINode();\r\n    SUI.gLPIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gLPIcons);\r\n};\r\n\r\n\r\nSUI.enableSemIcons = ()=>{\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n/**\r\nSet selector color\r\n@param {THREE.Color} color - color\r\n@param {number} opacity - (optional) opacity \r\n*/\r\nSUI.setSelectorColor = (color, opacity)=>{\r\n    ATON.MatHub.materials.selector.uniforms.color.value = color;\r\n    if (opacity !== undefined) ATON.MatHub.materials.selector.uniforms.opacity.value = opacity;\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    if (SUI.gSemIcons === undefined) return;\r\n\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.addLPIcon = (LP)=>{\r\n    if (SUI.gLPIcons === undefined) return;\r\n\r\n    let rn = LP._near;\r\n    let isize = 0.1; //rn * 0.3;\r\n\r\n    let lpicon = new THREE.Sprite( ATON.MatHub.lpIcon );\r\n    lpicon.position.copy(LP.pos);\r\n    lpicon.scale.set(isize,isize,isize);\r\n\r\n    let s = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.materials.lp );\r\n    s.scale.set(rn,rn,rn);\r\n    s.position.copy(LP.pos);\r\n\r\n    SUI.gLPIcons.add( lpicon );\r\n    SUI.gLPIcons.add( s );\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    //ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {array} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n    let marginf = 1.1;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num * marginf) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE * marginf;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        if (button){\r\n            button.position.set((i*SUI.STD_BTN_SIZE*marginf)-m, 0.0, 0.005);\r\n            cont.add(button);\r\n        }\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n\r\n    //SUI._sync = (SUI._sync+1) % 10;\r\n    //if (SUI._sync===0) ThreeMeshUI.update();\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (SUI.gSemIcons){\r\n        if (ATON.Nav._bInteracting){\r\n            SUI.gSemIcons.hide();\r\n        }\r\n        else {\r\n            if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n        }\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Pointer-line\r\n    if (ATON.XR._pointerLineMesh){\r\n        let d = 0.0;\r\n        if (ATON._queryDataScene) d = ATON._queryDataScene.d;\r\n        if (ATON._queryDataUI && (d <= 0.0 || ATON._queryDataUI.d<d)){\r\n            d = ATON._queryDataUI.d;\r\n            SUI.mainSelector.visible = false;\r\n            SUI.fpTeleport.visible   = false;\r\n        }\r\n\r\n        if (d>0.0){\r\n            ATON.XR._pointerLineMesh.visible = true;\r\n            ATON.XR._pointerLineMesh.scale.set(1,1,d);\r\n        }\r\n        else ATON.XR._pointerLineMesh.visible = false;\r\n    }\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.y += 0.1;\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScale);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n\r\n    //this._auTalk = undefined;\r\n\r\n    // Positional audio (talk)\r\n    this._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n    this._auTalk.setRefDistance(30.0);\r\n    this.add(this._auTalk); // move with avatar\r\n\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\nsetTalkDistance(r){\r\n    if (r > 0.0) this._auTalk.setRefDistance(r);\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = ATON.MatHub.materials.defUI.clone();\r\n    mat.uniforms.color.value = VRoadcast.ucolors[0];\r\n/*\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n*/\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        //M.color = VRoadcast.ucolors[c];\r\n        M.uniforms.color.value = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest enter in a given scene. \r\nNote: this routine does not load the scene itself, instead it tells the VRoadcast service we want to connect to the given scene.\r\n@param {string} sceneid - the scene id (sid)\r\n@example\r\nATON.VRoadcast.requestSceneEnter(\"testscene\");\r\n*/\r\nVRoadcast.requestSceneEnter = (sceneid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (sceneid === undefined) sceneid = ATON.SceneHub.currID;\r\n\r\n    if (sceneid === undefined){\r\n        console.log(\"VRC ERROR: current scene ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"SENTER\", sceneid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket']; \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n        //opts.transports = ['websocket'];\r\n        //opts.upgrade = false;\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // Request enter in scene node (room)\r\n        if (ATON.SceneHub.currID !== undefined) VRoadcast.requestSceneEnter();\r\n        \r\n        console.log(\"VRC connected, entering scene: \"+ATON.SceneHub.currID);\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n/*\r\n        if (A._auTalk === undefined || A._auTalk === null){\r\n            A._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n            A._auTalk.setRefDistance(50.0);\r\n            A.add(A._auTalk);\r\n        }\r\n        else A._auTalk.stop();\r\n*/\r\n        if (A._auTalk.isPlaying) A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n        \r\n\r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    if (ATON.SUI.gSemIcons === undefined) return true;\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\nFE._handleHomeReq = ()=>{\r\n    if (FE._bReqHome) return;\r\n\r\n    FE._bReqHome = true;\r\n\r\n    if (ATON.Nav.homePOV === undefined){\r\n        ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        return;\r\n    }\r\n    \r\n    ATON.Nav.requestHome(0.5);\r\n    //console.log(ATON.Nav.homePOV);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(0.2);\r\n    });\r\n\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        \r\n        FE.computeSelectorRanges();\r\n        if (ATON.Nav.isOrbit()) ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        FE._handleHomeReq();\r\n    });\r\n\r\n    ATON.on(\"frame\", FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    $(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:secure_url]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:type]\").attr(\"content\", \"image/png\");\r\n    $(\"meta[property=og\\\\:image\\\\:width]\").attr(\"content\", \"200\");\r\n    $(\"meta[property=og\\\\:image\\\\:height]\").attr(\"content\", \"200\");\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    if (FE._bControlLight){\r\n        let sx = ATON._screenPointerCoords.x;\r\n        let sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        let D = new THREE.Vector3();\r\n        D.x = -Math.cos(sx * Math.PI);\r\n        D.y = -sy * 2.0;\r\n        D.z = -Math.sin(sx * Math.PI);\r\n\r\n        D.normalize();\r\n\r\n        ATON.setMainLightDirection(D);\r\n        //ATON.updateDirShadows();\r\n    }\r\n\r\n    if (FE._bControlSelScale){\r\n        //let sx = ATON._screenPointerCoords.x;\r\n        let f = ATON._screenPointerCoords.y;\r\n\r\n        let r = ATON.SUI.mainSelector.scale.x;\r\n        r += f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n        ATON.SUI.setSelectorColor(ATON.VRoadcast.ucolors[uid%6]);\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n        ATON.SUI.setSelectorColor(ATON.MatHub.colors.defUI);\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    //console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    //htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n    htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMfp'></div>\";\r\n    htmlcontent +=\"<div style='text-align:left'>Switch between first-person and orbit navigation mode</div>\";\r\n    htmlcontent += \"</div>\";\r\n\r\n    if (ATON.Utils.isConnectionSecure()){\r\n        htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n        htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMvr'></div>\";\r\n        htmlcontent +=\"<div style='text-align:left'>Immersive VR mode</div>\";\r\n        htmlcontent += \"</div>\";\r\n\r\n        if (ATON.Utils.isMobile()){\r\n            htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n            htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div>\";\r\n            htmlcontent +=\"<div style='text-align:left'>Enable or disable device-orientation mode</div>\";\r\n            htmlcontent += \"</div>\";\r\n        }\r\n    }\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNMfp\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNMdevori\");\r\n    FE.uiAddButtonVR(\"idNMvr\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n//import AppData from \"./ATON.appdata.js\";\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid   = $(\"meta[name='aton\\\\:appid']\").attr(\"content\");\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (id, patch, mode)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n        if (id.length < 3){\r\n            reject(\"Storage ID too short\");\r\n            return;\r\n        }\r\n        if (patch === undefined){\r\n            reject(\"No storage patch\");\r\n            return;\r\n        }\r\n        if (AppHub._appid === undefined){\r\n            reject(\"No app-ID\");\r\n            return;\r\n        }\r\n\r\n        if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n        let O = {};\r\n        O.wappid = AppHub._appid;\r\n        O.fid    = id;\r\n        O.data   = patch;\r\n        O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n        let jstr = JSON.stringify(O);\r\n        //console.log(jstr);\r\n\r\n        $.ajax({\r\n            url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n            type:\"POST\",\r\n            data: jstr,\r\n            contentType:\"application/json; charset=utf-8\",\r\n            dataType:\"json\",\r\n\r\n            success: (r)=>{\r\n                if (r === undefined){\r\n                    reject(\"Error writing on server\");\r\n                    return;\r\n                }\r\n\r\n                AppHub._appdata[id] = r;\r\n                resolve(r);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.addToStorage(\"myStorage\", {score: 20}).then(...)\r\n*/\r\nAppHub.addToStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.deleteFromStorage(\"myStorage\", {score: {}}).then(...)\r\n*/\r\nAppHub.deleteFromStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {object} id - server-side storage ID\r\n@example\r\nATON.AppHub.getStorage(\"myStorage\").then((s)=>{ console.log(s); })\r\n*/\r\nAppHub.getStorage = (id)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (AppHub._appid === undefined){\r\n            reject();\r\n            return;\r\n        }\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n\r\n        $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data/\"+id+\".json\", (data)=>{\r\n            console.log(data);\r\n            AppHub._appdata[id] = data;\r\n            resolve(data);\r\n        });\r\n    });\r\n\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\nATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collection/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n// For resuming suspended audio/video streams\r\nATON._onUserInteraction = ()=>{\r\n    if (ATON._elPanoVideo && !ATON._vpanoPlaying) ATON._elPanoVideo.play();\r\n    if (ATON.AudioHub._listener.context.state === 'suspended') ATON.AudioHub._listener.context.resume();\r\n};\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        //if (ATON._elPanoVideo) ATON._elPanoVideo.play();\r\n        ATON._onUserInteraction();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        ATON._onUserInteraction();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    let wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n        powerPreference: \"high-performance\",\r\n        //pecision: \"lowp\", //\"mediump\"\r\n        //preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._avgFPScount = 0;\r\n    ATON._avgFPSaccum = 0;\r\n    ATON._avgFPS = 60;\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    // Multimedia\r\n    ATON._vpanoPlaying = false;\r\n    ATON._bUserInts = 0;\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    ATON._envMapInt = 1.0;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n    // Basis (future support)\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    //ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n\r\n/*  dynamic px density\r\n    window.setInterval(() => {\r\n        if (ATON._avgFPScount <= 0) return;\r\n\r\n        ATON._avgFPS = ATON._avgFPSaccum / ATON._avgFPScount;\r\n        console.log(ATON._avgFPS);\r\n\r\n        let d = ATON._renderer.getPixelRatio();\r\n\r\n        if (ATON._avgFPS < 30.0){\r\n            d *= 0.75;\r\n            ATON._renderer.setPixelRatio( d );\r\n        } \r\n        if (ATON._avgFPS > 50.0){\r\n            d *= 1.33;\r\n            if (d <= ATON._stdpxd) ATON._renderer.setPixelRatio( d );\r\n        } \r\n\r\n        ATON._avgFPSaccum = 0.0;\r\n        ATON._avgFPScount = 0;\r\n    }, 2000);\r\n*/\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\n\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0) ATON._onAllReqsCompleted();\r\n};\r\n\r\nATON._onAllReqsCompleted = ()=>{\r\n    // Bounds\r\n    let c = ATON._rootVisible.getBound().center;\r\n    let r = ATON._rootVisible.getBound().radius;\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            ATON.updateDirShadows(c);\r\n        }\r\n    }\r\n\r\n    if (ATON._bAutoLP){\r\n        if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n        else {\r\n            ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n        }\r\n        console.log(\"Auto LP\");\r\n    }\r\n\r\n    //ATON.Utils.graphPostVisitor(ATON._rootVisible);\r\n\r\n    // re-center main pano\r\n    if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n\r\n    ATON.getRootScene().assignLightProbesByProximity();\r\n    //ATON.updateLightProbes();\r\n\r\n    //ATON._bDirtyLP = true;\r\n\r\n    ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n    ATON._postAllReqsCompleted();\r\n\r\n    // FIXME: dirty\r\n    setTimeout( ()=>{\r\n        //if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n        ATON.updateLightProbes();\r\n        //if (ATON._renderer.shadowMap.enabled && ATON._bShadowsFixedBound) ATON._dMainL.shadow.autoUpdate = false;\r\n    }, 1000);\r\n};\r\n\r\nATON._postAllReqsCompleted = (R)=>{\r\n    if (R === undefined) R = ATON._rootVisible;\r\n\r\n    for (let n in R.children){\r\n        let N = R.children[n];\r\n\r\n        if (N && N.toggle){\r\n            ATON._postAllReqsCompleted(N);\r\n            N.toggle(N.visible);\r\n            //if (N.bPickable !== undefined) N.setPickable(N.bPickable);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    //ATON._rootUI.renderOrder = 10;\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n\r\n    // SUI\r\n    if (ATON.SUI.gLPIcons === undefined) return;\r\n    SUI.addLPIcon(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps){\r\n        ATON._lps[i].update();\r\n/*\r\n        if (ATON._indLPs === undefined) ATON._indLPs = [];\r\n        if (ATON._indLPs[i]) ATON._mainRoot.remove(ATON._indLPs[i]);\r\n\r\n        ATON._indLPs[i] = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[i]._prevCCtarget );\r\n        ATON._indLPs[i].intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLPs[i] );\r\n\r\n        console.log(ATON._mainRoot);\r\n*/\r\n    }\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._indLP.intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            o.material.combine = THREE.AddOperation;\r\n            o.material.envMapIntensity = ATON._envMapInt;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    path = ATON.Utils.resolveCollectionURL(path);\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n\r\n            ATON._elPanoVideo.onplaying = ()=>{\r\n                console.log(\"VideoPano playing\");\r\n                ATON._vpanoPlaying = true;\r\n            };\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //console.log(ATON._elPanoVideo);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n    }\r\n\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    // First time: create it\r\n    ATON._gMainPano = new THREE.SphereBufferGeometry( 1.0, 60,60 );\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano, \r\n        //emissive: tpano,\r\n        //castShadow: false,\r\n        //receiveShadow: false,\r\n        fog: false,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        //depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.9);\r\n\r\n    ATON._mMainPano.onAfterRender = ()=>{\r\n        //if (ATON._numReqLoad > 0) return;\r\n        ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n    };\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n        //ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n        //ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n\r\n        //console.log(ATON._shadowsNear,ATON._shadowsFar);\r\n    }\r\n\r\n    // must dispose when changing shadow params\r\n    if (ATON._dMainL.shadow.map){\r\n        ATON._dMainL.shadow.map.dispose();\r\n        ATON._dMainL.shadow.map = null;\r\n    }\r\n\r\n    //console.log(ATON._dMainL.shadow.camera);\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n    //ATON._dMainL.shadow.camera.updateProjectionMatrix();\r\n\r\n    //ATON._dMainL.shadow.bias = -0.0005;\r\n    ATON._dMainL.shadow.normalBias = 0.05;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n// main audio\r\nATON.setGlobalAudio = (audioURL, bLoop)=>{\r\n    if (audioURL === undefined) return;\r\n    if (bLoop === undefined) bLoop = true;\r\n\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    if (ATON._auMain === undefined || ATON._auMain === null) ATON._auMain = new THREE.Audio( ATON.AudioHub._listener );\r\n    else if (ATON._auMain.isPlaying) ATON._auMain.stop();\r\n\r\n    ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n        ATON._auMain.setBuffer( buffer );\r\n        ATON._auMain.setLoop( bLoop );\r\n        //ATON._auMain.setVolume( 2.0 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        ATON._auMain.play();\r\n    });\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    let dt = ATON._clock.getDelta();\r\n\r\n    ATON._fps = 1.0 / dt;\r\n    ATON._dt  = dt;\r\n\r\n    // avg fps\r\n    //ATON._avgFPScount++;\r\n    //ATON._avgFPSaccum += ATON._fps;\r\n    \r\n    //ATON.Nav._bControlChange = false;\r\n    ATON.Nav._controls.update(dt);\r\n\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n/*\r\n    if (ATON.Nav._bControlChange){\r\n        }\r\n    else {\r\n        //ATON._handleScreenPick();\r\n        }\r\n*/\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries();\r\n\r\n    // Navigation system\r\n    ATON.Nav.update();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // UI\r\n    ATON.SUI.update();\r\n\r\n    // Mat\r\n    ATON.MatHub.update();\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    ATON.fireEvent(\"frame\");\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // round-robin\r\n    //ATON._rcRR = (ATON._rcRR+1) % 2;\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n\r\n    ATON._handleQueryScene();\r\n    ATON._handleQuerySemantics();\r\n    ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    let hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            let S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        return;\r\n    }\r\n\r\n    let h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    let L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    let hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                let S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            let S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}